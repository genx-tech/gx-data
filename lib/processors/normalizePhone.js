"use strict";

require("source-map-support/register");

const {
  _
} = require('rk-utils');

const {
  ValidationError
} = require('../utils/Errors');

function normalizePhone(phone, defaultArea) {
  if (phone) {
    phone = phone.trim();

    if (phone.length > 0) {
      let s = phone[0];

      if (s === '+') {} else if (s === '0') {
        if (phone[1] === '0') {
          phone = '+' + phone.substr(2);
        } else {
          if (defaultArea == null) {
            throw new ValidationError('The mobile phone number must be supplied with a country code.', {
              data: phone
            });
          }

          phone = defaultArea + phone.substr(1);
        }
      } else {
        if (defaultArea == null) {
          throw new ValidationError('The mobile phone number must be supplied with a country code.', {
            data: phone
          });
        }

        phone = defaultArea + phone;
      }

      let leftB = phone.indexOf('(');
      let rightB = phone.indexOf(')');

      if (leftB > 0 && rightB > leftB) {
        phone = phone.substr(0, leftB) + _.trimStart(phone.substring(leftB + 1, rightB), '0') + phone.substr(rightB + 1);
      }

      phone = phone.replace(/\ |\-/g, '');
    }
  }

  return phone;
}

module.exports = normalizePhone;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wcm9jZXNzb3JzL25vcm1hbGl6ZVBob25lLmpzIl0sIm5hbWVzIjpbIl8iLCJyZXF1aXJlIiwiVmFsaWRhdGlvbkVycm9yIiwibm9ybWFsaXplUGhvbmUiLCJwaG9uZSIsImRlZmF1bHRBcmVhIiwidHJpbSIsImxlbmd0aCIsInMiLCJzdWJzdHIiLCJkYXRhIiwibGVmdEIiLCJpbmRleE9mIiwicmlnaHRCIiwidHJpbVN0YXJ0Iiwic3Vic3RyaW5nIiwicmVwbGFjZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBUUMsT0FBTyxDQUFDLFVBQUQsQ0FBckI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQXNCRCxPQUFPLENBQUMsaUJBQUQsQ0FBbkM7O0FBRUEsU0FBU0UsY0FBVCxDQUF3QkMsS0FBeEIsRUFBK0JDLFdBQS9CLEVBQTRDO0FBQ3hDLE1BQUlELEtBQUosRUFBVztBQUNQQSxJQUFBQSxLQUFLLEdBQUdBLEtBQUssQ0FBQ0UsSUFBTixFQUFSOztBQUVBLFFBQUlGLEtBQUssQ0FBQ0csTUFBTixHQUFlLENBQW5CLEVBQXNCO0FBQ2xCLFVBQUlDLENBQUMsR0FBR0osS0FBSyxDQUFDLENBQUQsQ0FBYjs7QUFDQSxVQUFJSSxDQUFDLEtBQUssR0FBVixFQUFlLENBRWQsQ0FGRCxNQUVPLElBQUlBLENBQUMsS0FBSyxHQUFWLEVBQWU7QUFDbEIsWUFBSUosS0FBSyxDQUFDLENBQUQsQ0FBTCxLQUFhLEdBQWpCLEVBQXNCO0FBQ2xCQSxVQUFBQSxLQUFLLEdBQUcsTUFBTUEsS0FBSyxDQUFDSyxNQUFOLENBQWEsQ0FBYixDQUFkO0FBQ0gsU0FGRCxNQUVPO0FBQ0gsY0FBSUosV0FBVyxJQUFJLElBQW5CLEVBQXlCO0FBQ3JCLGtCQUFNLElBQUlILGVBQUosQ0FBb0IsK0RBQXBCLEVBQXFGO0FBQ3ZGUSxjQUFBQSxJQUFJLEVBQUVOO0FBRGlGLGFBQXJGLENBQU47QUFHSDs7QUFDREEsVUFBQUEsS0FBSyxHQUFHQyxXQUFXLEdBQUdELEtBQUssQ0FBQ0ssTUFBTixDQUFhLENBQWIsQ0FBdEI7QUFDSDtBQUNKLE9BWE0sTUFXQTtBQUNILFlBQUlKLFdBQVcsSUFBSSxJQUFuQixFQUF5QjtBQUNyQixnQkFBTSxJQUFJSCxlQUFKLENBQW9CLCtEQUFwQixFQUFxRjtBQUN2RlEsWUFBQUEsSUFBSSxFQUFFTjtBQURpRixXQUFyRixDQUFOO0FBR0g7O0FBQ0RBLFFBQUFBLEtBQUssR0FBR0MsV0FBVyxHQUFHRCxLQUF0QjtBQUNIOztBQUVELFVBQUlPLEtBQUssR0FBR1AsS0FBSyxDQUFDUSxPQUFOLENBQWMsR0FBZCxDQUFaO0FBQ0EsVUFBSUMsTUFBTSxHQUFHVCxLQUFLLENBQUNRLE9BQU4sQ0FBYyxHQUFkLENBQWI7O0FBRUEsVUFBSUQsS0FBSyxHQUFHLENBQVIsSUFBYUUsTUFBTSxHQUFHRixLQUExQixFQUFpQztBQUM3QlAsUUFBQUEsS0FBSyxHQUFHQSxLQUFLLENBQUNLLE1BQU4sQ0FBYSxDQUFiLEVBQWdCRSxLQUFoQixJQUF5QlgsQ0FBQyxDQUFDYyxTQUFGLENBQVlWLEtBQUssQ0FBQ1csU0FBTixDQUFnQkosS0FBSyxHQUFDLENBQXRCLEVBQXlCRSxNQUF6QixDQUFaLEVBQThDLEdBQTlDLENBQXpCLEdBQThFVCxLQUFLLENBQUNLLE1BQU4sQ0FBYUksTUFBTSxHQUFDLENBQXBCLENBQXRGO0FBQ0g7O0FBRURULE1BQUFBLEtBQUssR0FBR0EsS0FBSyxDQUFDWSxPQUFOLENBQWMsUUFBZCxFQUF3QixFQUF4QixDQUFSO0FBQ0g7QUFDSjs7QUFFRCxTQUFPWixLQUFQO0FBQ0g7O0FBRURhLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmYsY0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IF8gfSA9IHJlcXVpcmUoJ3JrLXV0aWxzJyk7XG5jb25zdCB7IFZhbGlkYXRpb25FcnJvciB9ID0gcmVxdWlyZSgnLi4vdXRpbHMvRXJyb3JzJyk7XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZVBob25lKHBob25lLCBkZWZhdWx0QXJlYSkge1xuICAgIGlmIChwaG9uZSkge1xuICAgICAgICBwaG9uZSA9IHBob25lLnRyaW0oKTtcbiAgICAgICAgXG4gICAgICAgIGlmIChwaG9uZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBsZXQgcyA9IHBob25lWzBdO1xuICAgICAgICAgICAgaWYgKHMgPT09ICcrJykge1xuICAgICAgICAgICAgICAgIC8vbm90aGluZ1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzID09PSAnMCcpIHtcbiAgICAgICAgICAgICAgICBpZiAocGhvbmVbMV0gPT09ICcwJykge1xuICAgICAgICAgICAgICAgICAgICBwaG9uZSA9ICcrJyArIHBob25lLnN1YnN0cigyKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGVmYXVsdEFyZWEgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcignVGhlIG1vYmlsZSBwaG9uZSBudW1iZXIgbXVzdCBiZSBzdXBwbGllZCB3aXRoIGEgY291bnRyeSBjb2RlLicsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBwaG9uZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcGhvbmUgPSBkZWZhdWx0QXJlYSArIHBob25lLnN1YnN0cigxKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChkZWZhdWx0QXJlYSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoJ1RoZSBtb2JpbGUgcGhvbmUgbnVtYmVyIG11c3QgYmUgc3VwcGxpZWQgd2l0aCBhIGNvdW50cnkgY29kZS4nLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBwaG9uZVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcGhvbmUgPSBkZWZhdWx0QXJlYSArIHBob25lO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsZXQgbGVmdEIgPSBwaG9uZS5pbmRleE9mKCcoJyk7XG4gICAgICAgICAgICBsZXQgcmlnaHRCID0gcGhvbmUuaW5kZXhPZignKScpO1xuXG4gICAgICAgICAgICBpZiAobGVmdEIgPiAwICYmIHJpZ2h0QiA+IGxlZnRCKSB7XG4gICAgICAgICAgICAgICAgcGhvbmUgPSBwaG9uZS5zdWJzdHIoMCwgbGVmdEIpICsgXy50cmltU3RhcnQocGhvbmUuc3Vic3RyaW5nKGxlZnRCKzEsIHJpZ2h0QiksICcwJykgKyBwaG9uZS5zdWJzdHIocmlnaHRCKzEpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBwaG9uZSA9IHBob25lLnJlcGxhY2UoL1xcIHxcXC0vZywgJycpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHBob25lO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG5vcm1hbGl6ZVBob25lOyJdfQ==