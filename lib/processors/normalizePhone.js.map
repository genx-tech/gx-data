{"version":3,"file":"normalizePhone.js","names":["_","require","ValidationError","normalizePhone","phone","defaultArea","trim","length","leftB","indexOf","rightB","substr","trimStart","substring","replace","s","data","module","exports"],"sources":["../../src/processors/normalizePhone.js"],"sourcesContent":["const { _ } = require('@genx/july');\nconst { ValidationError } = require('../utils/Errors');\n\nfunction normalizePhone(phone, defaultArea) {\n    if (phone) {\n        phone = phone.trim();\n\n        if (phone.length > 0) {\n            const leftB = phone.indexOf('(');\n            const rightB = phone.indexOf(')');\n\n            if (leftB >= 0 && rightB > leftB) {\n                phone =\n                    phone.substr(0, leftB) +\n                    _.trimStart(phone.substring(leftB + 1, rightB), '0') +\n                    phone.substr(rightB + 1);\n            }\n\n            phone = phone.replace(/ |-/g, '');\n\n            const s = phone[0];\n\n            if (s === '+') {\n                // nothing\n            } else if (s === '0') {\n                if (phone[1] === '0') {\n                    phone = '+' + phone.substr(2);\n                } else {\n                    if (defaultArea == null) {\n                        throw new ValidationError(\n                            'The mobile phone number must be supplied with a country code.',\n                            {\n                                data: phone,\n                            }\n                        );\n                    }\n                    phone = defaultArea + phone.substr(1);\n                }\n            } else {\n                if (defaultArea == null) {\n                    throw new ValidationError(\n                        'The mobile phone number must be supplied with a country code.',\n                        {\n                            data: phone,\n                        }\n                    );\n                }\n                phone = defaultArea + phone;\n            }\n        }\n    }\n\n    return phone;\n}\n\nmodule.exports = normalizePhone;\n"],"mappings":";;;AAAA,MAAM;EAAEA;AAAE,CAAC,GAAGC,OAAO,CAAC,YAAY,CAAC;AACnC,MAAM;EAAEC;AAAgB,CAAC,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAEtD,SAASE,cAAcA,CAACC,KAAK,EAAEC,WAAW,EAAE;EACxC,IAAID,KAAK,EAAE;IACPA,KAAK,GAAGA,KAAK,CAACE,IAAI,EAAE;IAEpB,IAAIF,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;MAClB,MAAMC,KAAK,GAAGJ,KAAK,CAACK,OAAO,CAAC,GAAG,CAAC;MAChC,MAAMC,MAAM,GAAGN,KAAK,CAACK,OAAO,CAAC,GAAG,CAAC;MAEjC,IAAID,KAAK,IAAI,CAAC,IAAIE,MAAM,GAAGF,KAAK,EAAE;QAC9BJ,KAAK,GACDA,KAAK,CAACO,MAAM,CAAC,CAAC,EAAEH,KAAK,CAAC,GACtBR,CAAC,CAACY,SAAS,CAACR,KAAK,CAACS,SAAS,CAACL,KAAK,GAAG,CAAC,EAAEE,MAAM,CAAC,EAAE,GAAG,CAAC,GACpDN,KAAK,CAACO,MAAM,CAACD,MAAM,GAAG,CAAC,CAAC;MAChC;MAEAN,KAAK,GAAGA,KAAK,CAACU,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;MAEjC,MAAMC,CAAC,GAAGX,KAAK,CAAC,CAAC,CAAC;MAElB,IAAIW,CAAC,KAAK,GAAG,EAAE,CAEf,CAAC,MAAM,IAAIA,CAAC,KAAK,GAAG,EAAE;QAClB,IAAIX,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;UAClBA,KAAK,GAAG,GAAG,GAAGA,KAAK,CAACO,MAAM,CAAC,CAAC,CAAC;QACjC,CAAC,MAAM;UACH,IAAIN,WAAW,IAAI,IAAI,EAAE;YACrB,MAAM,IAAIH,eAAe,CACrB,+DAA+D,EAC/D;cACIc,IAAI,EAAEZ;YACV,CAAC,CACJ;UACL;UACAA,KAAK,GAAGC,WAAW,GAAGD,KAAK,CAACO,MAAM,CAAC,CAAC,CAAC;QACzC;MACJ,CAAC,MAAM;QACH,IAAIN,WAAW,IAAI,IAAI,EAAE;UACrB,MAAM,IAAIH,eAAe,CACrB,+DAA+D,EAC/D;YACIc,IAAI,EAAEZ;UACV,CAAC,CACJ;QACL;QACAA,KAAK,GAAGC,WAAW,GAAGD,KAAK;MAC/B;IACJ;EACJ;EAEA,OAAOA,KAAK;AAChB;AAEAa,MAAM,CAACC,OAAO,GAAGf,cAAc"}