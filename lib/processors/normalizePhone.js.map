{"version":3,"sources":["../../src/processors/normalizePhone.js"],"names":["_","require","ValidationError","normalizePhone","phone","defaultArea","trim","length","leftB","indexOf","rightB","substr","trimStart","substring","replace","s","data","module","exports"],"mappings":";;;;AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAQC,OAAO,CAAC,YAAD,CAArB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAsBD,OAAO,CAAC,iBAAD,CAAnC;;AAEA,SAASE,cAAT,CAAwBC,KAAxB,EAA+BC,WAA/B,EAA4C;AACxC,MAAID,KAAJ,EAAW;AACPA,IAAAA,KAAK,GAAGA,KAAK,CAACE,IAAN,EAAR;;AAEA,QAAIF,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AAClB,YAAMC,KAAK,GAAGJ,KAAK,CAACK,OAAN,CAAc,GAAd,CAAd;AACA,YAAMC,MAAM,GAAGN,KAAK,CAACK,OAAN,CAAc,GAAd,CAAf;;AAEA,UAAID,KAAK,IAAI,CAAT,IAAcE,MAAM,GAAGF,KAA3B,EAAkC;AAC9BJ,QAAAA,KAAK,GACDA,KAAK,CAACO,MAAN,CAAa,CAAb,EAAgBH,KAAhB,IACAR,CAAC,CAACY,SAAF,CAAYR,KAAK,CAACS,SAAN,CAAgBL,KAAK,GAAG,CAAxB,EAA2BE,MAA3B,CAAZ,EAAgD,GAAhD,CADA,GAEAN,KAAK,CAACO,MAAN,CAAaD,MAAM,GAAG,CAAtB,CAHJ;AAIH;;AAEDN,MAAAA,KAAK,GAAGA,KAAK,CAACU,OAAN,CAAc,MAAd,EAAsB,EAAtB,CAAR;AAEA,YAAMC,CAAC,GAAGX,KAAK,CAAC,CAAD,CAAf;;AAEA,UAAIW,CAAC,KAAK,GAAV,EAAe,CAEd,CAFD,MAEO,IAAIA,CAAC,KAAK,GAAV,EAAe;AAClB,YAAIX,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsB;AAClBA,UAAAA,KAAK,GAAG,MAAMA,KAAK,CAACO,MAAN,CAAa,CAAb,CAAd;AACH,SAFD,MAEO;AACH,cAAIN,WAAW,IAAI,IAAnB,EAAyB;AACrB,kBAAM,IAAIH,eAAJ,CACF,+DADE,EAEF;AACIc,cAAAA,IAAI,EAAEZ;AADV,aAFE,CAAN;AAMH;;AACDA,UAAAA,KAAK,GAAGC,WAAW,GAAGD,KAAK,CAACO,MAAN,CAAa,CAAb,CAAtB;AACH;AACJ,OAdM,MAcA;AACH,YAAIN,WAAW,IAAI,IAAnB,EAAyB;AACrB,gBAAM,IAAIH,eAAJ,CACF,+DADE,EAEF;AACIc,YAAAA,IAAI,EAAEZ;AADV,WAFE,CAAN;AAMH;;AACDA,QAAAA,KAAK,GAAGC,WAAW,GAAGD,KAAtB;AACH;AACJ;AACJ;;AAED,SAAOA,KAAP;AACH;;AAEDa,MAAM,CAACC,OAAP,GAAiBf,cAAjB","sourcesContent":["const { _ } = require('@genx/july');\nconst { ValidationError } = require('../utils/Errors');\n\nfunction normalizePhone(phone, defaultArea) {\n    if (phone) {\n        phone = phone.trim();\n\n        if (phone.length > 0) {\n            const leftB = phone.indexOf('(');\n            const rightB = phone.indexOf(')');\n\n            if (leftB >= 0 && rightB > leftB) {\n                phone =\n                    phone.substr(0, leftB) +\n                    _.trimStart(phone.substring(leftB + 1, rightB), '0') +\n                    phone.substr(rightB + 1);\n            }\n\n            phone = phone.replace(/ |-/g, '');\n\n            const s = phone[0];\n\n            if (s === '+') {\n                // nothing\n            } else if (s === '0') {\n                if (phone[1] === '0') {\n                    phone = '+' + phone.substr(2);\n                } else {\n                    if (defaultArea == null) {\n                        throw new ValidationError(\n                            'The mobile phone number must be supplied with a country code.',\n                            {\n                                data: phone,\n                            }\n                        );\n                    }\n                    phone = defaultArea + phone.substr(1);\n                }\n            } else {\n                if (defaultArea == null) {\n                    throw new ValidationError(\n                        'The mobile phone number must be supplied with a country code.',\n                        {\n                            data: phone,\n                        }\n                    );\n                }\n                phone = defaultArea + phone;\n            }\n        }\n    }\n\n    return phone;\n}\n\nmodule.exports = normalizePhone;\n"],"file":"normalizePhone.js"}