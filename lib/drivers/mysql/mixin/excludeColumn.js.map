{"version":3,"file":"excludeColumn.js","names":["require","_","formatExcludeArray","excludes","projectionObj","$default","forEach","x","includes","items","split","col","pop","assKey","join","push","getModelFields","EF","meta","associations","modelName","entity","length","fields","db","model","Object","keys","shift","module","exports","excludeColumn","findOptions","$projection","$association","$exclude","Array","isArray","difference","excludeObj","projectionColumns","item","columnArray","map"],"sources":["../../../../src/drivers/mysql/mixin/excludeColumn.js"],"sourcesContent":["'use strict';\nconst { _ } = require('@genx/july');\n\nfunction formatExcludeArray(excludes) {\n    const projectionObj = { $default: [] };\n\n    excludes.forEach(x => {\n        if (x.includes('.')) {\n            const items = x.split('.');\n            const col = items.pop();\n            const assKey = items.join('.');\n\n            if (projectionObj[assKey]) {\n                projectionObj[assKey].push(col);\n            } else {\n                projectionObj[assKey] = [col];\n            }\n        } else {\n            projectionObj.$default.push(x);\n        }\n    });\n\n    return projectionObj;\n}\n\nfunction getModelFields(EF, meta, associations) {\n    const modelName = meta.associations[associations[0]].entity;\n    if (associations.length === 1) {\n        const fields = EF.db.model(modelName).meta.fields;\n        return Object.keys(fields)\n    }\n\n    meta = EF.db.model(modelName).meta;\n    getModelFields(EF, meta, associations.shift())\n}\n\nmodule.exports = {\n    excludeColumn: function (EF, meta, findOptions) {\n\n        if (findOptions) {\n            const { $projection, $association } = findOptions;\n            if ($projection && $projection.$exclude && ((typeof $projection.$exclude) === 'object') && Array.isArray($projection.$exclude)) {\n\n                if (!$association) {\n                    findOptions.$projection = _.difference(Object.keys(meta.fields), $projection.$exclude);\n                } else {\n                    if (Array.isArray($association)) {\n                        const excludeObj = formatExcludeArray($projection.$exclude);\n\n                        const projectionColumns = [];\n                        $association.forEach(item => {\n                            const columnArray = excludeObj[item];\n                            if (!columnArray) {\n                                projectionColumns.push(`${item}.*`);\n                            } else {\n                                if(!columnArray.includes('*')){\n                                    projectionColumns.push(\n                                        ..._.difference(getModelFields(EF, meta, item.split('.')), columnArray).map(x => `${item}.${x}`)\n                                    );\n                                }\n                            }\n                        });\n\n                        projectionColumns.push(..._.difference(Object.keys(meta.fields), excludeObj.$default));\n\n                        findOptions.$projection = projectionColumns;\n                    }\n                }\n            }\n        }\n    }\n}"],"mappings":"AAAA,YAAY;;AAACA,OAAA;AACb,MAAM;EAAEC;AAAE,CAAC,GAAGD,OAAO,CAAC,YAAY,CAAC;AAEnC,SAASE,kBAAkBA,CAACC,QAAQ,EAAE;EAClC,MAAMC,aAAa,GAAG;IAAEC,QAAQ,EAAE;EAAG,CAAC;EAEtCF,QAAQ,CAACG,OAAO,CAACC,CAAC,IAAI;IAClB,IAAIA,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;MACjB,MAAMC,KAAK,GAAGF,CAAC,CAACG,KAAK,CAAC,GAAG,CAAC;MAC1B,MAAMC,GAAG,GAAGF,KAAK,CAACG,GAAG,EAAE;MACvB,MAAMC,MAAM,GAAGJ,KAAK,CAACK,IAAI,CAAC,GAAG,CAAC;MAE9B,IAAIV,aAAa,CAACS,MAAM,CAAC,EAAE;QACvBT,aAAa,CAACS,MAAM,CAAC,CAACE,IAAI,CAACJ,GAAG,CAAC;MACnC,CAAC,MAAM;QACHP,aAAa,CAACS,MAAM,CAAC,GAAG,CAACF,GAAG,CAAC;MACjC;IACJ,CAAC,MAAM;MACHP,aAAa,CAACC,QAAQ,CAACU,IAAI,CAACR,CAAC,CAAC;IAClC;EACJ,CAAC,CAAC;EAEF,OAAOH,aAAa;AACxB;AAEA,SAASY,cAAcA,CAACC,EAAE,EAAEC,IAAI,EAAEC,YAAY,EAAE;EAC5C,MAAMC,SAAS,GAAGF,IAAI,CAACC,YAAY,CAACA,YAAY,CAAC,CAAC,CAAC,CAAC,CAACE,MAAM;EAC3D,IAAIF,YAAY,CAACG,MAAM,KAAK,CAAC,EAAE;IAC3B,MAAMC,MAAM,GAAGN,EAAE,CAACO,EAAE,CAACC,KAAK,CAACL,SAAS,CAAC,CAACF,IAAI,CAACK,MAAM;IACjD,OAAOG,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC;EAC9B;EAEAL,IAAI,GAAGD,EAAE,CAACO,EAAE,CAACC,KAAK,CAACL,SAAS,CAAC,CAACF,IAAI;EAClCF,cAAc,CAACC,EAAE,EAAEC,IAAI,EAAEC,YAAY,CAACS,KAAK,EAAE,CAAC;AAClD;AAEAC,MAAM,CAACC,OAAO,GAAG;EACbC,aAAa,EAAE,SAAAA,CAAUd,EAAE,EAAEC,IAAI,EAAEc,WAAW,EAAE;IAE5C,IAAIA,WAAW,EAAE;MACb,MAAM;QAAEC,WAAW;QAAEC;MAAa,CAAC,GAAGF,WAAW;MACjD,IAAIC,WAAW,IAAIA,WAAW,CAACE,QAAQ,IAAM,OAAOF,WAAW,CAACE,QAAQ,KAAM,QAAS,IAAIC,KAAK,CAACC,OAAO,CAACJ,WAAW,CAACE,QAAQ,CAAC,EAAE;QAE5H,IAAI,CAACD,YAAY,EAAE;UACfF,WAAW,CAACC,WAAW,GAAGhC,CAAC,CAACqC,UAAU,CAACZ,MAAM,CAACC,IAAI,CAACT,IAAI,CAACK,MAAM,CAAC,EAAEU,WAAW,CAACE,QAAQ,CAAC;QAC1F,CAAC,MAAM;UACH,IAAIC,KAAK,CAACC,OAAO,CAACH,YAAY,CAAC,EAAE;YAC7B,MAAMK,UAAU,GAAGrC,kBAAkB,CAAC+B,WAAW,CAACE,QAAQ,CAAC;YAE3D,MAAMK,iBAAiB,GAAG,EAAE;YAC5BN,YAAY,CAAC5B,OAAO,CAACmC,IAAI,IAAI;cACzB,MAAMC,WAAW,GAAGH,UAAU,CAACE,IAAI,CAAC;cACpC,IAAI,CAACC,WAAW,EAAE;gBACdF,iBAAiB,CAACzB,IAAI,CAAE,GAAE0B,IAAK,IAAG,CAAC;cACvC,CAAC,MAAM;gBACH,IAAG,CAACC,WAAW,CAAClC,QAAQ,CAAC,GAAG,CAAC,EAAC;kBAC1BgC,iBAAiB,CAACzB,IAAI,CAClB,GAAGd,CAAC,CAACqC,UAAU,CAACtB,cAAc,CAACC,EAAE,EAAEC,IAAI,EAAEuB,IAAI,CAAC/B,KAAK,CAAC,GAAG,CAAC,CAAC,EAAEgC,WAAW,CAAC,CAACC,GAAG,CAACpC,CAAC,IAAK,GAAEkC,IAAK,IAAGlC,CAAE,EAAC,CAAC,CACnG;gBACL;cACJ;YACJ,CAAC,CAAC;YAEFiC,iBAAiB,CAACzB,IAAI,CAAC,GAAGd,CAAC,CAACqC,UAAU,CAACZ,MAAM,CAACC,IAAI,CAACT,IAAI,CAACK,MAAM,CAAC,EAAEgB,UAAU,CAAClC,QAAQ,CAAC,CAAC;YAEtF2B,WAAW,CAACC,WAAW,GAAGO,iBAAiB;UAC/C;QACJ;MACJ;IACJ;EACJ;AACJ,CAAC"}