'use strict';

require("source-map-support/register");

const winston = require('winston');

const Connector = require('../Connector');

const TEST_DB = 'oolong-unit-test';
describe('unit:connector:mongodb', function () {
  let logger = winston.createLogger({
    "level": "verbose",
    "transports": [new winston.transports.Console({
      "format": winston.format.combine(winston.format.colorize(), winston.format.simple())
    })]
  });
  let connector;
  before(async function () {
    connector = new Connector(`mongodb://root:root@localhost/${TEST_DB}?authSource=admin`, {
      logger
    });
  });
  after(async function () {
    await connector.end_();
  });
  describe('basic', function () {
    it('ping', async function () {
      let alive = await connector.ping_();
      alive.should.be.ok();
    });
  });
  describe('crud', function () {});
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9kcml2ZXJzL3JhYmJpdG1xL19fdGVzdF9fL0Nvbm5lY3Rvci5zcGVjLmpzIl0sIm5hbWVzIjpbIndpbnN0b24iLCJyZXF1aXJlIiwiQ29ubmVjdG9yIiwiVEVTVF9EQiIsImRlc2NyaWJlIiwibG9nZ2VyIiwiY3JlYXRlTG9nZ2VyIiwidHJhbnNwb3J0cyIsIkNvbnNvbGUiLCJmb3JtYXQiLCJjb21iaW5lIiwiY29sb3JpemUiLCJzaW1wbGUiLCJjb25uZWN0b3IiLCJiZWZvcmUiLCJhZnRlciIsImVuZF8iLCJpdCIsImFsaXZlIiwicGluZ18iLCJzaG91bGQiLCJiZSIsIm9rIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsY0FBRCxDQUF6Qjs7QUFFQSxNQUFNRSxPQUFPLEdBQUcsa0JBQWhCO0FBRUFDLFFBQVEsQ0FBQyx3QkFBRCxFQUEyQixZQUFZO0FBQzNDLE1BQUlDLE1BQU0sR0FBR0wsT0FBTyxDQUFDTSxZQUFSLENBQXFCO0FBQzlCLGFBQVMsU0FEcUI7QUFFOUIsa0JBQWMsQ0FDVixJQUFJTixPQUFPLENBQUNPLFVBQVIsQ0FBbUJDLE9BQXZCLENBQStCO0FBQzNCLGdCQUFVUixPQUFPLENBQUNTLE1BQVIsQ0FBZUMsT0FBZixDQUF1QlYsT0FBTyxDQUFDUyxNQUFSLENBQWVFLFFBQWYsRUFBdkIsRUFBa0RYLE9BQU8sQ0FBQ1MsTUFBUixDQUFlRyxNQUFmLEVBQWxEO0FBRGlCLEtBQS9CLENBRFU7QUFGZ0IsR0FBckIsQ0FBYjtBQVNBLE1BQUlDLFNBQUo7QUFFQUMsRUFBQUEsTUFBTSxDQUFDLGtCQUFrQjtBQUNyQkQsSUFBQUEsU0FBUyxHQUFHLElBQUlYLFNBQUosQ0FBZSxpQ0FBZ0NDLE9BQVEsbUJBQXZELEVBQTJFO0FBQUVFLE1BQUFBO0FBQUYsS0FBM0UsQ0FBWjtBQUNILEdBRkssQ0FBTjtBQUlBVSxFQUFBQSxLQUFLLENBQUMsa0JBQWtCO0FBQ3BCLFVBQU1GLFNBQVMsQ0FBQ0csSUFBVixFQUFOO0FBQ0gsR0FGSSxDQUFMO0FBSUFaLEVBQUFBLFFBQVEsQ0FBQyxPQUFELEVBQVUsWUFBWTtBQUMxQmEsSUFBQUEsRUFBRSxDQUFDLE1BQUQsRUFBUyxrQkFBa0I7QUFDekIsVUFBSUMsS0FBSyxHQUFHLE1BQU1MLFNBQVMsQ0FBQ00sS0FBVixFQUFsQjtBQUNBRCxNQUFBQSxLQUFLLENBQUNFLE1BQU4sQ0FBYUMsRUFBYixDQUFnQkMsRUFBaEI7QUFDSCxLQUhDLENBQUY7QUFJSCxHQUxPLENBQVI7QUFPQWxCLEVBQUFBLFFBQVEsQ0FBQyxNQUFELEVBQVMsWUFBWSxDQUU1QixDQUZPLENBQVI7QUFHSCxDQTlCTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB3aW5zdG9uID0gcmVxdWlyZSgnd2luc3RvbicpO1xuY29uc3QgQ29ubmVjdG9yID0gcmVxdWlyZSgnLi4vQ29ubmVjdG9yJyk7XG5cbmNvbnN0IFRFU1RfREIgPSAnb29sb25nLXVuaXQtdGVzdCc7XG5cbmRlc2NyaWJlKCd1bml0OmNvbm5lY3Rvcjptb25nb2RiJywgZnVuY3Rpb24gKCkgeyAgICBcbiAgICBsZXQgbG9nZ2VyID0gd2luc3Rvbi5jcmVhdGVMb2dnZXIoe1xuICAgICAgICBcImxldmVsXCI6IFwidmVyYm9zZVwiLFxuICAgICAgICBcInRyYW5zcG9ydHNcIjogW1xuICAgICAgICAgICAgbmV3IHdpbnN0b24udHJhbnNwb3J0cy5Db25zb2xlKHsgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXCJmb3JtYXRcIjogd2luc3Rvbi5mb3JtYXQuY29tYmluZSh3aW5zdG9uLmZvcm1hdC5jb2xvcml6ZSgpLCB3aW5zdG9uLmZvcm1hdC5zaW1wbGUoKSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIF1cbiAgICB9KTtcblxuICAgIGxldCBjb25uZWN0b3I7ICAgIFxuXG4gICAgYmVmb3JlKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29ubmVjdG9yID0gbmV3IENvbm5lY3RvcihgbW9uZ29kYjovL3Jvb3Q6cm9vdEBsb2NhbGhvc3QvJHtURVNUX0RCfT9hdXRoU291cmNlPWFkbWluYCwgeyBsb2dnZXIgfSk7ICAgICAgICBcbiAgICB9KTtcblxuICAgIGFmdGVyKGFzeW5jIGZ1bmN0aW9uICgpIHsgICAgICAgIFxuICAgICAgICBhd2FpdCBjb25uZWN0b3IuZW5kXygpO1xuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoJ2Jhc2ljJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBpdCgncGluZycsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGxldCBhbGl2ZSA9IGF3YWl0IGNvbm5lY3Rvci5waW5nXygpO1xuICAgICAgICAgICAgYWxpdmUuc2hvdWxkLmJlLm9rKCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoJ2NydWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIFxuICAgIH0pO1xufSk7Il19