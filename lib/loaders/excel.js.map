{"version":3,"file":"excel.js","names":["unflattenObject","_","eachAsync_","require","module","exports","writeTemplate_","templateFile","columnsMeta","config","keys","Object","Excel","workbook","Workbook","sheet","addWorksheet","addRow","rowPlaceHolders","Array","length","templatedRows","rows","j","i","colKey","metadata","cell","getCell","type","dataValidation","allowBlank","formulae","values","join","alignment","horizontal","format","numFmt","showErrorMessage","Date","border","top","style","xlsx","writeFile","load_","db","mainEntity","dataFile","reverseMapping","payloadFunctor","needConfirm","readFile","data","eachSheet","worksheet","colKeys","eachRow","row","rowNumber","drop","map","key","rowValues","isNonEmpty","find","val","toString","trim","record","fromPairs","zip","isEmpty","_record","push","primaryValue","errors","confirmations","rowsResult","Entity","model","processed","_confirm","forEach","c","create_","$dryRun","error","message","info","result","meta","keyField"],"sources":["../../src/loaders/excel.js"],"sourcesContent":["const { unflattenObject, _, eachAsync_ } = require('@genx/july');\n\nmodule.exports = {\n    writeTemplate_: async (templateFile, columnsMeta, config) => {\n        const keys = Object.keys(columnsMeta);\n\n        const Excel = require('exceljs');\n        let workbook = new Excel.Workbook();\n\n        const sheet = workbook.addWorksheet('Template');\n\n        // add header\n        sheet.addRow(keys);\n        const rowPlaceHolders = new Array(keys.length);\n\n        const templatedRows = config.rows || 50;\n\n        for (let j = 0; j < templatedRows; j++) {\n            // add en empty rows\n            sheet.addRow(rowPlaceHolders);\n\n            for (let i = 1; i <= keys.length; i++) {\n                const colKey = keys[i - 1];\n                const metadata = columnsMeta[colKey];\n                const cell = sheet.getCell(j + 2, i);\n\n                if (metadata) {\n                    if (metadata.type === 'enum') {\n                        cell.dataValidation = {\n                            type: 'list',\n                            allowBlank: true,\n                            formulae: [`\"${metadata.values.join(',')}\"`],\n                        };\n                    } else if (metadata.type === 'currency') {\n                        cell.alignment = { horizontal: 'right' };\n                        if (metadata.format && config[metadata.format]) {\n                            cell.numFmt = config[metadata.format];\n                        }\n                    } else if (metadata.type === 'percentage') {\n                        if (metadata.format && config[metadata.format]) {\n                            cell.numFmt = config[metadata.format];\n                        } else {\n                            cell.numFmt = '0.00%';\n                        }\n                    } else if (metadata.type === 'datetime') {\n                        cell.dataValidation = {\n                            type: 'date',\n                            showErrorMessage: true,\n                            formulae: [new Date()]\n                        };\n\n                        if (metadata.format && config[metadata.format]) {\n                            cell.numFmt = config[metadata.format];\n                        } else {\n                            cell.numFmt = 'yyyy/mm/dd';\n                        }                        \n                    } else if (metadata.type === 'text') {\n                        if (metadata.format && config[metadata.format]) {\n                            cell.numFmt = config[metadata.format];\n                        } else {\n                            cell.numFmt = '@';\n                        }\n                    }\n                }\n            }\n        }\n\n        sheet.addRow(rowPlaceHolders);\n\n        for (let i = 1; i <= keys.length; i++) {\n            const cell = sheet.getCell(templatedRows + 2, i);\n            cell.border = { top: { style: 'thin' } };\n        }\n\n        await workbook.xlsx.writeFile(templateFile);\n    },\n\n    load_: async (\n        db,\n        mainEntity,\n        dataFile,\n        reverseMapping,\n        payloadFunctor,\n        needConfirm\n    ) => {\n        const Excel = require('exceljs');\n        let workbook = new Excel.Workbook();\n        await workbook.xlsx.readFile(dataFile);\n\n        const data = [];\n\n        workbook.eachSheet((worksheet) => {\n            let colKeys;\n\n            worksheet.eachRow(function (row, rowNumber) {\n                if (!colKeys) {\n                    colKeys = _.drop(row.values).map(\n                        (key) => reverseMapping[key]\n                    );\n                } else {\n                    const rowValues = _.drop(row.values);\n                    const isNonEmpty = _.find(\n                        rowValues,\n                        (val) => val != null && val.toString().trim() !== ''\n                    );\n\n                    if (!isNonEmpty) {\n                        return;\n                    }\n\n                    const record = _.fromPairs(_.zip(colKeys, rowValues));\n\n                    if (!_.isEmpty(record)) {\n                        const _record = unflattenObject(record);\n\n                        data.push({\n                            rowNumber,\n                            record: _record,\n                            primaryValue: rowValues[0],\n                        });\n                    }\n                }\n            });\n        });\n\n        const errors = [];\n        const confirmations = [];\n        const rowsResult = [];\n\n        const Entity = db.model(mainEntity);\n        const processed = [];\n        await eachAsync_(data, async ({ rowNumber, record, primaryValue }) => {\n            try {\n                const _confirm = [];\n                record = await payloadFunctor(\n                    Entity,\n                    record,\n                    rowNumber,\n                    _confirm\n                );\n                //console.dir(record, { depth: 10 });\n\n                if (_confirm.length > 0) {\n                    _confirm.forEach((c) =>\n                        confirmations.push({ rowNumber, ...c })\n                    );\n                }\n\n                processed.push({ rowNumber, record, primaryValue });\n                await Entity.create_(record, { $dryRun: true });\n            } catch (error) {\n                errors.push({\n                    rowNumber,\n                    error: error.message,\n                    ...(error.info ? { info: error.info } : null),\n                });\n            }\n        });\n\n        if (errors.length > 0) {\n            return { errors };\n        }\n\n        if (needConfirm && confirmations.length > 0) {\n            return { confirmations };\n        }\n\n        await eachAsync_(\n            processed,\n            async ({ rowNumber, record, primaryValue }) => {\n                try {\n                    const result = await Entity.create_(record);\n                    rowsResult.push({\n                        rowNumber,\n                        [Entity.meta.keyField]: result[Entity.meta.keyField],\n                        primaryValue,\n                    });\n                } catch (error) {\n                    errors.push({\n                        rowNumber,\n                        error: error.message,\n                    });\n                }\n            }\n        );\n\n        return { result: rowsResult, errors };\n    },\n};\n"],"mappings":"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"}