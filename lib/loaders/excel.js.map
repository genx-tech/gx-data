{"version":3,"sources":["../../src/loaders/excel.js"],"names":["unflattenObject","_","eachAsync_","require","module","exports","writeTemplate_","templateFile","reverseMapping","Excel","workbook","Workbook","sheet","addWorksheet","addRow","Object","keys","xlsx","writeFile","load_","db","mainEntity","dataFile","payloadFunctor","readFile","data","eachSheet","worksheet","colKeys","eachRow","row","rowNumber","drop","values","map","key","record","fromPairs","zip","isEmpty","push","errors","rowsResult","Entity","model","processed","create_","$dryRun","error","message","length","result","meta"],"mappings":"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","sourcesContent":["const { unflattenObject, _, eachAsync_ } = require('@genx/july');\n\nmodule.exports = {\n    writeTemplate_: async (templateFile, reverseMapping) => {\n        const Excel = require('exceljs');\n        let workbook = new Excel.Workbook();\n\n        const sheet = workbook.addWorksheet('Template');\n        sheet.addRow(Object.keys(reverseMapping));\n\n        await workbook.xlsx.writeFile(templateFile);\n    },\n\n    load_: async (db, mainEntity, dataFile, reverseMapping, payloadFunctor) => {\n        const Excel = require('exceljs');\n        let workbook = new Excel.Workbook();\n        await workbook.xlsx.readFile(dataFile);\n\n        let data = [];\n\n        workbook.eachSheet((worksheet) => {\n            let colKeys;\n\n            worksheet.eachRow(function (row, rowNumber) {\n                if (!colKeys) {\n                    colKeys = _.drop(row.values).map(\n                        (key) => reverseMapping[key]\n                    );\n                } else {\n                    const record = _.fromPairs(\n                        _.zip(colKeys, _.drop(row.values))\n                    );\n\n                    if (!_.isEmpty(record)) {\n                        data.push({\n                            rowNumber,\n                            record: unflattenObject(record),\n                        });\n                    }\n                }\n            });\n        });\n\n        const errors = [];\n        const rowsResult = [];\n\n        const Entity = db.model(mainEntity);\n        const processed = [];\n        await eachAsync_(data, async ({ rowNumber, record }) => {\n            try {\n                record = await payloadFunctor(Entity, record);\n                processed.push({ rowNumber, record });\n                await Entity.create_(record, { $dryRun: true });\n            } catch (error) {\n                errors.push({\n                    rowNumber,\n                    error: error.message,\n                });\n            }\n        });\n\n        if (errors.length > 0) {\n            return { errors };\n        }\n\n        await eachAsync_(processed, async ({ rowNumber, record }) => {\n            try {\n                const result = await Entity.create_(record);\n                rowsResult.push({\n                    rowNumber,\n                    [Entity.meta.key]: result[Entity.meta.key],\n                });\n            } catch (error) {\n                errors.push({\n                    rowNumber,\n                    error: error.message,\n                });\n            }\n        });\n\n        return { result: rowsResult, errors };\n    },\n};\n"],"file":"excel.js"}