"use strict";require("source-map-support/register");const Rules=require("../../enum/Rules");const{mergeCondition}=require("../../utils/lang");const Generators=require("../Generators");module.exports={[Rules.RULE_BEFORE_FIND]:(feature,entityModel,context)=>{let findOptions=context.options;if(!findOptions.$includeDeleted){findOptions.$query=mergeCondition(findOptions.$query,{[feature.field]:{$ne:feature.value}})}return true},[Rules.RULE_BEFORE_DELETE]:async(feature,entityModel,context)=>{let options=context.options;if(!options.$physicalDeletion){let{field,value,timestampField}=feature;let updateTo={[field]:value};if(timestampField){updateTo[timestampField]=Generators.default(entityModel.meta.fields[timestampField],context.i18n)}context.return=await entityModel._update_(updateTo,{$query:options.$query,$retrieveUpdated:options.$retrieveDeleted,$bypassReadOnly:new Set([field,timestampField])});return false}return true}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lbnRpdHlGZWF0dXJlcy9sb2dpY2FsRGVsZXRpb24uanMiXSwibmFtZXMiOlsiUnVsZXMiLCJyZXF1aXJlIiwibWVyZ2VDb25kaXRpb24iLCJHZW5lcmF0b3JzIiwibW9kdWxlIiwiZXhwb3J0cyIsIlJVTEVfQkVGT1JFX0ZJTkQiLCJmZWF0dXJlIiwiZW50aXR5TW9kZWwiLCJjb250ZXh0IiwiZmluZE9wdGlvbnMiLCJvcHRpb25zIiwiJGluY2x1ZGVEZWxldGVkIiwiJHF1ZXJ5IiwiZmllbGQiLCIkbmUiLCJ2YWx1ZSIsIlJVTEVfQkVGT1JFX0RFTEVURSIsIiRwaHlzaWNhbERlbGV0aW9uIiwidGltZXN0YW1wRmllbGQiLCJ1cGRhdGVUbyIsImRlZmF1bHQiLCJtZXRhIiwiZmllbGRzIiwiaTE4biIsInJldHVybiIsIl91cGRhdGVfIiwiJHJldHJpZXZlVXBkYXRlZCIsIiRyZXRyaWV2ZURlbGV0ZWQiLCIkYnlwYXNzUmVhZE9ubHkiLCJTZXQiXSwibWFwcGluZ3MiOiJBQUFBLGEsdUNBRUEsS0FBTUEsQ0FBQUEsS0FBSyxDQUFHQyxPQUFPLENBQUMsa0JBQUQsQ0FBckIsQ0FDQSxLQUFNLENBQUVDLGNBQUYsRUFBcUJELE9BQU8sQ0FBQyxrQkFBRCxDQUFsQyxDQUNBLEtBQU1FLENBQUFBLFVBQVUsQ0FBR0YsT0FBTyxDQUFDLGVBQUQsQ0FBMUIsQ0FPQUcsTUFBTSxDQUFDQyxPQUFQLENBQWlCLENBQ2IsQ0FBQ0wsS0FBSyxDQUFDTSxnQkFBUCxFQUEwQixDQUFDQyxPQUFELENBQVVDLFdBQVYsQ0FBdUJDLE9BQXZCLEdBQW1DLENBQ3pELEdBQUlDLENBQUFBLFdBQVcsQ0FBR0QsT0FBTyxDQUFDRSxPQUExQixDQUNBLEdBQUksQ0FBQ0QsV0FBVyxDQUFDRSxlQUFqQixDQUFrQyxDQUM5QkYsV0FBVyxDQUFDRyxNQUFaLENBQXFCWCxjQUFjLENBQUNRLFdBQVcsQ0FBQ0csTUFBYixDQUFxQixDQUFFLENBQUNOLE9BQU8sQ0FBQ08sS0FBVCxFQUFpQixDQUFFQyxHQUFHLENBQUVSLE9BQU8sQ0FBQ1MsS0FBZixDQUFuQixDQUFyQixDQUN0QyxDQUVELE1BQU8sS0FDVixDQVJZLENBU2IsQ0FBQ2hCLEtBQUssQ0FBQ2lCLGtCQUFQLEVBQTRCLE1BQU9WLE9BQVAsQ0FBZ0JDLFdBQWhCLENBQTZCQyxPQUE3QixHQUF5QyxDQUNqRSxHQUFJRSxDQUFBQSxPQUFPLENBQUdGLE9BQU8sQ0FBQ0UsT0FBdEIsQ0FDQSxHQUFJLENBQUNBLE9BQU8sQ0FBQ08saUJBQWIsQ0FBZ0MsQ0FDNUIsR0FBSSxDQUFFSixLQUFGLENBQVNFLEtBQVQsQ0FBZ0JHLGNBQWhCLEVBQW1DWixPQUF2QyxDQUNBLEdBQUlhLENBQUFBLFFBQVEsQ0FBRyxDQUNYLENBQUNOLEtBQUQsRUFBU0UsS0FERSxDQUFmLENBSUEsR0FBSUcsY0FBSixDQUFvQixDQUNoQkMsUUFBUSxDQUFDRCxjQUFELENBQVIsQ0FBMkJoQixVQUFVLENBQUNrQixPQUFYLENBQW1CYixXQUFXLENBQUNjLElBQVosQ0FBaUJDLE1BQWpCLENBQXdCSixjQUF4QixDQUFuQixDQUE0RFYsT0FBTyxDQUFDZSxJQUFwRSxDQUM5QixDQUVEZixPQUFPLENBQUNnQixNQUFSLENBQWlCLEtBQU1qQixDQUFBQSxXQUFXLENBQUNrQixRQUFaLENBQXFCTixRQUFyQixDQUErQixDQUNsRFAsTUFBTSxDQUFFRixPQUFPLENBQUNFLE1BRGtDLENBRWxEYyxnQkFBZ0IsQ0FBRWhCLE9BQU8sQ0FBQ2lCLGdCQUZ3QixDQUdsREMsZUFBZSxDQUFFLEdBQUlDLENBQUFBLEdBQUosQ0FBUSxDQUFDaEIsS0FBRCxDQUFRSyxjQUFSLENBQVIsQ0FIaUMsQ0FBL0IsQ0FBdkIsQ0FNQSxNQUFPLE1BQ1YsQ0FFRCxNQUFPLEtBQ1YsQ0EvQlksQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuY29uc3QgUnVsZXMgPSByZXF1aXJlKCcuLi8uLi9lbnVtL1J1bGVzJyk7XG5jb25zdCB7IG1lcmdlQ29uZGl0aW9uIH0gPSByZXF1aXJlKCcuLi8uLi91dGlscy9sYW5nJyk7XG5jb25zdCBHZW5lcmF0b3JzID0gcmVxdWlyZSgnLi4vR2VuZXJhdG9ycycpO1xuXG4vKipcbiAqIEEgcnVsZSBzcGVjaWZpZXMgdGhlIGVudGl0eSB3aWxsIG5vdCBiZSBkZWxldGVkIHBoeXNpY2FsbHkuXG4gKiBAbW9kdWxlIEVudGl0eUZlYXR1cmVSdW50aW1lX0xvZ2ljYWxEZWxldGlvblxuICovXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFtSdWxlcy5SVUxFX0JFRk9SRV9GSU5EXTogKGZlYXR1cmUsIGVudGl0eU1vZGVsLCBjb250ZXh0KSA9PiB7XG4gICAgICAgIGxldCBmaW5kT3B0aW9ucyA9IGNvbnRleHQub3B0aW9ucztcbiAgICAgICAgaWYgKCFmaW5kT3B0aW9ucy4kaW5jbHVkZURlbGV0ZWQpIHtcbiAgICAgICAgICAgIGZpbmRPcHRpb25zLiRxdWVyeSA9IG1lcmdlQ29uZGl0aW9uKGZpbmRPcHRpb25zLiRxdWVyeSwgeyBbZmVhdHVyZS5maWVsZF06IHsgJG5lOiBmZWF0dXJlLnZhbHVlIH0gfSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuICAgIFtSdWxlcy5SVUxFX0JFRk9SRV9ERUxFVEVdOiBhc3luYyAoZmVhdHVyZSwgZW50aXR5TW9kZWwsIGNvbnRleHQpID0+IHtcbiAgICAgICAgbGV0IG9wdGlvbnMgPSBjb250ZXh0Lm9wdGlvbnM7XG4gICAgICAgIGlmICghb3B0aW9ucy4kcGh5c2ljYWxEZWxldGlvbikge1xuICAgICAgICAgICAgbGV0IHsgZmllbGQsIHZhbHVlLCB0aW1lc3RhbXBGaWVsZCB9ID0gZmVhdHVyZTtcbiAgICAgICAgICAgIGxldCB1cGRhdGVUbyA9IHtcbiAgICAgICAgICAgICAgICBbZmllbGRdOiB2YWx1ZVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgaWYgKHRpbWVzdGFtcEZpZWxkKSB7XG4gICAgICAgICAgICAgICAgdXBkYXRlVG9bdGltZXN0YW1wRmllbGRdID0gR2VuZXJhdG9ycy5kZWZhdWx0KGVudGl0eU1vZGVsLm1ldGEuZmllbGRzW3RpbWVzdGFtcEZpZWxkXSwgY29udGV4dC5pMThuKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29udGV4dC5yZXR1cm4gPSBhd2FpdCBlbnRpdHlNb2RlbC5fdXBkYXRlXyh1cGRhdGVUbywgeyBcbiAgICAgICAgICAgICAgICAkcXVlcnk6IG9wdGlvbnMuJHF1ZXJ5LCBcbiAgICAgICAgICAgICAgICAkcmV0cmlldmVVcGRhdGVkOiBvcHRpb25zLiRyZXRyaWV2ZURlbGV0ZWQsXG4gICAgICAgICAgICAgICAgJGJ5cGFzc1JlYWRPbmx5OiBuZXcgU2V0KFtmaWVsZCwgdGltZXN0YW1wRmllbGRdKVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbn07Il19