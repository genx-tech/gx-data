"use strict";

require("source-map-support/register");

const Rules = require('../enum/Rules');

const {
  mergeCondition
} = require('../utils/lang');

const Generators = require('../Generators');

module.exports = {
  [Rules.RULE_BEFORE_FIND]: (feature, entityModel, context) => {
    let findOptions = context.options;

    if (!findOptions.$includeDeleted) {
      findOptions.$query = mergeCondition(findOptions.$query, {
        [feature.field]: {
          $ne: feature.value
        }
      });
    }

    return true;
  },
  [Rules.RULE_BEFORE_DELETE]: async (feature, entityModel, context) => {
    let options = context.options;

    if (!options.$physicalDeletion) {
      let {
        field,
        value,
        timestampField
      } = feature;
      let updateTo = {
        [field]: value
      };

      if (timestampField) {
        updateTo[timestampField] = Generators.default(entityModel.meta.fields[timestampField], context.i18n);
      }

      context.return = await entityModel._update_(updateTo, {
        $query: options.$query,
        $retrieveUpdated: options.$retrieveDeleted,
        $bypassReadOnly: new Set([field, timestampField])
      });
      return false;
    }

    return true;
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lbnRpdHlGZWF0dXJlcy9sb2dpY2FsRGVsZXRpb24uanMiXSwibmFtZXMiOlsiUnVsZXMiLCJyZXF1aXJlIiwibWVyZ2VDb25kaXRpb24iLCJHZW5lcmF0b3JzIiwibW9kdWxlIiwiZXhwb3J0cyIsIlJVTEVfQkVGT1JFX0ZJTkQiLCJmZWF0dXJlIiwiZW50aXR5TW9kZWwiLCJjb250ZXh0IiwiZmluZE9wdGlvbnMiLCJvcHRpb25zIiwiJGluY2x1ZGVEZWxldGVkIiwiJHF1ZXJ5IiwiZmllbGQiLCIkbmUiLCJ2YWx1ZSIsIlJVTEVfQkVGT1JFX0RFTEVURSIsIiRwaHlzaWNhbERlbGV0aW9uIiwidGltZXN0YW1wRmllbGQiLCJ1cGRhdGVUbyIsImRlZmF1bHQiLCJtZXRhIiwiZmllbGRzIiwiaTE4biIsInJldHVybiIsIl91cGRhdGVfIiwiJHJldHJpZXZlVXBkYXRlZCIsIiRyZXRyaWV2ZURlbGV0ZWQiLCIkYnlwYXNzUmVhZE9ubHkiLCJTZXQiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsZUFBRCxDQUFyQjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBcUJELE9BQU8sQ0FBQyxlQUFELENBQWxDOztBQUNBLE1BQU1FLFVBQVUsR0FBR0YsT0FBTyxDQUFDLGVBQUQsQ0FBMUI7O0FBT0FHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiLEdBQUNMLEtBQUssQ0FBQ00sZ0JBQVAsR0FBMEIsQ0FBQ0MsT0FBRCxFQUFVQyxXQUFWLEVBQXVCQyxPQUF2QixLQUFtQztBQUN6RCxRQUFJQyxXQUFXLEdBQUdELE9BQU8sQ0FBQ0UsT0FBMUI7O0FBQ0EsUUFBSSxDQUFDRCxXQUFXLENBQUNFLGVBQWpCLEVBQWtDO0FBQzlCRixNQUFBQSxXQUFXLENBQUNHLE1BQVosR0FBcUJYLGNBQWMsQ0FBQ1EsV0FBVyxDQUFDRyxNQUFiLEVBQXFCO0FBQUUsU0FBQ04sT0FBTyxDQUFDTyxLQUFULEdBQWlCO0FBQUVDLFVBQUFBLEdBQUcsRUFBRVIsT0FBTyxDQUFDUztBQUFmO0FBQW5CLE9BQXJCLENBQW5DO0FBQ0g7O0FBRUQsV0FBTyxJQUFQO0FBQ0gsR0FSWTtBQVNiLEdBQUNoQixLQUFLLENBQUNpQixrQkFBUCxHQUE0QixPQUFPVixPQUFQLEVBQWdCQyxXQUFoQixFQUE2QkMsT0FBN0IsS0FBeUM7QUFDakUsUUFBSUUsT0FBTyxHQUFHRixPQUFPLENBQUNFLE9BQXRCOztBQUNBLFFBQUksQ0FBQ0EsT0FBTyxDQUFDTyxpQkFBYixFQUFnQztBQUM1QixVQUFJO0FBQUVKLFFBQUFBLEtBQUY7QUFBU0UsUUFBQUEsS0FBVDtBQUFnQkcsUUFBQUE7QUFBaEIsVUFBbUNaLE9BQXZDO0FBQ0EsVUFBSWEsUUFBUSxHQUFHO0FBQ1gsU0FBQ04sS0FBRCxHQUFTRTtBQURFLE9BQWY7O0FBSUEsVUFBSUcsY0FBSixFQUFvQjtBQUNoQkMsUUFBQUEsUUFBUSxDQUFDRCxjQUFELENBQVIsR0FBMkJoQixVQUFVLENBQUNrQixPQUFYLENBQW1CYixXQUFXLENBQUNjLElBQVosQ0FBaUJDLE1BQWpCLENBQXdCSixjQUF4QixDQUFuQixFQUE0RFYsT0FBTyxDQUFDZSxJQUFwRSxDQUEzQjtBQUNIOztBQUVEZixNQUFBQSxPQUFPLENBQUNnQixNQUFSLEdBQWlCLE1BQU1qQixXQUFXLENBQUNrQixRQUFaLENBQXFCTixRQUFyQixFQUErQjtBQUNsRFAsUUFBQUEsTUFBTSxFQUFFRixPQUFPLENBQUNFLE1BRGtDO0FBRWxEYyxRQUFBQSxnQkFBZ0IsRUFBRWhCLE9BQU8sQ0FBQ2lCLGdCQUZ3QjtBQUdsREMsUUFBQUEsZUFBZSxFQUFFLElBQUlDLEdBQUosQ0FBUSxDQUFDaEIsS0FBRCxFQUFRSyxjQUFSLENBQVI7QUFIaUMsT0FBL0IsQ0FBdkI7QUFNQSxhQUFPLEtBQVA7QUFDSDs7QUFFRCxXQUFPLElBQVA7QUFDSDtBQS9CWSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCBSdWxlcyA9IHJlcXVpcmUoJy4uL2VudW0vUnVsZXMnKTtcbmNvbnN0IHsgbWVyZ2VDb25kaXRpb24gfSA9IHJlcXVpcmUoJy4uL3V0aWxzL2xhbmcnKTtcbmNvbnN0IEdlbmVyYXRvcnMgPSByZXF1aXJlKCcuLi9HZW5lcmF0b3JzJyk7XG5cbi8qKlxuICogQSBydWxlIHNwZWNpZmllcyB0aGUgZW50aXR5IHdpbGwgbm90IGJlIGRlbGV0ZWQgcGh5c2ljYWxseS5cbiAqIEBtb2R1bGUgRW50aXR5RmVhdHVyZVJ1bnRpbWVfTG9naWNhbERlbGV0aW9uXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgW1J1bGVzLlJVTEVfQkVGT1JFX0ZJTkRdOiAoZmVhdHVyZSwgZW50aXR5TW9kZWwsIGNvbnRleHQpID0+IHtcbiAgICAgICAgbGV0IGZpbmRPcHRpb25zID0gY29udGV4dC5vcHRpb25zO1xuICAgICAgICBpZiAoIWZpbmRPcHRpb25zLiRpbmNsdWRlRGVsZXRlZCkge1xuICAgICAgICAgICAgZmluZE9wdGlvbnMuJHF1ZXJ5ID0gbWVyZ2VDb25kaXRpb24oZmluZE9wdGlvbnMuJHF1ZXJ5LCB7IFtmZWF0dXJlLmZpZWxkXTogeyAkbmU6IGZlYXR1cmUudmFsdWUgfSB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG4gICAgW1J1bGVzLlJVTEVfQkVGT1JFX0RFTEVURV06IGFzeW5jIChmZWF0dXJlLCBlbnRpdHlNb2RlbCwgY29udGV4dCkgPT4ge1xuICAgICAgICBsZXQgb3B0aW9ucyA9IGNvbnRleHQub3B0aW9ucztcbiAgICAgICAgaWYgKCFvcHRpb25zLiRwaHlzaWNhbERlbGV0aW9uKSB7XG4gICAgICAgICAgICBsZXQgeyBmaWVsZCwgdmFsdWUsIHRpbWVzdGFtcEZpZWxkIH0gPSBmZWF0dXJlO1xuICAgICAgICAgICAgbGV0IHVwZGF0ZVRvID0ge1xuICAgICAgICAgICAgICAgIFtmaWVsZF06IHZhbHVlXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBpZiAodGltZXN0YW1wRmllbGQpIHtcbiAgICAgICAgICAgICAgICB1cGRhdGVUb1t0aW1lc3RhbXBGaWVsZF0gPSBHZW5lcmF0b3JzLmRlZmF1bHQoZW50aXR5TW9kZWwubWV0YS5maWVsZHNbdGltZXN0YW1wRmllbGRdLCBjb250ZXh0LmkxOG4pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb250ZXh0LnJldHVybiA9IGF3YWl0IGVudGl0eU1vZGVsLl91cGRhdGVfKHVwZGF0ZVRvLCB7IFxuICAgICAgICAgICAgICAgICRxdWVyeTogb3B0aW9ucy4kcXVlcnksIFxuICAgICAgICAgICAgICAgICRyZXRyaWV2ZVVwZGF0ZWQ6IG9wdGlvbnMuJHJldHJpZXZlRGVsZXRlZCxcbiAgICAgICAgICAgICAgICAkYnlwYXNzUmVhZE9ubHk6IG5ldyBTZXQoW2ZpZWxkLCB0aW1lc3RhbXBGaWVsZF0pXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxufTsiXX0=