"use strict";

require("source-map-support/register");

const Rules = require('../../enum/Rules');

const Generators = require('../Generators');

module.exports = {
  [Rules.RULE_AFTER_VALIDATION]: (feature, entityModel, context) => {
    feature.forEach(featureItem => {
      if (featureItem.field in context.latest) {
        let targetState = context.latest[featureItem.field];
        let timestampFieldName = featureItem.stateMapping[targetState];

        if (!timestampFieldName) {
          throw new Error(`State "${targetState}" is not one of the pre-defined states of field "${featureItem.field}" of entity "${entityModel.meta.name}".`);
        }

        context.latest[timestampFieldName] = Generators.default(entityModel.meta.fields[timestampFieldName], context.i18n);
      }
    });
    return true;
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lbnRpdHlGZWF0dXJlcy9zdGF0ZVRyYWNraW5nLmpzIl0sIm5hbWVzIjpbIlJ1bGVzIiwicmVxdWlyZSIsIkdlbmVyYXRvcnMiLCJtb2R1bGUiLCJleHBvcnRzIiwiUlVMRV9BRlRFUl9WQUxJREFUSU9OIiwiZmVhdHVyZSIsImVudGl0eU1vZGVsIiwiY29udGV4dCIsImZvckVhY2giLCJmZWF0dXJlSXRlbSIsImZpZWxkIiwibGF0ZXN0IiwidGFyZ2V0U3RhdGUiLCJ0aW1lc3RhbXBGaWVsZE5hbWUiLCJzdGF0ZU1hcHBpbmciLCJFcnJvciIsIm1ldGEiLCJuYW1lIiwiZGVmYXVsdCIsImZpZWxkcyIsImkxOG4iXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsa0JBQUQsQ0FBckI7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsZUFBRCxDQUExQjs7QUFPQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2IsR0FBQ0osS0FBSyxDQUFDSyxxQkFBUCxHQUErQixDQUFDQyxPQUFELEVBQVVDLFdBQVYsRUFBdUJDLE9BQXZCLEtBQW1DO0FBQzlERixJQUFBQSxPQUFPLENBQUNHLE9BQVIsQ0FBZ0JDLFdBQVcsSUFBSTtBQUMzQixVQUFJQSxXQUFXLENBQUNDLEtBQVosSUFBcUJILE9BQU8sQ0FBQ0ksTUFBakMsRUFBeUM7QUFDckMsWUFBSUMsV0FBVyxHQUFHTCxPQUFPLENBQUNJLE1BQVIsQ0FBZUYsV0FBVyxDQUFDQyxLQUEzQixDQUFsQjtBQUNBLFlBQUlHLGtCQUFrQixHQUFHSixXQUFXLENBQUNLLFlBQVosQ0FBeUJGLFdBQXpCLENBQXpCOztBQUNBLFlBQUksQ0FBQ0Msa0JBQUwsRUFBeUI7QUFDckIsZ0JBQU0sSUFBSUUsS0FBSixDQUFXLFVBQVNILFdBQVksb0RBQW1ESCxXQUFXLENBQUNDLEtBQU0sZ0JBQWVKLFdBQVcsQ0FBQ1UsSUFBWixDQUFpQkMsSUFBSyxJQUExSSxDQUFOO0FBQ0g7O0FBQ0RWLFFBQUFBLE9BQU8sQ0FBQ0ksTUFBUixDQUFlRSxrQkFBZixJQUFxQ1osVUFBVSxDQUFDaUIsT0FBWCxDQUFtQlosV0FBVyxDQUFDVSxJQUFaLENBQWlCRyxNQUFqQixDQUF3Qk4sa0JBQXhCLENBQW5CLEVBQWdFTixPQUFPLENBQUNhLElBQXhFLENBQXJDO0FBQ0g7QUFDSixLQVREO0FBV0EsV0FBTyxJQUFQO0FBQ0g7QUFkWSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCBSdWxlcyA9IHJlcXVpcmUoJy4uLy4uL2VudW0vUnVsZXMnKTtcbmNvbnN0IEdlbmVyYXRvcnMgPSByZXF1aXJlKCcuLi9HZW5lcmF0b3JzJyk7XG5cbi8qKlxuICogQSBydWxlIHNwZWNpZmllcyB0aGUgY2hhbmdlIG9mIHN0YXRlIHdpbGwgYmUgdHJhY2tlZCBhdXRvbWF0aWNhbGx5LlxuICogQG1vZHVsZSBFbnRpdHlGZWF0dXJlUnVudGltZV9TdGF0ZVRyYWNraW5nXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgW1J1bGVzLlJVTEVfQUZURVJfVkFMSURBVElPTl06IChmZWF0dXJlLCBlbnRpdHlNb2RlbCwgY29udGV4dCkgPT4ge1xuICAgICAgICBmZWF0dXJlLmZvckVhY2goZmVhdHVyZUl0ZW0gPT4ge1xuICAgICAgICAgICAgaWYgKGZlYXR1cmVJdGVtLmZpZWxkIGluIGNvbnRleHQubGF0ZXN0KSB7XG4gICAgICAgICAgICAgICAgbGV0IHRhcmdldFN0YXRlID0gY29udGV4dC5sYXRlc3RbZmVhdHVyZUl0ZW0uZmllbGRdO1xuICAgICAgICAgICAgICAgIGxldCB0aW1lc3RhbXBGaWVsZE5hbWUgPSBmZWF0dXJlSXRlbS5zdGF0ZU1hcHBpbmdbdGFyZ2V0U3RhdGVdO1xuICAgICAgICAgICAgICAgIGlmICghdGltZXN0YW1wRmllbGROYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgU3RhdGUgXCIke3RhcmdldFN0YXRlfVwiIGlzIG5vdCBvbmUgb2YgdGhlIHByZS1kZWZpbmVkIHN0YXRlcyBvZiBmaWVsZCBcIiR7ZmVhdHVyZUl0ZW0uZmllbGR9XCIgb2YgZW50aXR5IFwiJHtlbnRpdHlNb2RlbC5tZXRhLm5hbWV9XCIuYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnRleHQubGF0ZXN0W3RpbWVzdGFtcEZpZWxkTmFtZV0gPSBHZW5lcmF0b3JzLmRlZmF1bHQoZW50aXR5TW9kZWwubWV0YS5maWVsZHNbdGltZXN0YW1wRmllbGROYW1lXSwgY29udGV4dC5pMThuKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7ICAgICAgICBcblxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG59OyJdfQ==