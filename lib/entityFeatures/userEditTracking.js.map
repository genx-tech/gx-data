{"version":3,"file":"userEditTracking.js","names":["Rules","require","InvalidArgument","Lang","addCreatedBy_","entityModel","feature","context","options","$migration","latest","fields","createdBy","migrationUser","uid","getValueFromContext","uidSource","meta","name","addUpdatedBy_","_context$options$$ski","$skipFeatures","includes","updatedBy","revision","$inc","module","exports","RULE_BEFORE_VALIDATION","op"],"sources":["../../src/entityFeatures/userEditTracking.js"],"sourcesContent":["const Rules = require('../enum/Rules');\nconst { InvalidArgument } = require('../utils/Errors');\nconst Lang = require('../utils/lang');\n\nfunction addCreatedBy_(entityModel, feature, context) {\n    if (context.options.$migration) {\n        context.latest[feature.fields.createdBy] = feature.migrationUser;\n        return true;\n    }\n\n    const uid = entityModel.getValueFromContext(context, feature.uidSource);\n    if (uid == null) {\n        throw new InvalidArgument(\n            `Context \"${feature.uidSource}\" not found. Entity: ${entityModel.meta.name}`\n        );\n    }\n    context.latest[feature.fields.createdBy] = uid;\n    return true;\n}\n\nfunction addUpdatedBy_(entityModel, feature, context) {\n    if (context.options.$skipFeatures?.includes('userEditTracking')) return true;\n\n    const uid = entityModel.getValueFromContext(context, feature.uidSource);\n    if (uid == null) {\n        throw new InvalidArgument(`Context \"${feature.uidSource}\" not found.`);\n    }\n    context.latest[feature.fields.updatedBy] = uid;\n    context.latest[feature.fields.revision] = Lang.$inc(feature.fields.revision, 1);\n    // revision++\n    return true;\n}\n\n/**\n * A rule specifies the change of state will be tracked automatically.\n * @module EntityFeatureRuntime_ChangeLog\n */\n\nmodule.exports = {\n    [Rules.RULE_BEFORE_VALIDATION]: (feature, entityModel, context) =>\n        context.op === 'create'\n            ? addCreatedBy_(entityModel, feature, context)\n            : addUpdatedBy_(entityModel, feature, context),\n};\n"],"mappings":";;;AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,eAAe,CAAC;AACtC,MAAM;EAAEC;AAAgB,CAAC,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AACtD,MAAME,IAAI,GAAGF,OAAO,CAAC,eAAe,CAAC;AAErC,SAASG,aAAaA,CAACC,WAAW,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAClD,IAAIA,OAAO,CAACC,OAAO,CAACC,UAAU,EAAE;IAC5BF,OAAO,CAACG,MAAM,CAACJ,OAAO,CAACK,MAAM,CAACC,SAAS,CAAC,GAAGN,OAAO,CAACO,aAAa;IAChE,OAAO,IAAI;EACf;EAEA,MAAMC,GAAG,GAAGT,WAAW,CAACU,mBAAmB,CAACR,OAAO,EAAED,OAAO,CAACU,SAAS,CAAC;EACvE,IAAIF,GAAG,IAAI,IAAI,EAAE;IACb,MAAM,IAAIZ,eAAe,CACpB,YAAWI,OAAO,CAACU,SAAU,wBAAuBX,WAAW,CAACY,IAAI,CAACC,IAAK,EAAC,CAC/E;EACL;EACAX,OAAO,CAACG,MAAM,CAACJ,OAAO,CAACK,MAAM,CAACC,SAAS,CAAC,GAAGE,GAAG;EAC9C,OAAO,IAAI;AACf;AAEA,SAASK,aAAaA,CAACd,WAAW,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAAA,IAAAa,qBAAA;EAClD,KAAAA,qBAAA,GAAIb,OAAO,CAACC,OAAO,CAACa,aAAa,aAA7BD,qBAAA,CAA+BE,QAAQ,CAAC,kBAAkB,CAAC,EAAE,OAAO,IAAI;EAE5E,MAAMR,GAAG,GAAGT,WAAW,CAACU,mBAAmB,CAACR,OAAO,EAAED,OAAO,CAACU,SAAS,CAAC;EACvE,IAAIF,GAAG,IAAI,IAAI,EAAE;IACb,MAAM,IAAIZ,eAAe,CAAE,YAAWI,OAAO,CAACU,SAAU,cAAa,CAAC;EAC1E;EACAT,OAAO,CAACG,MAAM,CAACJ,OAAO,CAACK,MAAM,CAACY,SAAS,CAAC,GAAGT,GAAG;EAC9CP,OAAO,CAACG,MAAM,CAACJ,OAAO,CAACK,MAAM,CAACa,QAAQ,CAAC,GAAGrB,IAAI,CAACsB,IAAI,CAACnB,OAAO,CAACK,MAAM,CAACa,QAAQ,EAAE,CAAC,CAAC;EAE/E,OAAO,IAAI;AACf;AAOAE,MAAM,CAACC,OAAO,GAAG;EACb,CAAC3B,KAAK,CAAC4B,sBAAsB,GAAG,CAACtB,OAAO,EAAED,WAAW,EAAEE,OAAO,KAC1DA,OAAO,CAACsB,EAAE,KAAK,QAAQ,GACjBzB,aAAa,CAACC,WAAW,EAAEC,OAAO,EAAEC,OAAO,CAAC,GAC5CY,aAAa,CAACd,WAAW,EAAEC,OAAO,EAAEC,OAAO;AACzD,CAAC"}