"use strict";require("source-map-support/register");const Util=require("rk-utils");const{_}=Util;const{ValidationError}=require("../Errors");const Rules=require("../../enum/Rules");module.exports={[Rules.RULE_BEFORE_CREATE]:(feature,entityModel,context)=>{_.each(feature,item=>{if(_.every(item,fieldName=>_.isNil(context.latest[fieldName]))){throw new ValidationError(`At least one of these fields ${item.map(f=>Util.quote(f)).join(", ")} should not be null.`,{entity:entityModel.meta.name,fields:feature})}});return true},[Rules.RULE_BEFORE_UPDATE]:(feature,entityModel,context)=>{_.each(feature,item=>{if(_.every(item,fieldName=>context.latest.hasOwnProperty(fieldName)?_.isNil(context.latest[fieldName]):context.existing&&_.isNil(context.existing[fieldName]))){throw new ValidationError(`At least one of these fields ${item.map(f=>Util.quote(f)).join(", ")} should not be null.`,{entity:entityModel.meta.name,fields:feature})}});return true}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lbnRpdHlGZWF0dXJlcy9hdExlYXN0T25lTm90TnVsbC5qcyJdLCJuYW1lcyI6WyJVdGlsIiwicmVxdWlyZSIsIl8iLCJWYWxpZGF0aW9uRXJyb3IiLCJSdWxlcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJSVUxFX0JFRk9SRV9DUkVBVEUiLCJmZWF0dXJlIiwiZW50aXR5TW9kZWwiLCJjb250ZXh0IiwiZWFjaCIsIml0ZW0iLCJldmVyeSIsImZpZWxkTmFtZSIsImlzTmlsIiwibGF0ZXN0IiwibWFwIiwiZiIsInF1b3RlIiwiam9pbiIsImVudGl0eSIsIm1ldGEiLCJuYW1lIiwiZmllbGRzIiwiUlVMRV9CRUZPUkVfVVBEQVRFIiwiaGFzT3duUHJvcGVydHkiLCJleGlzdGluZyJdLCJtYXBwaW5ncyI6IkFBQUEsYSx1Q0FFQSxLQUFNQSxDQUFBQSxJQUFJLENBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXBCLENBQ0EsS0FBTSxDQUFFQyxDQUFGLEVBQVFGLElBQWQsQ0FDQSxLQUFNLENBQUVHLGVBQUYsRUFBc0JGLE9BQU8sQ0FBQyxXQUFELENBQW5DLENBQ0EsS0FBTUcsQ0FBQUEsS0FBSyxDQUFHSCxPQUFPLENBQUMsa0JBQUQsQ0FBckIsQ0FPQUksTUFBTSxDQUFDQyxPQUFQLENBQWlCLENBQ2IsQ0FBQ0YsS0FBSyxDQUFDRyxrQkFBUCxFQUE0QixDQUFDQyxPQUFELENBQVVDLFdBQVYsQ0FBdUJDLE9BQXZCLEdBQW1DLENBQzNEUixDQUFDLENBQUNTLElBQUYsQ0FBT0gsT0FBUCxDQUFnQkksSUFBSSxFQUFJLENBQ3BCLEdBQUlWLENBQUMsQ0FBQ1csS0FBRixDQUFRRCxJQUFSLENBQWNFLFNBQVMsRUFBSVosQ0FBQyxDQUFDYSxLQUFGLENBQVFMLE9BQU8sQ0FBQ00sTUFBUixDQUFlRixTQUFmLENBQVIsQ0FBM0IsQ0FBSixDQUFvRSxDQUNoRSxLQUFNLElBQUlYLENBQUFBLGVBQUosQ0FBcUIsZ0NBQWdDUyxJQUFJLENBQUNLLEdBQUwsQ0FBU0MsQ0FBQyxFQUFJbEIsSUFBSSxDQUFDbUIsS0FBTCxDQUFXRCxDQUFYLENBQWQsRUFBNkJFLElBQTdCLENBQWtDLElBQWxDLENBQXlDLHNCQUE5RixDQUFxSCxDQUN2SEMsTUFBTSxDQUFFWixXQUFXLENBQUNhLElBQVosQ0FBaUJDLElBRDhGLENBRXZIQyxNQUFNLENBQUVoQixPQUYrRyxDQUFySCxDQUlULENBQ0osQ0FQRCxFQVNBLE1BQU8sS0FDVixDQVpZLENBY2IsQ0FBQ0osS0FBSyxDQUFDcUIsa0JBQVAsRUFBNEIsQ0FBQ2pCLE9BQUQsQ0FBVUMsV0FBVixDQUF1QkMsT0FBdkIsR0FBbUMsQ0FDM0RSLENBQUMsQ0FBQ1MsSUFBRixDQUFPSCxPQUFQLENBQWdCSSxJQUFJLEVBQUksQ0FDcEIsR0FBSVYsQ0FBQyxDQUFDVyxLQUFGLENBQVFELElBQVIsQ0FBY0UsU0FBUyxFQUFJSixPQUFPLENBQUNNLE1BQVIsQ0FBZVUsY0FBZixDQUE4QlosU0FBOUIsRUFDM0JaLENBQUMsQ0FBQ2EsS0FBRixDQUFRTCxPQUFPLENBQUNNLE1BQVIsQ0FBZUYsU0FBZixDQUFSLENBRDJCLENBRTFCSixPQUFPLENBQUNpQixRQUFSLEVBQW9CekIsQ0FBQyxDQUFDYSxLQUFGLENBQVFMLE9BQU8sQ0FBQ2lCLFFBQVIsQ0FBaUJiLFNBQWpCLENBQVIsQ0FGckIsQ0FBSixDQUdFLENBQ0UsS0FBTSxJQUFJWCxDQUFBQSxlQUFKLENBQXFCLGdDQUFnQ1MsSUFBSSxDQUFDSyxHQUFMLENBQVNDLENBQUMsRUFBSWxCLElBQUksQ0FBQ21CLEtBQUwsQ0FBV0QsQ0FBWCxDQUFkLEVBQTZCRSxJQUE3QixDQUFrQyxJQUFsQyxDQUF5QyxzQkFBOUYsQ0FBcUgsQ0FDdkhDLE1BQU0sQ0FBRVosV0FBVyxDQUFDYSxJQUFaLENBQWlCQyxJQUQ4RixDQUV2SEMsTUFBTSxDQUFFaEIsT0FGK0csQ0FBckgsQ0FJVCxDQUNKLENBVkQsRUFZQSxNQUFPLEtBQ1YsQ0E1QlksQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuY29uc3QgVXRpbCA9IHJlcXVpcmUoJ3JrLXV0aWxzJyk7XG5jb25zdCB7IF8gfSA9IFV0aWw7XG5jb25zdCB7IFZhbGlkYXRpb25FcnJvciB9ID0gcmVxdWlyZSgnLi4vRXJyb3JzJyk7XG5jb25zdCBSdWxlcyA9IHJlcXVpcmUoJy4uLy4uL2VudW0vUnVsZXMnKTtcblxuLyoqXG4gKiBBIHJ1bGUgc3BlY2lmaWVzIGF0IGxlYXN0IG9uZSBmaWVsZCBub3QgbnVsbCwgZS5nLiBlbWFpbCBvciBtb2JpbGUuXG4gKiBAbW9kdWxlIEVudGl0eUZlYXR1cmVSdW50aW1lX0F0TGVhc3RPbmVOb3ROdWxsXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgW1J1bGVzLlJVTEVfQkVGT1JFX0NSRUFURV06IChmZWF0dXJlLCBlbnRpdHlNb2RlbCwgY29udGV4dCkgPT4ge1xuICAgICAgICBfLmVhY2goZmVhdHVyZSwgaXRlbSA9PiB7XG4gICAgICAgICAgICBpZiAoXy5ldmVyeShpdGVtLCBmaWVsZE5hbWUgPT4gXy5pc05pbChjb250ZXh0LmxhdGVzdFtmaWVsZE5hbWVdKSkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKGBBdCBsZWFzdCBvbmUgb2YgdGhlc2UgZmllbGRzICR7IGl0ZW0ubWFwKGYgPT4gVXRpbC5xdW90ZShmKSkuam9pbignLCAnKSB9IHNob3VsZCBub3QgYmUgbnVsbC5gLCB7XG4gICAgICAgICAgICAgICAgICAgIGVudGl0eTogZW50aXR5TW9kZWwubWV0YS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICBmaWVsZHM6IGZlYXR1cmVcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7ICBcblxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuXG4gICAgW1J1bGVzLlJVTEVfQkVGT1JFX1VQREFURV06IChmZWF0dXJlLCBlbnRpdHlNb2RlbCwgY29udGV4dCkgPT4ge1xuICAgICAgICBfLmVhY2goZmVhdHVyZSwgaXRlbSA9PiB7XG4gICAgICAgICAgICBpZiAoXy5ldmVyeShpdGVtLCBmaWVsZE5hbWUgPT4gY29udGV4dC5sYXRlc3QuaGFzT3duUHJvcGVydHkoZmllbGROYW1lKSA/IFxuICAgICAgICAgICAgICAgIF8uaXNOaWwoY29udGV4dC5sYXRlc3RbZmllbGROYW1lXSkgOiBcbiAgICAgICAgICAgICAgICAoY29udGV4dC5leGlzdGluZyAmJiBfLmlzTmlsKGNvbnRleHQuZXhpc3RpbmdbZmllbGROYW1lXSkpKVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihgQXQgbGVhc3Qgb25lIG9mIHRoZXNlIGZpZWxkcyAkeyBpdGVtLm1hcChmID0+IFV0aWwucXVvdGUoZikpLmpvaW4oJywgJykgfSBzaG91bGQgbm90IGJlIG51bGwuYCwge1xuICAgICAgICAgICAgICAgICAgICBlbnRpdHk6IGVudGl0eU1vZGVsLm1ldGEubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgZmllbGRzOiBmZWF0dXJlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pOyAgXG5cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxufTsiXX0=