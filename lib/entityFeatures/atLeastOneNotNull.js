"use strict";

require("source-map-support/register");

const Util = require('rk-utils');

const {
  _
} = Util;

const {
  ValidationError
} = require('../utils/Errors');

const Rules = require('../enum/Rules');

module.exports = {
  [Rules.RULE_BEFORE_CREATE]: (feature, entityModel, context) => {
    _.each(feature, item => {
      if (_.every(item, fieldName => _.isNil(context.latest[fieldName]))) {
        throw new ValidationError(`At least one of these fields ${item.map(f => Util.quote(f)).join(', ')} should not be null.`, {
          entity: entityModel.meta.name,
          fields: feature
        });
      }
    });

    return true;
  },
  [Rules.RULE_BEFORE_UPDATE]: (feature, entityModel, context) => {
    _.each(feature, item => {
      if (_.every(item, fieldName => context.latest.hasOwnProperty(fieldName) ? _.isNil(context.latest[fieldName]) : context.existing && _.isNil(context.existing[fieldName]))) {
        throw new ValidationError(`At least one of these fields ${item.map(f => Util.quote(f)).join(', ')} should not be null.`, {
          entity: entityModel.meta.name,
          fields: feature
        });
      }
    });

    return true;
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lbnRpdHlGZWF0dXJlcy9hdExlYXN0T25lTm90TnVsbC5qcyJdLCJuYW1lcyI6WyJVdGlsIiwicmVxdWlyZSIsIl8iLCJWYWxpZGF0aW9uRXJyb3IiLCJSdWxlcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJSVUxFX0JFRk9SRV9DUkVBVEUiLCJmZWF0dXJlIiwiZW50aXR5TW9kZWwiLCJjb250ZXh0IiwiZWFjaCIsIml0ZW0iLCJldmVyeSIsImZpZWxkTmFtZSIsImlzTmlsIiwibGF0ZXN0IiwibWFwIiwiZiIsInF1b3RlIiwiam9pbiIsImVudGl0eSIsIm1ldGEiLCJuYW1lIiwiZmllbGRzIiwiUlVMRV9CRUZPUkVfVVBEQVRFIiwiaGFzT3duUHJvcGVydHkiLCJleGlzdGluZyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFFQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXBCOztBQUNBLE1BQU07QUFBRUMsRUFBQUE7QUFBRixJQUFRRixJQUFkOztBQUNBLE1BQU07QUFBRUcsRUFBQUE7QUFBRixJQUFzQkYsT0FBTyxDQUFDLGlCQUFELENBQW5DOztBQUNBLE1BQU1HLEtBQUssR0FBR0gsT0FBTyxDQUFDLGVBQUQsQ0FBckI7O0FBT0FJLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiLEdBQUNGLEtBQUssQ0FBQ0csa0JBQVAsR0FBNEIsQ0FBQ0MsT0FBRCxFQUFVQyxXQUFWLEVBQXVCQyxPQUF2QixLQUFtQztBQUMzRFIsSUFBQUEsQ0FBQyxDQUFDUyxJQUFGLENBQU9ILE9BQVAsRUFBZ0JJLElBQUksSUFBSTtBQUNwQixVQUFJVixDQUFDLENBQUNXLEtBQUYsQ0FBUUQsSUFBUixFQUFjRSxTQUFTLElBQUlaLENBQUMsQ0FBQ2EsS0FBRixDQUFRTCxPQUFPLENBQUNNLE1BQVIsQ0FBZUYsU0FBZixDQUFSLENBQTNCLENBQUosRUFBb0U7QUFDaEUsY0FBTSxJQUFJWCxlQUFKLENBQXFCLGdDQUFnQ1MsSUFBSSxDQUFDSyxHQUFMLENBQVNDLENBQUMsSUFBSWxCLElBQUksQ0FBQ21CLEtBQUwsQ0FBV0QsQ0FBWCxDQUFkLEVBQTZCRSxJQUE3QixDQUFrQyxJQUFsQyxDQUF5QyxzQkFBOUYsRUFBcUg7QUFDdkhDLFVBQUFBLE1BQU0sRUFBRVosV0FBVyxDQUFDYSxJQUFaLENBQWlCQyxJQUQ4RjtBQUV2SEMsVUFBQUEsTUFBTSxFQUFFaEI7QUFGK0csU0FBckgsQ0FBTjtBQUlIO0FBQ0osS0FQRDs7QUFTQSxXQUFPLElBQVA7QUFDSCxHQVpZO0FBY2IsR0FBQ0osS0FBSyxDQUFDcUIsa0JBQVAsR0FBNEIsQ0FBQ2pCLE9BQUQsRUFBVUMsV0FBVixFQUF1QkMsT0FBdkIsS0FBbUM7QUFDM0RSLElBQUFBLENBQUMsQ0FBQ1MsSUFBRixDQUFPSCxPQUFQLEVBQWdCSSxJQUFJLElBQUk7QUFDcEIsVUFBSVYsQ0FBQyxDQUFDVyxLQUFGLENBQVFELElBQVIsRUFBY0UsU0FBUyxJQUFJSixPQUFPLENBQUNNLE1BQVIsQ0FBZVUsY0FBZixDQUE4QlosU0FBOUIsSUFDM0JaLENBQUMsQ0FBQ2EsS0FBRixDQUFRTCxPQUFPLENBQUNNLE1BQVIsQ0FBZUYsU0FBZixDQUFSLENBRDJCLEdBRTFCSixPQUFPLENBQUNpQixRQUFSLElBQW9CekIsQ0FBQyxDQUFDYSxLQUFGLENBQVFMLE9BQU8sQ0FBQ2lCLFFBQVIsQ0FBaUJiLFNBQWpCLENBQVIsQ0FGckIsQ0FBSixFQUdFO0FBQ0UsY0FBTSxJQUFJWCxlQUFKLENBQXFCLGdDQUFnQ1MsSUFBSSxDQUFDSyxHQUFMLENBQVNDLENBQUMsSUFBSWxCLElBQUksQ0FBQ21CLEtBQUwsQ0FBV0QsQ0FBWCxDQUFkLEVBQTZCRSxJQUE3QixDQUFrQyxJQUFsQyxDQUF5QyxzQkFBOUYsRUFBcUg7QUFDdkhDLFVBQUFBLE1BQU0sRUFBRVosV0FBVyxDQUFDYSxJQUFaLENBQWlCQyxJQUQ4RjtBQUV2SEMsVUFBQUEsTUFBTSxFQUFFaEI7QUFGK0csU0FBckgsQ0FBTjtBQUlIO0FBQ0osS0FWRDs7QUFZQSxXQUFPLElBQVA7QUFDSDtBQTVCWSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCBVdGlsID0gcmVxdWlyZSgncmstdXRpbHMnKTtcbmNvbnN0IHsgXyB9ID0gVXRpbDtcbmNvbnN0IHsgVmFsaWRhdGlvbkVycm9yIH0gPSByZXF1aXJlKCcuLi91dGlscy9FcnJvcnMnKTtcbmNvbnN0IFJ1bGVzID0gcmVxdWlyZSgnLi4vZW51bS9SdWxlcycpO1xuXG4vKipcbiAqIEEgcnVsZSBzcGVjaWZpZXMgYXQgbGVhc3Qgb25lIGZpZWxkIG5vdCBudWxsLCBlLmcuIGVtYWlsIG9yIG1vYmlsZS5cbiAqIEBtb2R1bGUgRW50aXR5RmVhdHVyZVJ1bnRpbWVfQXRMZWFzdE9uZU5vdE51bGxcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBbUnVsZXMuUlVMRV9CRUZPUkVfQ1JFQVRFXTogKGZlYXR1cmUsIGVudGl0eU1vZGVsLCBjb250ZXh0KSA9PiB7XG4gICAgICAgIF8uZWFjaChmZWF0dXJlLCBpdGVtID0+IHtcbiAgICAgICAgICAgIGlmIChfLmV2ZXJ5KGl0ZW0sIGZpZWxkTmFtZSA9PiBfLmlzTmlsKGNvbnRleHQubGF0ZXN0W2ZpZWxkTmFtZV0pKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoYEF0IGxlYXN0IG9uZSBvZiB0aGVzZSBmaWVsZHMgJHsgaXRlbS5tYXAoZiA9PiBVdGlsLnF1b3RlKGYpKS5qb2luKCcsICcpIH0gc2hvdWxkIG5vdCBiZSBudWxsLmAsIHtcbiAgICAgICAgICAgICAgICAgICAgZW50aXR5OiBlbnRpdHlNb2RlbC5tZXRhLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGZpZWxkczogZmVhdHVyZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTsgIFxuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG5cbiAgICBbUnVsZXMuUlVMRV9CRUZPUkVfVVBEQVRFXTogKGZlYXR1cmUsIGVudGl0eU1vZGVsLCBjb250ZXh0KSA9PiB7XG4gICAgICAgIF8uZWFjaChmZWF0dXJlLCBpdGVtID0+IHtcbiAgICAgICAgICAgIGlmIChfLmV2ZXJ5KGl0ZW0sIGZpZWxkTmFtZSA9PiBjb250ZXh0LmxhdGVzdC5oYXNPd25Qcm9wZXJ0eShmaWVsZE5hbWUpID8gXG4gICAgICAgICAgICAgICAgXy5pc05pbChjb250ZXh0LmxhdGVzdFtmaWVsZE5hbWVdKSA6IFxuICAgICAgICAgICAgICAgIChjb250ZXh0LmV4aXN0aW5nICYmIF8uaXNOaWwoY29udGV4dC5leGlzdGluZ1tmaWVsZE5hbWVdKSkpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKGBBdCBsZWFzdCBvbmUgb2YgdGhlc2UgZmllbGRzICR7IGl0ZW0ubWFwKGYgPT4gVXRpbC5xdW90ZShmKSkuam9pbignLCAnKSB9IHNob3VsZCBub3QgYmUgbnVsbC5gLCB7XG4gICAgICAgICAgICAgICAgICAgIGVudGl0eTogZW50aXR5TW9kZWwubWV0YS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICBmaWVsZHM6IGZlYXR1cmVcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7ICBcblxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG59OyJdfQ==