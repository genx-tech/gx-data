"use strict";

require("source-map-support/register");

const Rules = require('../enum/Rules');

const {
  InvalidArgument
} = require('../utils/Errors');

function addCreatedBy_(entityModel, feature, context) {
  if (context.options.$migration && context.latest[feature.fields.createdBy] != null) {
    return true;
  }

  let uid = entityModel.getValueFromContext(context, feature.uidSource);

  if (uid == null) {
    throw new InvalidArgument(`Context "${feature.uidSource}" not found.`);
  }

  context.latest[feature.fields.createdBy] = uid;
  return true;
}

function addUpdatedBy_(entityModel, feature, context) {
  let uid = entityModel.getValueFromContext(context, feature.uidSource);

  if (uid == null) {
    throw new InvalidArgument(`Context "${feature.uidSource}" not found.`);
  }

  context.latest[feature.fields.updatedBy] = uid;
  return true;
}

module.exports = {
  [Rules.RULE_BEFORE_CREATE]: (feature, entityModel, context) => addCreatedBy_(entityModel, feature, context),
  [Rules.RULE_BEFORE_UPDATE]: (feature, entityModel, context) => addUpdatedBy_(entityModel, feature, context)
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lbnRpdHlGZWF0dXJlcy91c2VyRWRpdFRyYWNraW5nLmpzIl0sIm5hbWVzIjpbIlJ1bGVzIiwicmVxdWlyZSIsIkludmFsaWRBcmd1bWVudCIsImFkZENyZWF0ZWRCeV8iLCJlbnRpdHlNb2RlbCIsImZlYXR1cmUiLCJjb250ZXh0Iiwib3B0aW9ucyIsIiRtaWdyYXRpb24iLCJsYXRlc3QiLCJmaWVsZHMiLCJjcmVhdGVkQnkiLCJ1aWQiLCJnZXRWYWx1ZUZyb21Db250ZXh0IiwidWlkU291cmNlIiwiYWRkVXBkYXRlZEJ5XyIsInVwZGF0ZWRCeSIsIm1vZHVsZSIsImV4cG9ydHMiLCJSVUxFX0JFRk9SRV9DUkVBVEUiLCJSVUxFX0JFRk9SRV9VUERBVEUiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsZUFBRCxDQUFyQjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBc0JELE9BQU8sQ0FBQyxpQkFBRCxDQUFuQzs7QUFFQSxTQUFTRSxhQUFULENBQXVCQyxXQUF2QixFQUFvQ0MsT0FBcEMsRUFBNkNDLE9BQTdDLEVBQXNEO0FBQ2xELE1BQUlBLE9BQU8sQ0FBQ0MsT0FBUixDQUFnQkMsVUFBaEIsSUFBOEJGLE9BQU8sQ0FBQ0csTUFBUixDQUFlSixPQUFPLENBQUNLLE1BQVIsQ0FBZUMsU0FBOUIsS0FBNEMsSUFBOUUsRUFBb0Y7QUFDaEYsV0FBTyxJQUFQO0FBQ0g7O0FBRUQsTUFBSUMsR0FBRyxHQUFHUixXQUFXLENBQUNTLG1CQUFaLENBQWdDUCxPQUFoQyxFQUF5Q0QsT0FBTyxDQUFDUyxTQUFqRCxDQUFWOztBQUNBLE1BQUlGLEdBQUcsSUFBSSxJQUFYLEVBQWlCO0FBQ2IsVUFBTSxJQUFJVixlQUFKLENBQXFCLFlBQVdHLE9BQU8sQ0FBQ1MsU0FBVSxjQUFsRCxDQUFOO0FBQ0g7O0FBQ0RSLEVBQUFBLE9BQU8sQ0FBQ0csTUFBUixDQUFlSixPQUFPLENBQUNLLE1BQVIsQ0FBZUMsU0FBOUIsSUFBMkNDLEdBQTNDO0FBQ0EsU0FBTyxJQUFQO0FBQ0g7O0FBRUQsU0FBU0csYUFBVCxDQUF1QlgsV0FBdkIsRUFBb0NDLE9BQXBDLEVBQTZDQyxPQUE3QyxFQUFzRDtBQUNsRCxNQUFJTSxHQUFHLEdBQUdSLFdBQVcsQ0FBQ1MsbUJBQVosQ0FBZ0NQLE9BQWhDLEVBQXlDRCxPQUFPLENBQUNTLFNBQWpELENBQVY7O0FBQ0EsTUFBSUYsR0FBRyxJQUFJLElBQVgsRUFBaUI7QUFDYixVQUFNLElBQUlWLGVBQUosQ0FBcUIsWUFBV0csT0FBTyxDQUFDUyxTQUFVLGNBQWxELENBQU47QUFDSDs7QUFDRFIsRUFBQUEsT0FBTyxDQUFDRyxNQUFSLENBQWVKLE9BQU8sQ0FBQ0ssTUFBUixDQUFlTSxTQUE5QixJQUEyQ0osR0FBM0M7QUFDQSxTQUFPLElBQVA7QUFDSDs7QUFPREssTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2IsR0FBQ2xCLEtBQUssQ0FBQ21CLGtCQUFQLEdBQTRCLENBQUNkLE9BQUQsRUFBVUQsV0FBVixFQUF1QkUsT0FBdkIsS0FBbUNILGFBQWEsQ0FBQ0MsV0FBRCxFQUFjQyxPQUFkLEVBQXVCQyxPQUF2QixDQUQvRDtBQUViLEdBQUNOLEtBQUssQ0FBQ29CLGtCQUFQLEdBQTRCLENBQUNmLE9BQUQsRUFBVUQsV0FBVixFQUF1QkUsT0FBdkIsS0FBbUNTLGFBQWEsQ0FBQ1gsV0FBRCxFQUFjQyxPQUFkLEVBQXVCQyxPQUF2QjtBQUYvRCxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCBSdWxlcyA9IHJlcXVpcmUoJy4uL2VudW0vUnVsZXMnKTtcbmNvbnN0IHsgSW52YWxpZEFyZ3VtZW50IH0gPSByZXF1aXJlKCcuLi91dGlscy9FcnJvcnMnKTtcblxuZnVuY3Rpb24gYWRkQ3JlYXRlZEJ5XyhlbnRpdHlNb2RlbCwgZmVhdHVyZSwgY29udGV4dCkge1xuICAgIGlmIChjb250ZXh0Lm9wdGlvbnMuJG1pZ3JhdGlvbiAmJiBjb250ZXh0LmxhdGVzdFtmZWF0dXJlLmZpZWxkcy5jcmVhdGVkQnldICE9IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgbGV0IHVpZCA9IGVudGl0eU1vZGVsLmdldFZhbHVlRnJvbUNvbnRleHQoY29udGV4dCwgZmVhdHVyZS51aWRTb3VyY2UpO1xuICAgIGlmICh1aWQgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZEFyZ3VtZW50KGBDb250ZXh0IFwiJHtmZWF0dXJlLnVpZFNvdXJjZX1cIiBub3QgZm91bmQuYClcbiAgICB9XG4gICAgY29udGV4dC5sYXRlc3RbZmVhdHVyZS5maWVsZHMuY3JlYXRlZEJ5XSA9IHVpZDtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gYWRkVXBkYXRlZEJ5XyhlbnRpdHlNb2RlbCwgZmVhdHVyZSwgY29udGV4dCkge1xuICAgIGxldCB1aWQgPSBlbnRpdHlNb2RlbC5nZXRWYWx1ZUZyb21Db250ZXh0KGNvbnRleHQsIGZlYXR1cmUudWlkU291cmNlKTtcbiAgICBpZiAodWlkID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWRBcmd1bWVudChgQ29udGV4dCBcIiR7ZmVhdHVyZS51aWRTb3VyY2V9XCIgbm90IGZvdW5kLmApXG4gICAgfVxuICAgIGNvbnRleHQubGF0ZXN0W2ZlYXR1cmUuZmllbGRzLnVwZGF0ZWRCeV0gPSB1aWQ7XG4gICAgcmV0dXJuIHRydWU7XG59XG5cbi8qKlxuICogQSBydWxlIHNwZWNpZmllcyB0aGUgY2hhbmdlIG9mIHN0YXRlIHdpbGwgYmUgdHJhY2tlZCBhdXRvbWF0aWNhbGx5LlxuICogQG1vZHVsZSBFbnRpdHlGZWF0dXJlUnVudGltZV9DaGFuZ2VMb2dcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBbUnVsZXMuUlVMRV9CRUZPUkVfQ1JFQVRFXTogKGZlYXR1cmUsIGVudGl0eU1vZGVsLCBjb250ZXh0KSA9PiBhZGRDcmVhdGVkQnlfKGVudGl0eU1vZGVsLCBmZWF0dXJlLCBjb250ZXh0KSxcbiAgICBbUnVsZXMuUlVMRV9CRUZPUkVfVVBEQVRFXTogKGZlYXR1cmUsIGVudGl0eU1vZGVsLCBjb250ZXh0KSA9PiBhZGRVcGRhdGVkQnlfKGVudGl0eU1vZGVsLCBmZWF0dXJlLCBjb250ZXh0KVxufTsiXX0=