"use strict";

require("source-map-support/register");

const Rules = require('../enum/Rules');

function addCreatedBy_(entityModel, feature, context) {
  let uid = entityModel.getValueFromContext(context, feature.uidSource);
  context.latest[feature.fields.createdBy] = uid;
}

function addUpdatedBy_(entityModel, feature, context) {
  let uid = entityModel.getValueFromContext(context, feature.uidSource);
  context.latest[feature.fields.updatedBy] = uid;
}

module.exports = {
  [Rules.RULE_BEFORE_CREATE]: (feature, entityModel, context) => addCreatedBy_(entityModel, feature, context),
  [Rules.RULE_BEFORE_UPDATE]: (feature, entityModel, context) => addUpdatedBy_(entityModel, feature, context)
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lbnRpdHlGZWF0dXJlcy91c2VyRWRpdFRyYWNraW5nLmpzIl0sIm5hbWVzIjpbIlJ1bGVzIiwicmVxdWlyZSIsImFkZENyZWF0ZWRCeV8iLCJlbnRpdHlNb2RlbCIsImZlYXR1cmUiLCJjb250ZXh0IiwidWlkIiwiZ2V0VmFsdWVGcm9tQ29udGV4dCIsInVpZFNvdXJjZSIsImxhdGVzdCIsImZpZWxkcyIsImNyZWF0ZWRCeSIsImFkZFVwZGF0ZWRCeV8iLCJ1cGRhdGVkQnkiLCJtb2R1bGUiLCJleHBvcnRzIiwiUlVMRV9CRUZPUkVfQ1JFQVRFIiwiUlVMRV9CRUZPUkVfVVBEQVRFIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLGVBQUQsQ0FBckI7O0FBRUEsU0FBU0MsYUFBVCxDQUF1QkMsV0FBdkIsRUFBb0NDLE9BQXBDLEVBQTZDQyxPQUE3QyxFQUFzRDtBQUNsRCxNQUFJQyxHQUFHLEdBQUdILFdBQVcsQ0FBQ0ksbUJBQVosQ0FBZ0NGLE9BQWhDLEVBQXlDRCxPQUFPLENBQUNJLFNBQWpELENBQVY7QUFDQUgsRUFBQUEsT0FBTyxDQUFDSSxNQUFSLENBQWVMLE9BQU8sQ0FBQ00sTUFBUixDQUFlQyxTQUE5QixJQUEyQ0wsR0FBM0M7QUFDSDs7QUFFRCxTQUFTTSxhQUFULENBQXVCVCxXQUF2QixFQUFvQ0MsT0FBcEMsRUFBNkNDLE9BQTdDLEVBQXNEO0FBQ2xELE1BQUlDLEdBQUcsR0FBR0gsV0FBVyxDQUFDSSxtQkFBWixDQUFnQ0YsT0FBaEMsRUFBeUNELE9BQU8sQ0FBQ0ksU0FBakQsQ0FBVjtBQUNBSCxFQUFBQSxPQUFPLENBQUNJLE1BQVIsQ0FBZUwsT0FBTyxDQUFDTSxNQUFSLENBQWVHLFNBQTlCLElBQTJDUCxHQUEzQztBQUNIOztBQU9EUSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYixHQUFDZixLQUFLLENBQUNnQixrQkFBUCxHQUE0QixDQUFDWixPQUFELEVBQVVELFdBQVYsRUFBdUJFLE9BQXZCLEtBQW1DSCxhQUFhLENBQUNDLFdBQUQsRUFBY0MsT0FBZCxFQUF1QkMsT0FBdkIsQ0FEL0Q7QUFFYixHQUFDTCxLQUFLLENBQUNpQixrQkFBUCxHQUE0QixDQUFDYixPQUFELEVBQVVELFdBQVYsRUFBdUJFLE9BQXZCLEtBQW1DTyxhQUFhLENBQUNULFdBQUQsRUFBY0MsT0FBZCxFQUF1QkMsT0FBdkI7QUFGL0QsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuY29uc3QgUnVsZXMgPSByZXF1aXJlKCcuLi9lbnVtL1J1bGVzJyk7XG5cbmZ1bmN0aW9uIGFkZENyZWF0ZWRCeV8oZW50aXR5TW9kZWwsIGZlYXR1cmUsIGNvbnRleHQpIHtcbiAgICBsZXQgdWlkID0gZW50aXR5TW9kZWwuZ2V0VmFsdWVGcm9tQ29udGV4dChjb250ZXh0LCBmZWF0dXJlLnVpZFNvdXJjZSk7XG4gICAgY29udGV4dC5sYXRlc3RbZmVhdHVyZS5maWVsZHMuY3JlYXRlZEJ5XSA9IHVpZDtcbn1cblxuZnVuY3Rpb24gYWRkVXBkYXRlZEJ5XyhlbnRpdHlNb2RlbCwgZmVhdHVyZSwgY29udGV4dCkge1xuICAgIGxldCB1aWQgPSBlbnRpdHlNb2RlbC5nZXRWYWx1ZUZyb21Db250ZXh0KGNvbnRleHQsIGZlYXR1cmUudWlkU291cmNlKTtcbiAgICBjb250ZXh0LmxhdGVzdFtmZWF0dXJlLmZpZWxkcy51cGRhdGVkQnldID0gdWlkO1xufVxuXG4vKipcbiAqIEEgcnVsZSBzcGVjaWZpZXMgdGhlIGNoYW5nZSBvZiBzdGF0ZSB3aWxsIGJlIHRyYWNrZWQgYXV0b21hdGljYWxseS5cbiAqIEBtb2R1bGUgRW50aXR5RmVhdHVyZVJ1bnRpbWVfQ2hhbmdlTG9nXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgW1J1bGVzLlJVTEVfQkVGT1JFX0NSRUFURV06IChmZWF0dXJlLCBlbnRpdHlNb2RlbCwgY29udGV4dCkgPT4gYWRkQ3JlYXRlZEJ5XyhlbnRpdHlNb2RlbCwgZmVhdHVyZSwgY29udGV4dCksXG4gICAgW1J1bGVzLlJVTEVfQkVGT1JFX1VQREFURV06IChmZWF0dXJlLCBlbnRpdHlNb2RlbCwgY29udGV4dCkgPT4gYWRkVXBkYXRlZEJ5XyhlbnRpdHlNb2RlbCwgZmVhdHVyZSwgY29udGV4dClcbn07Il19