{"version":3,"file":"index.js","names":["path","require","_","fs","basePath","resolve","__dirname","features","readdirSync","featureRules","forEach","file","f","join","statSync","isFile","endsWith","featureName","basename","feature","forOwn","action","ruleName","key","Error","module","exports","applyRules_","entityModel","context","meta","featureInfo","options","$features","customFeatureInfo","asExpected"],"sources":["../../src/entityFeatures/index.js"],"sourcesContent":["const path = require('path');\nconst { _ } = require('@genx/july');\nconst { fs } = require('@genx/sys');\n\nconst basePath = path.resolve(__dirname);\nconst features = fs.readdirSync(basePath);\n\nconst featureRules = {};\n\nfeatures.forEach((file) => {\n    const f = path.join(basePath, file);\n    if (fs.statSync(f).isFile() && _.endsWith(file, '.js')) {\n        const featureName = path.basename(file, '.js');\n        if (featureName === 'index') return;\n\n        const feature = require(f);\n\n        _.forOwn(feature, (action, ruleName) => {\n            const key = featureName + '.' + ruleName;\n\n            if (key in featureRules) {\n                throw new Error(`Duplicate feature rule: ${key}`);\n            }\n            featureRules[key] = action;\n        });\n    }\n});\n\nmodule.exports = {\n    applyRules_: async (ruleName, entityModel, context) => {\n        for (const featureName in entityModel.meta.features) {\n            const key = featureName + '.' + ruleName;\n            const action = featureRules[key];\n\n            if (action) {\n                let featureInfo = entityModel.meta.features[featureName];\n\n                if (\n                    context.options.$features &&\n                    featureName in context.options.$features\n                ) {\n                    const customFeatureInfo =\n                        context.options.$features[featureName];\n                    if (!customFeatureInfo) {\n                        continue;\n                    }\n\n                    featureInfo = { ...featureInfo, ...customFeatureInfo };\n                }\n\n                const asExpected = await action(\n                    featureInfo,\n                    entityModel,\n                    context\n                );\n                if (!asExpected) return false;\n            }\n        }\n\n        return true;\n    },\n};\n"],"mappings":";;;AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAM;EAAEC;AAAE,CAAC,GAAGD,OAAO,CAAC,YAAY,CAAC;AACnC,MAAM;EAAEE;AAAG,CAAC,GAAGF,OAAO,CAAC,WAAW,CAAC;AAEnC,MAAMG,QAAQ,GAAGJ,IAAI,CAACK,OAAO,CAACC,SAAS,CAAC;AACxC,MAAMC,QAAQ,GAAGJ,EAAE,CAACK,WAAW,CAACJ,QAAQ,CAAC;AAEzC,MAAMK,YAAY,GAAG,CAAC,CAAC;AAEvBF,QAAQ,CAACG,OAAO,CAAEC,IAAI,IAAK;EACvB,MAAMC,CAAC,GAAGZ,IAAI,CAACa,IAAI,CAACT,QAAQ,EAAEO,IAAI,CAAC;EACnC,IAAIR,EAAE,CAACW,QAAQ,CAACF,CAAC,CAAC,CAACG,MAAM,EAAE,IAAIb,CAAC,CAACc,QAAQ,CAACL,IAAI,EAAE,KAAK,CAAC,EAAE;IACpD,MAAMM,WAAW,GAAGjB,IAAI,CAACkB,QAAQ,CAACP,IAAI,EAAE,KAAK,CAAC;IAC9C,IAAIM,WAAW,KAAK,OAAO,EAAE;IAE7B,MAAME,OAAO,GAAGlB,OAAO,CAACW,CAAC,CAAC;IAE1BV,CAAC,CAACkB,MAAM,CAACD,OAAO,EAAE,CAACE,MAAM,EAAEC,QAAQ,KAAK;MACpC,MAAMC,GAAG,GAAGN,WAAW,GAAG,GAAG,GAAGK,QAAQ;MAExC,IAAIC,GAAG,IAAId,YAAY,EAAE;QACrB,MAAM,IAAIe,KAAK,CAAE,2BAA0BD,GAAI,EAAC,CAAC;MACrD;MACAd,YAAY,CAACc,GAAG,CAAC,GAAGF,MAAM;IAC9B,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEFI,MAAM,CAACC,OAAO,GAAG;EACbC,WAAW,EAAE,MAAAA,CAAOL,QAAQ,EAAEM,WAAW,EAAEC,OAAO,KAAK;IACnD,KAAK,MAAMZ,WAAW,IAAIW,WAAW,CAACE,IAAI,CAACvB,QAAQ,EAAE;MACjD,MAAMgB,GAAG,GAAGN,WAAW,GAAG,GAAG,GAAGK,QAAQ;MACxC,MAAMD,MAAM,GAAGZ,YAAY,CAACc,GAAG,CAAC;MAEhC,IAAIF,MAAM,EAAE;QACR,IAAIU,WAAW,GAAGH,WAAW,CAACE,IAAI,CAACvB,QAAQ,CAACU,WAAW,CAAC;QAExD,IACIY,OAAO,CAACG,OAAO,CAACC,SAAS,IACzBhB,WAAW,IAAIY,OAAO,CAACG,OAAO,CAACC,SAAS,EAC1C;UACE,MAAMC,iBAAiB,GACnBL,OAAO,CAACG,OAAO,CAACC,SAAS,CAAChB,WAAW,CAAC;UAC1C,IAAI,CAACiB,iBAAiB,EAAE;YACpB;UACJ;UAEAH,WAAW,GAAG;YAAE,GAAGA,WAAW;YAAE,GAAGG;UAAkB,CAAC;QAC1D;QAEA,MAAMC,UAAU,GAAG,MAAMd,MAAM,CAC3BU,WAAW,EACXH,WAAW,EACXC,OAAO,CACV;QACD,IAAI,CAACM,UAAU,EAAE,OAAO,KAAK;MACjC;IACJ;IAEA,OAAO,IAAI;EACf;AACJ,CAAC"}