{"version":3,"sources":["../../src/entityFeatures/atLeastOneNotNull.js"],"names":["_","quote","require","ValidationError","Rules","module","exports","RULE_BEFORE_CREATE","feature","entityModel","context","each","item","every","fieldName","isNil","latest","map","f","join","entity","meta","name","fields","RULE_BEFORE_UPDATE","existing"],"mappings":";;;;AAAA,MAAM;AAAEA,EAAAA,CAAF;AAAKC,EAAAA;AAAL,IAAeC,OAAO,CAAC,YAAD,CAA5B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAsBD,OAAO,CAAC,iBAAD,CAAnC;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,eAAD,CAArB;;AAOAG,MAAM,CAACC,OAAP,GAAiB;AACb,GAACF,KAAK,CAACG,kBAAP,GAA4B,CAACC,OAAD,EAAUC,WAAV,EAAuBC,OAAvB,KAAmC;AAC3DV,IAAAA,CAAC,CAACW,IAAF,CAAOH,OAAP,EAAiBI,IAAD,IAAU;AACtB,UACIZ,CAAC,CAACa,KAAF,CAAQD,IAAR,EAAeE,SAAD,IAAed,CAAC,CAACe,KAAF,CAAQL,OAAO,CAACM,MAAR,CAAeF,SAAf,CAAR,CAA7B,CADJ,EAEE;AACE,cAAM,IAAIX,eAAJ,CACD,gCAA+BS,IAAI,CAC/BK,GAD2B,CACtBC,CAAD,IAAOjB,KAAK,CAACiB,CAAD,CADW,EAE3BC,IAF2B,CAEtB,IAFsB,CAEhB,sBAHd,EAIF;AACIC,UAAAA,MAAM,EAAEX,WAAW,CAACY,IAAZ,CAAiBC,IAD7B;AAEIC,UAAAA,MAAM,EAAEf;AAFZ,SAJE,CAAN;AASH;AACJ,KAdD;;AAgBA,WAAO,IAAP;AACH,GAnBY;AAqBb,GAACJ,KAAK,CAACoB,kBAAP,GAA4B,CAAChB,OAAD,EAAUC,WAAV,EAAuBC,OAAvB,KAAmC;AAC3DV,IAAAA,CAAC,CAACW,IAAF,CAAOH,OAAP,EAAiBI,IAAD,IAAU;AACtB,UACIZ,CAAC,CAACa,KAAF,CAAQD,IAAR,EAAeE,SAAD,IACVA,SAAS,IAAIJ,OAAO,CAACM,MAArB,GACMhB,CAAC,CAACe,KAAF,CAAQL,OAAO,CAACM,MAAR,CAAeF,SAAf,CAAR,CADN,GAEMJ,OAAO,CAACe,QAAR,IACAzB,CAAC,CAACe,KAAF,CAAQL,OAAO,CAACe,QAAR,CAAiBX,SAAjB,CAAR,CAJV,CADJ,EAOE;AACE,cAAM,IAAIX,eAAJ,CACD,gCAA+BS,IAAI,CAC/BK,GAD2B,CACtBC,CAAD,IAAOjB,KAAK,CAACiB,CAAD,CADW,EAE3BC,IAF2B,CAEtB,IAFsB,CAEhB,sBAHd,EAIF;AACIC,UAAAA,MAAM,EAAEX,WAAW,CAACY,IAAZ,CAAiBC,IAD7B;AAEIC,UAAAA,MAAM,EAAEf;AAFZ,SAJE,CAAN;AASH;AACJ,KAnBD;;AAqBA,WAAO,IAAP;AACH;AA5CY,CAAjB","sourcesContent":["const { _, quote } = require('@genx/july');\nconst { ValidationError } = require('../utils/Errors');\nconst Rules = require('../enum/Rules');\n\n/**\n * A rule specifies at least one field not null, e.g. email or mobile.\n * @module EntityFeatureRuntime_AtLeastOneNotNull\n */\n\nmodule.exports = {\n    [Rules.RULE_BEFORE_CREATE]: (feature, entityModel, context) => {\n        _.each(feature, (item) => {\n            if (\n                _.every(item, (fieldName) => _.isNil(context.latest[fieldName]))\n            ) {\n                throw new ValidationError(\n                    `At least one of these fields ${item\n                        .map((f) => quote(f))\n                        .join(', ')} should not be null.`,\n                    {\n                        entity: entityModel.meta.name,\n                        fields: feature,\n                    }\n                );\n            }\n        });\n\n        return true;\n    },\n\n    [Rules.RULE_BEFORE_UPDATE]: (feature, entityModel, context) => {\n        _.each(feature, (item) => {\n            if (\n                _.every(item, (fieldName) =>\n                    fieldName in context.latest\n                        ? _.isNil(context.latest[fieldName])\n                        : context.existing &&\n                          _.isNil(context.existing[fieldName])\n                )\n            ) {\n                throw new ValidationError(\n                    `At least one of these fields ${item\n                        .map((f) => quote(f))\n                        .join(', ')} should not be null.`,\n                    {\n                        entity: entityModel.meta.name,\n                        fields: feature,\n                    }\n                );\n            }\n        });\n\n        return true;\n    },\n};\n"],"file":"atLeastOneNotNull.js"}