"use strict";

require("source-map-support/register");

const path = require('path');

const {
  _,
  fs
} = require('rk-utils');

const basePath = path.resolve(__dirname);
const features = fs.readdirSync(basePath);
const featureRules = {};
features.forEach(file => {
  let f = path.join(basePath, file);

  if (fs.statSync(f).isFile() && _.endsWith(file, '.js')) {
    let featureName = path.basename(file, '.js');
    if (featureName === 'index') return;

    let feature = require(f);

    _.forOwn(feature, (action, ruleName) => {
      let key = featureName + '.' + ruleName;

      if (!!(key in featureRules)) {
        throw new Error(key);
      }

      featureRules[key] = action;
    });
  }
});
module.exports = {
  applyRules_: async (ruleName, entityModel, context) => {
    for (let featureName in entityModel.meta.features) {
      let key = featureName + '.' + ruleName;
      let action = featureRules[key];

      if (action) {
        let featureInfo = entityModel.meta.features[featureName];

        if (context.options.$features && context.options.$features.hasOwnProperty(featureName)) {
          let customFeatureInfo = context.options.$features[featureName];

          if (!customFeatureInfo) {
            continue;
          }

          featureInfo = { ...featureInfo,
            ...customFeatureInfo
          };
        }

        let asExpected = await action(featureInfo, entityModel, context);
        if (!asExpected) return false;
      }
    }

    return true;
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ydW50aW1lL2VudGl0eUZlYXR1cmVzL2luZGV4LmpzIl0sIm5hbWVzIjpbInBhdGgiLCJyZXF1aXJlIiwiXyIsImZzIiwiYmFzZVBhdGgiLCJyZXNvbHZlIiwiX19kaXJuYW1lIiwiZmVhdHVyZXMiLCJyZWFkZGlyU3luYyIsImZlYXR1cmVSdWxlcyIsImZvckVhY2giLCJmaWxlIiwiZiIsImpvaW4iLCJzdGF0U3luYyIsImlzRmlsZSIsImVuZHNXaXRoIiwiZmVhdHVyZU5hbWUiLCJiYXNlbmFtZSIsImZlYXR1cmUiLCJmb3JPd24iLCJhY3Rpb24iLCJydWxlTmFtZSIsImtleSIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcHBseVJ1bGVzXyIsImVudGl0eU1vZGVsIiwiY29udGV4dCIsIm1ldGEiLCJmZWF0dXJlSW5mbyIsIm9wdGlvbnMiLCIkZmVhdHVyZXMiLCJoYXNPd25Qcm9wZXJ0eSIsImN1c3RvbUZlYXR1cmVJbmZvIiwiYXNFeHBlY3RlZCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFFQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU07QUFBRUMsRUFBQUEsQ0FBRjtBQUFLQyxFQUFBQTtBQUFMLElBQVlGLE9BQU8sQ0FBQyxVQUFELENBQXpCOztBQUVBLE1BQU1HLFFBQVEsR0FBR0osSUFBSSxDQUFDSyxPQUFMLENBQWFDLFNBQWIsQ0FBakI7QUFDQSxNQUFNQyxRQUFRLEdBQUdKLEVBQUUsQ0FBQ0ssV0FBSCxDQUFlSixRQUFmLENBQWpCO0FBRUEsTUFBTUssWUFBWSxHQUFHLEVBQXJCO0FBRUFGLFFBQVEsQ0FBQ0csT0FBVCxDQUFpQkMsSUFBSSxJQUFJO0FBQ3JCLE1BQUlDLENBQUMsR0FBR1osSUFBSSxDQUFDYSxJQUFMLENBQVVULFFBQVYsRUFBb0JPLElBQXBCLENBQVI7O0FBQ0EsTUFBSVIsRUFBRSxDQUFDVyxRQUFILENBQVlGLENBQVosRUFBZUcsTUFBZixNQUEyQmIsQ0FBQyxDQUFDYyxRQUFGLENBQVdMLElBQVgsRUFBaUIsS0FBakIsQ0FBL0IsRUFBd0Q7QUFDcEQsUUFBSU0sV0FBVyxHQUFHakIsSUFBSSxDQUFDa0IsUUFBTCxDQUFjUCxJQUFkLEVBQW9CLEtBQXBCLENBQWxCO0FBQ0EsUUFBSU0sV0FBVyxLQUFLLE9BQXBCLEVBQTZCOztBQUU3QixRQUFJRSxPQUFPLEdBQUdsQixPQUFPLENBQUNXLENBQUQsQ0FBckI7O0FBRUFWLElBQUFBLENBQUMsQ0FBQ2tCLE1BQUYsQ0FBU0QsT0FBVCxFQUFrQixDQUFDRSxNQUFELEVBQVNDLFFBQVQsS0FBc0I7QUFDcEMsVUFBSUMsR0FBRyxHQUFHTixXQUFXLEdBQUcsR0FBZCxHQUFvQkssUUFBOUI7O0FBRG9DLFdBRzVCLEVBQUVDLEdBQUcsSUFBSWQsWUFBVCxDQUg0QjtBQUFBLHdCQUdKYyxHQUhJO0FBQUE7O0FBSXBDZCxNQUFBQSxZQUFZLENBQUNjLEdBQUQsQ0FBWixHQUFvQkYsTUFBcEI7QUFDSCxLQUxEO0FBTUg7QUFDSixDQWZEO0FBaUJBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsV0FBVyxFQUFFLE9BQU9KLFFBQVAsRUFBaUJLLFdBQWpCLEVBQThCQyxPQUE5QixLQUEwQztBQUNuRCxTQUFLLElBQUlYLFdBQVQsSUFBd0JVLFdBQVcsQ0FBQ0UsSUFBWixDQUFpQnRCLFFBQXpDLEVBQW1EO0FBQy9DLFVBQUlnQixHQUFHLEdBQUdOLFdBQVcsR0FBRyxHQUFkLEdBQW9CSyxRQUE5QjtBQUNBLFVBQUlELE1BQU0sR0FBR1osWUFBWSxDQUFDYyxHQUFELENBQXpCOztBQUVBLFVBQUlGLE1BQUosRUFBWTtBQUNSLFlBQUlTLFdBQVcsR0FBR0gsV0FBVyxDQUFDRSxJQUFaLENBQWlCdEIsUUFBakIsQ0FBMEJVLFdBQTFCLENBQWxCOztBQUVBLFlBQUlXLE9BQU8sQ0FBQ0csT0FBUixDQUFnQkMsU0FBaEIsSUFBNkJKLE9BQU8sQ0FBQ0csT0FBUixDQUFnQkMsU0FBaEIsQ0FBMEJDLGNBQTFCLENBQXlDaEIsV0FBekMsQ0FBakMsRUFBd0Y7QUFDcEYsY0FBSWlCLGlCQUFpQixHQUFHTixPQUFPLENBQUNHLE9BQVIsQ0FBZ0JDLFNBQWhCLENBQTBCZixXQUExQixDQUF4Qjs7QUFDQSxjQUFJLENBQUNpQixpQkFBTCxFQUF3QjtBQUNwQjtBQUNIOztBQUVESixVQUFBQSxXQUFXLEdBQUcsRUFBRSxHQUFHQSxXQUFMO0FBQWtCLGVBQUdJO0FBQXJCLFdBQWQ7QUFDSDs7QUFFRCxZQUFJQyxVQUFVLEdBQUcsTUFBTWQsTUFBTSxDQUFDUyxXQUFELEVBQWNILFdBQWQsRUFBMkJDLE9BQTNCLENBQTdCO0FBQ0EsWUFBSSxDQUFDTyxVQUFMLEVBQWlCLE9BQU8sS0FBUDtBQUNwQjtBQUNKOztBQUVELFdBQU8sSUFBUDtBQUNIO0FBeEJZLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCB7IF8sIGZzIH0gPSByZXF1aXJlKCdyay11dGlscycpO1xuXG5jb25zdCBiYXNlUGF0aCA9IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUpO1xuY29uc3QgZmVhdHVyZXMgPSBmcy5yZWFkZGlyU3luYyhiYXNlUGF0aCk7XG5cbmNvbnN0IGZlYXR1cmVSdWxlcyA9IHt9O1xuXG5mZWF0dXJlcy5mb3JFYWNoKGZpbGUgPT4ge1xuICAgIGxldCBmID0gcGF0aC5qb2luKGJhc2VQYXRoLCBmaWxlKTtcbiAgICBpZiAoZnMuc3RhdFN5bmMoZikuaXNGaWxlKCkgJiYgXy5lbmRzV2l0aChmaWxlLCAnLmpzJykpIHtcbiAgICAgICAgbGV0IGZlYXR1cmVOYW1lID0gcGF0aC5iYXNlbmFtZShmaWxlLCAnLmpzJyk7XG4gICAgICAgIGlmIChmZWF0dXJlTmFtZSA9PT0gJ2luZGV4JykgcmV0dXJuO1xuXG4gICAgICAgIGxldCBmZWF0dXJlID0gcmVxdWlyZShmKTsgICAgICAgXG5cbiAgICAgICAgXy5mb3JPd24oZmVhdHVyZSwgKGFjdGlvbiwgcnVsZU5hbWUpID0+IHtcbiAgICAgICAgICAgIGxldCBrZXkgPSBmZWF0dXJlTmFtZSArICcuJyArIHJ1bGVOYW1lO1xuXG4gICAgICAgICAgICBhc3NlcnQ6ICEoa2V5IGluIGZlYXR1cmVSdWxlcyksIGtleTtcbiAgICAgICAgICAgIGZlYXR1cmVSdWxlc1trZXldID0gYWN0aW9uO1xuICAgICAgICB9KTsgICAgICBcbiAgICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgYXBwbHlSdWxlc186IGFzeW5jIChydWxlTmFtZSwgZW50aXR5TW9kZWwsIGNvbnRleHQpID0+IHtcbiAgICAgICAgZm9yIChsZXQgZmVhdHVyZU5hbWUgaW4gZW50aXR5TW9kZWwubWV0YS5mZWF0dXJlcykge1xuICAgICAgICAgICAgbGV0IGtleSA9IGZlYXR1cmVOYW1lICsgJy4nICsgcnVsZU5hbWU7XG4gICAgICAgICAgICBsZXQgYWN0aW9uID0gZmVhdHVyZVJ1bGVzW2tleV07XG5cbiAgICAgICAgICAgIGlmIChhY3Rpb24pIHtcbiAgICAgICAgICAgICAgICBsZXQgZmVhdHVyZUluZm8gPSBlbnRpdHlNb2RlbC5tZXRhLmZlYXR1cmVzW2ZlYXR1cmVOYW1lXTtcblxuICAgICAgICAgICAgICAgIGlmIChjb250ZXh0Lm9wdGlvbnMuJGZlYXR1cmVzICYmIGNvbnRleHQub3B0aW9ucy4kZmVhdHVyZXMuaGFzT3duUHJvcGVydHkoZmVhdHVyZU5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBjdXN0b21GZWF0dXJlSW5mbyA9IGNvbnRleHQub3B0aW9ucy4kZmVhdHVyZXNbZmVhdHVyZU5hbWVdO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWN1c3RvbUZlYXR1cmVJbmZvKSB7ICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgZmVhdHVyZUluZm8gPSB7IC4uLmZlYXR1cmVJbmZvLCAuLi5jdXN0b21GZWF0dXJlSW5mbyB9O1xuICAgICAgICAgICAgICAgIH0gICBcblxuICAgICAgICAgICAgICAgIGxldCBhc0V4cGVjdGVkID0gYXdhaXQgYWN0aW9uKGZlYXR1cmVJbmZvLCBlbnRpdHlNb2RlbCwgY29udGV4dCk7XG4gICAgICAgICAgICAgICAgaWYgKCFhc0V4cGVjdGVkKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9ICAgICAgICBcbn07Il19