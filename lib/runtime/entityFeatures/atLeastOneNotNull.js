"use strict";

require("source-map-support/register");

const Util = require('rk-utils');

const {
  _
} = Util;

const {
  DataValidationError
} = require('../Errors');

const Rules = require('../../enum/Rules');

module.exports = {
  [Rules.RULE_BEFORE_CREATE]: (feature, entityModel, context) => {
    _.each(feature, item => {
      if (_.every(item, fieldName => _.isNil(context.latest[fieldName]))) {
        throw new DataValidationError(`At least one of these fields ${item.map(f => Util.quote(f)).join(', ')} should not be null.`, {
          entity: entityModel.meta.name,
          fields: feature
        });
      }
    });

    return true;
  },
  [Rules.RULE_BEFORE_UPDATE]: (feature, entityModel, context) => {
    _.each(feature, item => {
      if (_.every(item, fieldName => context.latest.hasOwnProperty(fieldName) ? _.isNil(context.latest[fieldName]) : context.existing && _.isNil(context.existing[fieldName]))) {
        throw new DataValidationError(`At least one of these fields ${item.map(f => Util.quote(f)).join(', ')} should not be null.`, {
          entity: entityModel.meta.name,
          fields: feature
        });
      }
    });

    return true;
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ydW50aW1lL2VudGl0eUZlYXR1cmVzL2F0TGVhc3RPbmVOb3ROdWxsLmpzIl0sIm5hbWVzIjpbIlV0aWwiLCJyZXF1aXJlIiwiXyIsIkRhdGFWYWxpZGF0aW9uRXJyb3IiLCJSdWxlcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJSVUxFX0JFRk9SRV9DUkVBVEUiLCJmZWF0dXJlIiwiZW50aXR5TW9kZWwiLCJjb250ZXh0IiwiZWFjaCIsIml0ZW0iLCJldmVyeSIsImZpZWxkTmFtZSIsImlzTmlsIiwibGF0ZXN0IiwibWFwIiwiZiIsInF1b3RlIiwiam9pbiIsImVudGl0eSIsIm1ldGEiLCJuYW1lIiwiZmllbGRzIiwiUlVMRV9CRUZPUkVfVVBEQVRFIiwiaGFzT3duUHJvcGVydHkiLCJleGlzdGluZyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFFQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXBCOztBQUNBLE1BQU07QUFBRUMsRUFBQUE7QUFBRixJQUFRRixJQUFkOztBQUNBLE1BQU07QUFBRUcsRUFBQUE7QUFBRixJQUEwQkYsT0FBTyxDQUFDLFdBQUQsQ0FBdkM7O0FBQ0EsTUFBTUcsS0FBSyxHQUFHSCxPQUFPLENBQUMsa0JBQUQsQ0FBckI7O0FBT0FJLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiLEdBQUNGLEtBQUssQ0FBQ0csa0JBQVAsR0FBNEIsQ0FBQ0MsT0FBRCxFQUFVQyxXQUFWLEVBQXVCQyxPQUF2QixLQUFtQztBQUMzRFIsSUFBQUEsQ0FBQyxDQUFDUyxJQUFGLENBQU9ILE9BQVAsRUFBZ0JJLElBQUksSUFBSTtBQUNwQixVQUFJVixDQUFDLENBQUNXLEtBQUYsQ0FBUUQsSUFBUixFQUFjRSxTQUFTLElBQUlaLENBQUMsQ0FBQ2EsS0FBRixDQUFRTCxPQUFPLENBQUNNLE1BQVIsQ0FBZUYsU0FBZixDQUFSLENBQTNCLENBQUosRUFBb0U7QUFDaEUsY0FBTSxJQUFJWCxtQkFBSixDQUF5QixnQ0FBZ0NTLElBQUksQ0FBQ0ssR0FBTCxDQUFTQyxDQUFDLElBQUlsQixJQUFJLENBQUNtQixLQUFMLENBQVdELENBQVgsQ0FBZCxFQUE2QkUsSUFBN0IsQ0FBa0MsSUFBbEMsQ0FBeUMsc0JBQWxHLEVBQXlIO0FBQzNIQyxVQUFBQSxNQUFNLEVBQUVaLFdBQVcsQ0FBQ2EsSUFBWixDQUFpQkMsSUFEa0c7QUFFM0hDLFVBQUFBLE1BQU0sRUFBRWhCO0FBRm1ILFNBQXpILENBQU47QUFJSDtBQUNKLEtBUEQ7O0FBU0EsV0FBTyxJQUFQO0FBQ0gsR0FaWTtBQWNiLEdBQUNKLEtBQUssQ0FBQ3FCLGtCQUFQLEdBQTRCLENBQUNqQixPQUFELEVBQVVDLFdBQVYsRUFBdUJDLE9BQXZCLEtBQW1DO0FBQzNEUixJQUFBQSxDQUFDLENBQUNTLElBQUYsQ0FBT0gsT0FBUCxFQUFnQkksSUFBSSxJQUFJO0FBQ3BCLFVBQUlWLENBQUMsQ0FBQ1csS0FBRixDQUFRRCxJQUFSLEVBQWNFLFNBQVMsSUFBSUosT0FBTyxDQUFDTSxNQUFSLENBQWVVLGNBQWYsQ0FBOEJaLFNBQTlCLElBQzNCWixDQUFDLENBQUNhLEtBQUYsQ0FBUUwsT0FBTyxDQUFDTSxNQUFSLENBQWVGLFNBQWYsQ0FBUixDQUQyQixHQUUxQkosT0FBTyxDQUFDaUIsUUFBUixJQUFvQnpCLENBQUMsQ0FBQ2EsS0FBRixDQUFRTCxPQUFPLENBQUNpQixRQUFSLENBQWlCYixTQUFqQixDQUFSLENBRnJCLENBQUosRUFHRTtBQUNFLGNBQU0sSUFBSVgsbUJBQUosQ0FBeUIsZ0NBQWdDUyxJQUFJLENBQUNLLEdBQUwsQ0FBU0MsQ0FBQyxJQUFJbEIsSUFBSSxDQUFDbUIsS0FBTCxDQUFXRCxDQUFYLENBQWQsRUFBNkJFLElBQTdCLENBQWtDLElBQWxDLENBQXlDLHNCQUFsRyxFQUF5SDtBQUMzSEMsVUFBQUEsTUFBTSxFQUFFWixXQUFXLENBQUNhLElBQVosQ0FBaUJDLElBRGtHO0FBRTNIQyxVQUFBQSxNQUFNLEVBQUVoQjtBQUZtSCxTQUF6SCxDQUFOO0FBSUg7QUFDSixLQVZEOztBQVlBLFdBQU8sSUFBUDtBQUNIO0FBNUJZLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IFV0aWwgPSByZXF1aXJlKCdyay11dGlscycpO1xuY29uc3QgeyBfIH0gPSBVdGlsO1xuY29uc3QgeyBEYXRhVmFsaWRhdGlvbkVycm9yIH0gPSByZXF1aXJlKCcuLi9FcnJvcnMnKTtcbmNvbnN0IFJ1bGVzID0gcmVxdWlyZSgnLi4vLi4vZW51bS9SdWxlcycpO1xuXG4vKipcbiAqIEEgcnVsZSBzcGVjaWZpZXMgYXQgbGVhc3Qgb25lIGZpZWxkIG5vdCBudWxsLCBlLmcuIGVtYWlsIG9yIG1vYmlsZS5cbiAqIEBtb2R1bGUgRW50aXR5RmVhdHVyZVJ1bnRpbWVfQXRMZWFzdE9uZU5vdE51bGxcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBbUnVsZXMuUlVMRV9CRUZPUkVfQ1JFQVRFXTogKGZlYXR1cmUsIGVudGl0eU1vZGVsLCBjb250ZXh0KSA9PiB7XG4gICAgICAgIF8uZWFjaChmZWF0dXJlLCBpdGVtID0+IHtcbiAgICAgICAgICAgIGlmIChfLmV2ZXJ5KGl0ZW0sIGZpZWxkTmFtZSA9PiBfLmlzTmlsKGNvbnRleHQubGF0ZXN0W2ZpZWxkTmFtZV0pKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkVycm9yKGBBdCBsZWFzdCBvbmUgb2YgdGhlc2UgZmllbGRzICR7IGl0ZW0ubWFwKGYgPT4gVXRpbC5xdW90ZShmKSkuam9pbignLCAnKSB9IHNob3VsZCBub3QgYmUgbnVsbC5gLCB7XG4gICAgICAgICAgICAgICAgICAgIGVudGl0eTogZW50aXR5TW9kZWwubWV0YS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICBmaWVsZHM6IGZlYXR1cmVcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7ICBcblxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuXG4gICAgW1J1bGVzLlJVTEVfQkVGT1JFX1VQREFURV06IChmZWF0dXJlLCBlbnRpdHlNb2RlbCwgY29udGV4dCkgPT4ge1xuICAgICAgICBfLmVhY2goZmVhdHVyZSwgaXRlbSA9PiB7XG4gICAgICAgICAgICBpZiAoXy5ldmVyeShpdGVtLCBmaWVsZE5hbWUgPT4gY29udGV4dC5sYXRlc3QuaGFzT3duUHJvcGVydHkoZmllbGROYW1lKSA/IFxuICAgICAgICAgICAgICAgIF8uaXNOaWwoY29udGV4dC5sYXRlc3RbZmllbGROYW1lXSkgOiBcbiAgICAgICAgICAgICAgICAoY29udGV4dC5leGlzdGluZyAmJiBfLmlzTmlsKGNvbnRleHQuZXhpc3RpbmdbZmllbGROYW1lXSkpKVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IERhdGFWYWxpZGF0aW9uRXJyb3IoYEF0IGxlYXN0IG9uZSBvZiB0aGVzZSBmaWVsZHMgJHsgaXRlbS5tYXAoZiA9PiBVdGlsLnF1b3RlKGYpKS5qb2luKCcsICcpIH0gc2hvdWxkIG5vdCBiZSBudWxsLmAsIHtcbiAgICAgICAgICAgICAgICAgICAgZW50aXR5OiBlbnRpdHlNb2RlbC5tZXRhLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGZpZWxkczogZmVhdHVyZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTsgIFxuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbn07Il19