"use strict";

require("source-map-support/register");

const _ = require('rk-utils')._;

const {
  isNothing
} = require('../utils/lang');

const {
  ValidationError
} = require('../utils/Errors');

const any = require('./any');

module.exports = {
  name: 'object',
  alias: ['json'],
  sanitize: (value, info, i18n, prefix) => {
    let raw = value;
    let type = typeof value;

    if (type === 'string') {
      value = JSON.parse(value);
    } else if (type === 'boolean' || type === 'number') {} else if (type !== 'object') {
      throw new ValidationError('Invalid object value', {
        value: raw,
        feild: info
      });
    } else {
      value = _.toPlainObject(value);
    }

    if (info.schema) {
      const Validators = require('../Validators');

      return Validators.validateObjectBySchema(value, info.schema, i18n, prefix);
    }

    return value;
  },
  defaultValue: {},
  generate: (info, i18n) => ({}),
  serialize: value => isNothing(value) ? null : JSON.stringify(value),
  qualifiers: any.qualifiers.concat(['schema'])
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90eXBlcy9vYmplY3QuanMiXSwibmFtZXMiOlsiXyIsInJlcXVpcmUiLCJpc05vdGhpbmciLCJWYWxpZGF0aW9uRXJyb3IiLCJhbnkiLCJtb2R1bGUiLCJleHBvcnRzIiwibmFtZSIsImFsaWFzIiwic2FuaXRpemUiLCJ2YWx1ZSIsImluZm8iLCJpMThuIiwicHJlZml4IiwicmF3IiwidHlwZSIsIkpTT04iLCJwYXJzZSIsImZlaWxkIiwidG9QbGFpbk9iamVjdCIsInNjaGVtYSIsIlZhbGlkYXRvcnMiLCJ2YWxpZGF0ZU9iamVjdEJ5U2NoZW1hIiwiZGVmYXVsdFZhbHVlIiwiZ2VuZXJhdGUiLCJzZXJpYWxpemUiLCJzdHJpbmdpZnkiLCJxdWFsaWZpZXJzIiwiY29uY2F0Il0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBLE1BQU1BLENBQUMsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBUCxDQUFvQkQsQ0FBOUI7O0FBQ0EsTUFBTTtBQUFFRSxFQUFBQTtBQUFGLElBQWdCRCxPQUFPLENBQUMsZUFBRCxDQUE3Qjs7QUFDQSxNQUFNO0FBQUVFLEVBQUFBO0FBQUYsSUFBc0JGLE9BQU8sQ0FBQyxpQkFBRCxDQUFuQzs7QUFDQSxNQUFNRyxHQUFHLEdBQUdILE9BQU8sQ0FBQyxPQUFELENBQW5COztBQUVBSSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsSUFBSSxFQUFFLFFBRE87QUFHYkMsRUFBQUEsS0FBSyxFQUFFLENBQUUsTUFBRixDQUhNO0FBS2JDLEVBQUFBLFFBQVEsRUFBRSxDQUFDQyxLQUFELEVBQVFDLElBQVIsRUFBY0MsSUFBZCxFQUFvQkMsTUFBcEIsS0FBK0I7QUFDckMsUUFBSUMsR0FBRyxHQUFHSixLQUFWO0FBQ0EsUUFBSUssSUFBSSxHQUFHLE9BQU9MLEtBQWxCOztBQUVBLFFBQUlLLElBQUksS0FBSyxRQUFiLEVBQXVCO0FBQ25CTCxNQUFBQSxLQUFLLEdBQUdNLElBQUksQ0FBQ0MsS0FBTCxDQUFXUCxLQUFYLENBQVI7QUFDSCxLQUZELE1BRU8sSUFBSUssSUFBSSxLQUFLLFNBQVQsSUFBc0JBLElBQUksS0FBSyxRQUFuQyxFQUE2QyxDQUVuRCxDQUZNLE1BRUEsSUFBSUEsSUFBSSxLQUFLLFFBQWIsRUFBdUI7QUFDMUIsWUFBTSxJQUFJWixlQUFKLENBQW9CLHNCQUFwQixFQUE0QztBQUFFTyxRQUFBQSxLQUFLLEVBQUVJLEdBQVQ7QUFBY0ksUUFBQUEsS0FBSyxFQUFFUDtBQUFyQixPQUE1QyxDQUFOO0FBQ0gsS0FGTSxNQUVBO0FBQ0hELE1BQUFBLEtBQUssR0FBR1YsQ0FBQyxDQUFDbUIsYUFBRixDQUFnQlQsS0FBaEIsQ0FBUjtBQUNIOztBQUVELFFBQUlDLElBQUksQ0FBQ1MsTUFBVCxFQUFpQjtBQUNiLFlBQU1DLFVBQVUsR0FBR3BCLE9BQU8sQ0FBQyxlQUFELENBQTFCOztBQUNBLGFBQU9vQixVQUFVLENBQUNDLHNCQUFYLENBQWtDWixLQUFsQyxFQUF5Q0MsSUFBSSxDQUFDUyxNQUE5QyxFQUFzRFIsSUFBdEQsRUFBNERDLE1BQTVELENBQVA7QUFDSDs7QUFFRCxXQUFPSCxLQUFQO0FBQ0gsR0F6Qlk7QUEyQmJhLEVBQUFBLFlBQVksRUFBRSxFQTNCRDtBQTZCYkMsRUFBQUEsUUFBUSxFQUFFLENBQUNiLElBQUQsRUFBT0MsSUFBUCxNQUFpQixFQUFqQixDQTdCRztBQStCYmEsRUFBQUEsU0FBUyxFQUFHZixLQUFELElBQVdSLFNBQVMsQ0FBQ1EsS0FBRCxDQUFULEdBQW1CLElBQW5CLEdBQTBCTSxJQUFJLENBQUNVLFNBQUwsQ0FBZWhCLEtBQWYsQ0EvQm5DO0FBaUNiaUIsRUFBQUEsVUFBVSxFQUFFdkIsR0FBRyxDQUFDdUIsVUFBSixDQUFlQyxNQUFmLENBQXNCLENBQzlCLFFBRDhCLENBQXRCO0FBakNDLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IF8gPSByZXF1aXJlKCdyay11dGlscycpLl87XG5jb25zdCB7IGlzTm90aGluZyB9ID0gcmVxdWlyZSgnLi4vdXRpbHMvbGFuZycpO1xuY29uc3QgeyBWYWxpZGF0aW9uRXJyb3IgfSA9IHJlcXVpcmUoJy4uL3V0aWxzL0Vycm9ycycpO1xuY29uc3QgYW55ID0gcmVxdWlyZSgnLi9hbnknKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgbmFtZTogJ29iamVjdCcsXG5cbiAgICBhbGlhczogWyAnanNvbicgXSxcblxuICAgIHNhbml0aXplOiAodmFsdWUsIGluZm8sIGkxOG4sIHByZWZpeCkgPT4ge1xuICAgICAgICBsZXQgcmF3ID0gdmFsdWU7XG4gICAgICAgIGxldCB0eXBlID0gdHlwZW9mIHZhbHVlO1xuXG4gICAgICAgIGlmICh0eXBlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdmFsdWUgPSBKU09OLnBhcnNlKHZhbHVlKTtcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAnYm9vbGVhbicgfHwgdHlwZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIC8vc2tpcFxuICAgICAgICB9IGVsc2UgaWYgKHR5cGUgIT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKCdJbnZhbGlkIG9iamVjdCB2YWx1ZScsIHsgdmFsdWU6IHJhdywgZmVpbGQ6IGluZm8gfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YWx1ZSA9IF8udG9QbGFpbk9iamVjdCh2YWx1ZSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaW5mby5zY2hlbWEpIHtcbiAgICAgICAgICAgIGNvbnN0IFZhbGlkYXRvcnMgPSByZXF1aXJlKCcuLi9WYWxpZGF0b3JzJyk7XG4gICAgICAgICAgICByZXR1cm4gVmFsaWRhdG9ycy52YWxpZGF0ZU9iamVjdEJ5U2NoZW1hKHZhbHVlLCBpbmZvLnNjaGVtYSwgaTE4biwgcHJlZml4KTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG5cbiAgICBkZWZhdWx0VmFsdWU6IHt9LFxuXG4gICAgZ2VuZXJhdGU6IChpbmZvLCBpMThuKSA9PiAoe30pLFxuXG4gICAgc2VyaWFsaXplOiAodmFsdWUpID0+IGlzTm90aGluZyh2YWx1ZSkgPyBudWxsIDogSlNPTi5zdHJpbmdpZnkodmFsdWUpLFxuXG4gICAgcXVhbGlmaWVyczogYW55LnF1YWxpZmllcnMuY29uY2F0KFtcbiAgICAgICAgJ3NjaGVtYSdcbiAgICBdKVxufTsiXX0=