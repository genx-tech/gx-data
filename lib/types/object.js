"use strict";

require("source-map-support/register");

const _ = require('rk-utils')._;

const {
  isNothing
} = require('../utils/lang');

const {
  ValidationError
} = require('../utils/Errors');

const any = require('./any');

const jsonStarter = new Set('"', '[', '{');
module.exports = {
  name: 'object',
  alias: ['json'],
  sanitize: (value, info, i18n, prefix) => {
    if (value == null) return null;
    let raw = value;
    let type = typeof value;

    if (type === 'string') {
      if (value.length === 0) {
        value = '';
      } else if (jsonStarter.has(value[0])) {
        value = JSON.parse(value);
      }
    } else if (type === 'boolean' || type === 'number') {} else if (type !== 'object') {
      throw new ValidationError('Invalid object value', {
        value: raw,
        feild: info
      });
    } else {
      value = _.toPlainObject(value);
    }

    if (info.schema) {
      const Validators = require('../Validators');

      return Validators.validateObjectBySchema(value, info.schema, i18n, prefix);
    }

    return value;
  },
  defaultValue: {},
  generate: (info, i18n) => ({}),
  serialize: value => isNothing(value) ? null : JSON.stringify(value),
  qualifiers: any.qualifiers.concat(['schema'])
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90eXBlcy9vYmplY3QuanMiXSwibmFtZXMiOlsiXyIsInJlcXVpcmUiLCJpc05vdGhpbmciLCJWYWxpZGF0aW9uRXJyb3IiLCJhbnkiLCJqc29uU3RhcnRlciIsIlNldCIsIm1vZHVsZSIsImV4cG9ydHMiLCJuYW1lIiwiYWxpYXMiLCJzYW5pdGl6ZSIsInZhbHVlIiwiaW5mbyIsImkxOG4iLCJwcmVmaXgiLCJyYXciLCJ0eXBlIiwibGVuZ3RoIiwiaGFzIiwiSlNPTiIsInBhcnNlIiwiZmVpbGQiLCJ0b1BsYWluT2JqZWN0Iiwic2NoZW1hIiwiVmFsaWRhdG9ycyIsInZhbGlkYXRlT2JqZWN0QnlTY2hlbWEiLCJkZWZhdWx0VmFsdWUiLCJnZW5lcmF0ZSIsInNlcmlhbGl6ZSIsInN0cmluZ2lmeSIsInF1YWxpZmllcnMiLCJjb25jYXQiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUEsTUFBTUEsQ0FBQyxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUFQLENBQW9CRCxDQUE5Qjs7QUFDQSxNQUFNO0FBQUVFLEVBQUFBO0FBQUYsSUFBZ0JELE9BQU8sQ0FBQyxlQUFELENBQTdCOztBQUNBLE1BQU07QUFBRUUsRUFBQUE7QUFBRixJQUFzQkYsT0FBTyxDQUFDLGlCQUFELENBQW5DOztBQUNBLE1BQU1HLEdBQUcsR0FBR0gsT0FBTyxDQUFDLE9BQUQsQ0FBbkI7O0FBRUEsTUFBTUksV0FBVyxHQUFHLElBQUlDLEdBQUosQ0FBUSxHQUFSLEVBQWEsR0FBYixFQUFrQixHQUFsQixDQUFwQjtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsSUFBSSxFQUFFLFFBRE87QUFHYkMsRUFBQUEsS0FBSyxFQUFFLENBQUUsTUFBRixDQUhNO0FBS2JDLEVBQUFBLFFBQVEsRUFBRSxDQUFDQyxLQUFELEVBQVFDLElBQVIsRUFBY0MsSUFBZCxFQUFvQkMsTUFBcEIsS0FBK0I7QUFDckMsUUFBSUgsS0FBSyxJQUFJLElBQWIsRUFBbUIsT0FBTyxJQUFQO0FBRW5CLFFBQUlJLEdBQUcsR0FBR0osS0FBVjtBQUNBLFFBQUlLLElBQUksR0FBRyxPQUFPTCxLQUFsQjs7QUFFQSxRQUFJSyxJQUFJLEtBQUssUUFBYixFQUF1QjtBQUNuQixVQUFJTCxLQUFLLENBQUNNLE1BQU4sS0FBaUIsQ0FBckIsRUFBd0I7QUFDcEJOLFFBQUFBLEtBQUssR0FBRyxFQUFSO0FBQ0gsT0FGRCxNQUVPLElBQUlQLFdBQVcsQ0FBQ2MsR0FBWixDQUFnQlAsS0FBSyxDQUFDLENBQUQsQ0FBckIsQ0FBSixFQUErQjtBQUNsQ0EsUUFBQUEsS0FBSyxHQUFHUSxJQUFJLENBQUNDLEtBQUwsQ0FBV1QsS0FBWCxDQUFSO0FBQ0g7QUFDSixLQU5ELE1BTU8sSUFBSUssSUFBSSxLQUFLLFNBQVQsSUFBc0JBLElBQUksS0FBSyxRQUFuQyxFQUE2QyxDQUVuRCxDQUZNLE1BRUEsSUFBSUEsSUFBSSxLQUFLLFFBQWIsRUFBdUI7QUFDMUIsWUFBTSxJQUFJZCxlQUFKLENBQW9CLHNCQUFwQixFQUE0QztBQUFFUyxRQUFBQSxLQUFLLEVBQUVJLEdBQVQ7QUFBY00sUUFBQUEsS0FBSyxFQUFFVDtBQUFyQixPQUE1QyxDQUFOO0FBQ0gsS0FGTSxNQUVBO0FBQ0hELE1BQUFBLEtBQUssR0FBR1osQ0FBQyxDQUFDdUIsYUFBRixDQUFnQlgsS0FBaEIsQ0FBUjtBQUNIOztBQUVELFFBQUlDLElBQUksQ0FBQ1csTUFBVCxFQUFpQjtBQUNiLFlBQU1DLFVBQVUsR0FBR3hCLE9BQU8sQ0FBQyxlQUFELENBQTFCOztBQUNBLGFBQU93QixVQUFVLENBQUNDLHNCQUFYLENBQWtDZCxLQUFsQyxFQUF5Q0MsSUFBSSxDQUFDVyxNQUE5QyxFQUFzRFYsSUFBdEQsRUFBNERDLE1BQTVELENBQVA7QUFDSDs7QUFFRCxXQUFPSCxLQUFQO0FBQ0gsR0EvQlk7QUFpQ2JlLEVBQUFBLFlBQVksRUFBRSxFQWpDRDtBQW1DYkMsRUFBQUEsUUFBUSxFQUFFLENBQUNmLElBQUQsRUFBT0MsSUFBUCxNQUFpQixFQUFqQixDQW5DRztBQXFDYmUsRUFBQUEsU0FBUyxFQUFHakIsS0FBRCxJQUFXVixTQUFTLENBQUNVLEtBQUQsQ0FBVCxHQUFtQixJQUFuQixHQUEwQlEsSUFBSSxDQUFDVSxTQUFMLENBQWVsQixLQUFmLENBckNuQztBQXVDYm1CLEVBQUFBLFVBQVUsRUFBRTNCLEdBQUcsQ0FBQzJCLFVBQUosQ0FBZUMsTUFBZixDQUFzQixDQUM5QixRQUQ4QixDQUF0QjtBQXZDQyxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCBfID0gcmVxdWlyZSgncmstdXRpbHMnKS5fO1xuY29uc3QgeyBpc05vdGhpbmcgfSA9IHJlcXVpcmUoJy4uL3V0aWxzL2xhbmcnKTtcbmNvbnN0IHsgVmFsaWRhdGlvbkVycm9yIH0gPSByZXF1aXJlKCcuLi91dGlscy9FcnJvcnMnKTtcbmNvbnN0IGFueSA9IHJlcXVpcmUoJy4vYW55Jyk7XG5cbmNvbnN0IGpzb25TdGFydGVyID0gbmV3IFNldCgnXCInLCAnWycsICd7Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIG5hbWU6ICdvYmplY3QnLFxuXG4gICAgYWxpYXM6IFsgJ2pzb24nIF0sXG5cbiAgICBzYW5pdGl6ZTogKHZhbHVlLCBpbmZvLCBpMThuLCBwcmVmaXgpID0+IHtcbiAgICAgICAgaWYgKHZhbHVlID09IG51bGwpIHJldHVybiBudWxsO1xuXG4gICAgICAgIGxldCByYXcgPSB2YWx1ZTtcbiAgICAgICAgbGV0IHR5cGUgPSB0eXBlb2YgdmFsdWU7XG5cbiAgICAgICAgaWYgKHR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSAnJztcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoanNvblN0YXJ0ZXIuaGFzKHZhbHVlWzBdKSkge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gSlNPTi5wYXJzZSh2YWx1ZSk7XG4gICAgICAgICAgICB9IFxuICAgICAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICdib29sZWFuJyB8fCB0eXBlID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgLy9za2lwXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoJ0ludmFsaWQgb2JqZWN0IHZhbHVlJywgeyB2YWx1ZTogcmF3LCBmZWlsZDogaW5mbyB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhbHVlID0gXy50b1BsYWluT2JqZWN0KHZhbHVlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpbmZvLnNjaGVtYSkge1xuICAgICAgICAgICAgY29uc3QgVmFsaWRhdG9ycyA9IHJlcXVpcmUoJy4uL1ZhbGlkYXRvcnMnKTtcbiAgICAgICAgICAgIHJldHVybiBWYWxpZGF0b3JzLnZhbGlkYXRlT2JqZWN0QnlTY2hlbWEodmFsdWUsIGluZm8uc2NoZW1hLCBpMThuLCBwcmVmaXgpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSxcblxuICAgIGRlZmF1bHRWYWx1ZToge30sXG5cbiAgICBnZW5lcmF0ZTogKGluZm8sIGkxOG4pID0+ICh7fSksXG5cbiAgICBzZXJpYWxpemU6ICh2YWx1ZSkgPT4gaXNOb3RoaW5nKHZhbHVlKSA/IG51bGwgOiBKU09OLnN0cmluZ2lmeSh2YWx1ZSksXG5cbiAgICBxdWFsaWZpZXJzOiBhbnkucXVhbGlmaWVycy5jb25jYXQoW1xuICAgICAgICAnc2NoZW1hJ1xuICAgIF0pXG59OyJdfQ==