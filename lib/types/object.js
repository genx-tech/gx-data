"use strict";

require("source-map-support/register");

const _ = require('rk-utils')._;

const {
  isNothing
} = require('../utils/lang');

const any = require('./any');

module.exports = {
  name: 'object',
  alias: ['json'],
  sanitize: (value, info, i18n) => {
    if (_.isPlainObject(value)) return value;
    if (Array.isArray(value)) return value;
    if (_.isObjectLike(value)) return _.toPlainObject(value);

    if (typeof value === 'string') {
      let trimmed = value.trim();

      if (trimmed.startsWith('{') && trimmed.endsWith('}')) {
        return JSON.parse(trimmed);
      }
    }

    return value;
  },
  defaultValue: {},
  generate: (info, i18n) => null,
  serialize: value => isNothing(value) ? null : JSON.stringify(value),
  qualifiers: any.qualifiers.concat([])
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90eXBlcy9vYmplY3QuanMiXSwibmFtZXMiOlsiXyIsInJlcXVpcmUiLCJpc05vdGhpbmciLCJhbnkiLCJtb2R1bGUiLCJleHBvcnRzIiwibmFtZSIsImFsaWFzIiwic2FuaXRpemUiLCJ2YWx1ZSIsImluZm8iLCJpMThuIiwiaXNQbGFpbk9iamVjdCIsIkFycmF5IiwiaXNBcnJheSIsImlzT2JqZWN0TGlrZSIsInRvUGxhaW5PYmplY3QiLCJ0cmltbWVkIiwidHJpbSIsInN0YXJ0c1dpdGgiLCJlbmRzV2l0aCIsIkpTT04iLCJwYXJzZSIsImRlZmF1bHRWYWx1ZSIsImdlbmVyYXRlIiwic2VyaWFsaXplIiwic3RyaW5naWZ5IiwicXVhbGlmaWVycyIsImNvbmNhdCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFFQSxNQUFNQSxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQVAsQ0FBb0JELENBQTlCOztBQUNBLE1BQU07QUFBRUUsRUFBQUE7QUFBRixJQUFnQkQsT0FBTyxDQUFDLGVBQUQsQ0FBN0I7O0FBQ0EsTUFBTUUsR0FBRyxHQUFHRixPQUFPLENBQUMsT0FBRCxDQUFuQjs7QUFFQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLElBQUksRUFBRSxRQURPO0FBR2JDLEVBQUFBLEtBQUssRUFBRSxDQUFFLE1BQUYsQ0FITTtBQUtiQyxFQUFBQSxRQUFRLEVBQUUsQ0FBQ0MsS0FBRCxFQUFRQyxJQUFSLEVBQWNDLElBQWQsS0FBdUI7QUFDN0IsUUFBSVgsQ0FBQyxDQUFDWSxhQUFGLENBQWdCSCxLQUFoQixDQUFKLEVBQTRCLE9BQU9BLEtBQVA7QUFDNUIsUUFBSUksS0FBSyxDQUFDQyxPQUFOLENBQWNMLEtBQWQsQ0FBSixFQUEwQixPQUFPQSxLQUFQO0FBQzFCLFFBQUlULENBQUMsQ0FBQ2UsWUFBRixDQUFlTixLQUFmLENBQUosRUFBMkIsT0FBT1QsQ0FBQyxDQUFDZ0IsYUFBRixDQUFnQlAsS0FBaEIsQ0FBUDs7QUFFM0IsUUFBSSxPQUFPQSxLQUFQLEtBQWlCLFFBQXJCLEVBQStCO0FBQzNCLFVBQUlRLE9BQU8sR0FBR1IsS0FBSyxDQUFDUyxJQUFOLEVBQWQ7O0FBQ0EsVUFBSUQsT0FBTyxDQUFDRSxVQUFSLENBQW1CLEdBQW5CLEtBQTJCRixPQUFPLENBQUNHLFFBQVIsQ0FBaUIsR0FBakIsQ0FBL0IsRUFBc0Q7QUFDbEQsZUFBT0MsSUFBSSxDQUFDQyxLQUFMLENBQVdMLE9BQVgsQ0FBUDtBQUNIO0FBQ0o7O0FBRUQsV0FBT1IsS0FBUDtBQUNILEdBbEJZO0FBb0JiYyxFQUFBQSxZQUFZLEVBQUUsRUFwQkQ7QUFzQmJDLEVBQUFBLFFBQVEsRUFBRSxDQUFDZCxJQUFELEVBQU9DLElBQVAsS0FBZ0IsSUF0QmI7QUF3QmJjLEVBQUFBLFNBQVMsRUFBR2hCLEtBQUQsSUFBV1AsU0FBUyxDQUFDTyxLQUFELENBQVQsR0FBbUIsSUFBbkIsR0FBMEJZLElBQUksQ0FBQ0ssU0FBTCxDQUFlakIsS0FBZixDQXhCbkM7QUEwQmJrQixFQUFBQSxVQUFVLEVBQUV4QixHQUFHLENBQUN3QixVQUFKLENBQWVDLE1BQWYsQ0FBc0IsRUFBdEI7QUExQkMsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuY29uc3QgXyA9IHJlcXVpcmUoJ3JrLXV0aWxzJykuXztcbmNvbnN0IHsgaXNOb3RoaW5nIH0gPSByZXF1aXJlKCcuLi91dGlscy9sYW5nJyk7XG5jb25zdCBhbnkgPSByZXF1aXJlKCcuL2FueScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBuYW1lOiAnb2JqZWN0JyxcblxuICAgIGFsaWFzOiBbICdqc29uJyBdLFxuXG4gICAgc2FuaXRpemU6ICh2YWx1ZSwgaW5mbywgaTE4bikgPT4ge1xuICAgICAgICBpZiAoXy5pc1BsYWluT2JqZWN0KHZhbHVlKSkgcmV0dXJuIHZhbHVlO1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHJldHVybiB2YWx1ZTtcbiAgICAgICAgaWYgKF8uaXNPYmplY3RMaWtlKHZhbHVlKSkgcmV0dXJuIF8udG9QbGFpbk9iamVjdCh2YWx1ZSk7XG5cbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGxldCB0cmltbWVkID0gdmFsdWUudHJpbSgpO1xuICAgICAgICAgICAgaWYgKHRyaW1tZWQuc3RhcnRzV2l0aCgneycpICYmIHRyaW1tZWQuZW5kc1dpdGgoJ30nKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKHRyaW1tZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG5cbiAgICBkZWZhdWx0VmFsdWU6IHt9LFxuXG4gICAgZ2VuZXJhdGU6IChpbmZvLCBpMThuKSA9PiBudWxsLFxuXG4gICAgc2VyaWFsaXplOiAodmFsdWUpID0+IGlzTm90aGluZyh2YWx1ZSkgPyBudWxsIDogSlNPTi5zdHJpbmdpZnkodmFsdWUpLFxuXG4gICAgcXVhbGlmaWVyczogYW55LnF1YWxpZmllcnMuY29uY2F0KFtcbiAgICBdKVxufTsiXX0=