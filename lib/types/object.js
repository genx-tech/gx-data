"use strict";

require("source-map-support/register");

const _ = require('rk-utils')._;

const {
  isNothing
} = require('../utils/lang');

const {
  ValidationError
} = require('../utils/Errors');

const any = require('./any');

module.exports = {
  name: 'object',
  alias: ['json'],
  sanitize: (value, info, i18n, prefix) => {
    let raw = value;
    let type = typeof value;

    if (type === 'string') {
      value = JSON.parse(value);
    }

    if (type !== 'object') {
      throw new ValidationError('Invalid object value', {
        value: raw,
        feild: info
      });
    }

    if (info.schema) {
      const Validators = require('../Validators');

      return Validators.validateObjectBySchema(value, info.schema, i18n, prefix);
    }

    return _.toPlainObject(value);
  },
  defaultValue: {},
  generate: (info, i18n) => ({}),
  serialize: value => isNothing(value) ? null : JSON.stringify(value),
  qualifiers: any.qualifiers.concat(['schema'])
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90eXBlcy9vYmplY3QuanMiXSwibmFtZXMiOlsiXyIsInJlcXVpcmUiLCJpc05vdGhpbmciLCJWYWxpZGF0aW9uRXJyb3IiLCJhbnkiLCJtb2R1bGUiLCJleHBvcnRzIiwibmFtZSIsImFsaWFzIiwic2FuaXRpemUiLCJ2YWx1ZSIsImluZm8iLCJpMThuIiwicHJlZml4IiwicmF3IiwidHlwZSIsIkpTT04iLCJwYXJzZSIsImZlaWxkIiwic2NoZW1hIiwiVmFsaWRhdG9ycyIsInZhbGlkYXRlT2JqZWN0QnlTY2hlbWEiLCJ0b1BsYWluT2JqZWN0IiwiZGVmYXVsdFZhbHVlIiwiZ2VuZXJhdGUiLCJzZXJpYWxpemUiLCJzdHJpbmdpZnkiLCJxdWFsaWZpZXJzIiwiY29uY2F0Il0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBLE1BQU1BLENBQUMsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBUCxDQUFvQkQsQ0FBOUI7O0FBQ0EsTUFBTTtBQUFFRSxFQUFBQTtBQUFGLElBQWdCRCxPQUFPLENBQUMsZUFBRCxDQUE3Qjs7QUFDQSxNQUFNO0FBQUVFLEVBQUFBO0FBQUYsSUFBc0JGLE9BQU8sQ0FBQyxpQkFBRCxDQUFuQzs7QUFDQSxNQUFNRyxHQUFHLEdBQUdILE9BQU8sQ0FBQyxPQUFELENBQW5COztBQUVBSSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsSUFBSSxFQUFFLFFBRE87QUFHYkMsRUFBQUEsS0FBSyxFQUFFLENBQUUsTUFBRixDQUhNO0FBS2JDLEVBQUFBLFFBQVEsRUFBRSxDQUFDQyxLQUFELEVBQVFDLElBQVIsRUFBY0MsSUFBZCxFQUFvQkMsTUFBcEIsS0FBK0I7QUFDckMsUUFBSUMsR0FBRyxHQUFHSixLQUFWO0FBQ0EsUUFBSUssSUFBSSxHQUFHLE9BQU9MLEtBQWxCOztBQUVBLFFBQUlLLElBQUksS0FBSyxRQUFiLEVBQXVCO0FBQ25CTCxNQUFBQSxLQUFLLEdBQUdNLElBQUksQ0FBQ0MsS0FBTCxDQUFXUCxLQUFYLENBQVI7QUFDSDs7QUFFRCxRQUFJSyxJQUFJLEtBQUssUUFBYixFQUF1QjtBQUNuQixZQUFNLElBQUlaLGVBQUosQ0FBb0Isc0JBQXBCLEVBQTRDO0FBQUVPLFFBQUFBLEtBQUssRUFBRUksR0FBVDtBQUFjSSxRQUFBQSxLQUFLLEVBQUVQO0FBQXJCLE9BQTVDLENBQU47QUFDSDs7QUFFRCxRQUFJQSxJQUFJLENBQUNRLE1BQVQsRUFBaUI7QUFDYixZQUFNQyxVQUFVLEdBQUduQixPQUFPLENBQUMsZUFBRCxDQUExQjs7QUFDQSxhQUFPbUIsVUFBVSxDQUFDQyxzQkFBWCxDQUFrQ1gsS0FBbEMsRUFBeUNDLElBQUksQ0FBQ1EsTUFBOUMsRUFBc0RQLElBQXRELEVBQTREQyxNQUE1RCxDQUFQO0FBQ0g7O0FBRUQsV0FBT2IsQ0FBQyxDQUFDc0IsYUFBRixDQUFnQlosS0FBaEIsQ0FBUDtBQUNILEdBdkJZO0FBeUJiYSxFQUFBQSxZQUFZLEVBQUUsRUF6QkQ7QUEyQmJDLEVBQUFBLFFBQVEsRUFBRSxDQUFDYixJQUFELEVBQU9DLElBQVAsTUFBaUIsRUFBakIsQ0EzQkc7QUE2QmJhLEVBQUFBLFNBQVMsRUFBR2YsS0FBRCxJQUFXUixTQUFTLENBQUNRLEtBQUQsQ0FBVCxHQUFtQixJQUFuQixHQUEwQk0sSUFBSSxDQUFDVSxTQUFMLENBQWVoQixLQUFmLENBN0JuQztBQStCYmlCLEVBQUFBLFVBQVUsRUFBRXZCLEdBQUcsQ0FBQ3VCLFVBQUosQ0FBZUMsTUFBZixDQUFzQixDQUM5QixRQUQ4QixDQUF0QjtBQS9CQyxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCBfID0gcmVxdWlyZSgncmstdXRpbHMnKS5fO1xuY29uc3QgeyBpc05vdGhpbmcgfSA9IHJlcXVpcmUoJy4uL3V0aWxzL2xhbmcnKTtcbmNvbnN0IHsgVmFsaWRhdGlvbkVycm9yIH0gPSByZXF1aXJlKCcuLi91dGlscy9FcnJvcnMnKTtcbmNvbnN0IGFueSA9IHJlcXVpcmUoJy4vYW55Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIG5hbWU6ICdvYmplY3QnLFxuXG4gICAgYWxpYXM6IFsgJ2pzb24nIF0sXG5cbiAgICBzYW5pdGl6ZTogKHZhbHVlLCBpbmZvLCBpMThuLCBwcmVmaXgpID0+IHtcbiAgICAgICAgbGV0IHJhdyA9IHZhbHVlO1xuICAgICAgICBsZXQgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcblxuICAgICAgICBpZiAodHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHZhbHVlID0gSlNPTi5wYXJzZSh2YWx1ZSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHlwZSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoJ0ludmFsaWQgb2JqZWN0IHZhbHVlJywgeyB2YWx1ZTogcmF3LCBmZWlsZDogaW5mbyB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpbmZvLnNjaGVtYSkge1xuICAgICAgICAgICAgY29uc3QgVmFsaWRhdG9ycyA9IHJlcXVpcmUoJy4uL1ZhbGlkYXRvcnMnKTtcbiAgICAgICAgICAgIHJldHVybiBWYWxpZGF0b3JzLnZhbGlkYXRlT2JqZWN0QnlTY2hlbWEodmFsdWUsIGluZm8uc2NoZW1hLCBpMThuLCBwcmVmaXgpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gXy50b1BsYWluT2JqZWN0KHZhbHVlKTtcbiAgICB9LFxuXG4gICAgZGVmYXVsdFZhbHVlOiB7fSxcblxuICAgIGdlbmVyYXRlOiAoaW5mbywgaTE4bikgPT4gKHt9KSxcblxuICAgIHNlcmlhbGl6ZTogKHZhbHVlKSA9PiBpc05vdGhpbmcodmFsdWUpID8gbnVsbCA6IEpTT04uc3RyaW5naWZ5KHZhbHVlKSxcblxuICAgIHF1YWxpZmllcnM6IGFueS5xdWFsaWZpZXJzLmNvbmNhdChbXG4gICAgICAgICdzY2hlbWEnXG4gICAgXSlcbn07Il19