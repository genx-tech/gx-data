"use strict";

require("source-map-support/register");

const {
  _,
  quote
} = require('rk-utils');

const {
  isNothing
} = require('../utils/lang');

const any = require('./any');

const {
  ValidationError
} = require('../utils/Errors');

module.exports = {
  name: 'array',
  alias: ['list'],
  sanitize: (value, info, i18n) => {
    if (Array.isArray(value)) return value;

    if (typeof value === 'string') {
      let trimmed = value.trim();

      if (trimmed.startsWith('[') && trimmed.endsWith(']')) {
        return JSON.parse(trimmed);
      }

      throw new ValidationError(`Invalid array format: ${value}`);
    }

    return [value];
  },
  defaultValue: [],
  generate: (info, i18n) => null,
  serialize: value => isNothing(value) ? null : JSON.stringify(value),
  qualifiers: any.qualifiers.concat(['csv', 'of']),
  toCsv: (data, separator = ',') => data.map(elem => {
    elem = elem.toString();
    return elem.indexOf(separator) != -1 ? quote(elem, '"') : elem;
  }).join(separator)
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90eXBlcy9hcnJheS5qcyJdLCJuYW1lcyI6WyJfIiwicXVvdGUiLCJyZXF1aXJlIiwiaXNOb3RoaW5nIiwiYW55IiwiVmFsaWRhdGlvbkVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyIsIm5hbWUiLCJhbGlhcyIsInNhbml0aXplIiwidmFsdWUiLCJpbmZvIiwiaTE4biIsIkFycmF5IiwiaXNBcnJheSIsInRyaW1tZWQiLCJ0cmltIiwic3RhcnRzV2l0aCIsImVuZHNXaXRoIiwiSlNPTiIsInBhcnNlIiwiZGVmYXVsdFZhbHVlIiwiZ2VuZXJhdGUiLCJzZXJpYWxpemUiLCJzdHJpbmdpZnkiLCJxdWFsaWZpZXJzIiwiY29uY2F0IiwidG9Dc3YiLCJkYXRhIiwic2VwYXJhdG9yIiwibWFwIiwiZWxlbSIsInRvU3RyaW5nIiwiaW5kZXhPZiIsImpvaW4iXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUEsTUFBTTtBQUFFQSxFQUFBQSxDQUFGO0FBQUtDLEVBQUFBO0FBQUwsSUFBZUMsT0FBTyxDQUFDLFVBQUQsQ0FBNUI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQWdCRCxPQUFPLENBQUMsZUFBRCxDQUE3Qjs7QUFDQSxNQUFNRSxHQUFHLEdBQUdGLE9BQU8sQ0FBQyxPQUFELENBQW5COztBQUNBLE1BQU07QUFBRUcsRUFBQUE7QUFBRixJQUFzQkgsT0FBTyxDQUFDLGlCQUFELENBQW5DOztBQUVBSSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsSUFBSSxFQUFFLE9BRE87QUFHYkMsRUFBQUEsS0FBSyxFQUFFLENBQUUsTUFBRixDQUhNO0FBS2JDLEVBQUFBLFFBQVEsRUFBRSxDQUFDQyxLQUFELEVBQVFDLElBQVIsRUFBY0MsSUFBZCxLQUF1QjtBQUM3QixRQUFJQyxLQUFLLENBQUNDLE9BQU4sQ0FBY0osS0FBZCxDQUFKLEVBQTBCLE9BQU9BLEtBQVA7O0FBRTFCLFFBQUksT0FBT0EsS0FBUCxLQUFpQixRQUFyQixFQUErQjtBQUMzQixVQUFJSyxPQUFPLEdBQUdMLEtBQUssQ0FBQ00sSUFBTixFQUFkOztBQUNBLFVBQUlELE9BQU8sQ0FBQ0UsVUFBUixDQUFtQixHQUFuQixLQUEyQkYsT0FBTyxDQUFDRyxRQUFSLENBQWlCLEdBQWpCLENBQS9CLEVBQXNEO0FBQ2xELGVBQU9DLElBQUksQ0FBQ0MsS0FBTCxDQUFXTCxPQUFYLENBQVA7QUFDSDs7QUFFRCxZQUFNLElBQUlYLGVBQUosQ0FBcUIseUJBQXdCTSxLQUFNLEVBQW5ELENBQU47QUFDSDs7QUFFRCxXQUFPLENBQUVBLEtBQUYsQ0FBUDtBQUNILEdBbEJZO0FBb0JiVyxFQUFBQSxZQUFZLEVBQUUsRUFwQkQ7QUFzQmJDLEVBQUFBLFFBQVEsRUFBRSxDQUFDWCxJQUFELEVBQU9DLElBQVAsS0FBZ0IsSUF0QmI7QUF3QmJXLEVBQUFBLFNBQVMsRUFBR2IsS0FBRCxJQUFXUixTQUFTLENBQUNRLEtBQUQsQ0FBVCxHQUFtQixJQUFuQixHQUEwQlMsSUFBSSxDQUFDSyxTQUFMLENBQWVkLEtBQWYsQ0F4Qm5DO0FBMEJiZSxFQUFBQSxVQUFVLEVBQUV0QixHQUFHLENBQUNzQixVQUFKLENBQWVDLE1BQWYsQ0FBc0IsQ0FDOUIsS0FEOEIsRUFFOUIsSUFGOEIsQ0FBdEIsQ0ExQkM7QUErQmJDLEVBQUFBLEtBQUssRUFBRSxDQUFDQyxJQUFELEVBQU9DLFNBQVMsR0FBRyxHQUFuQixLQUEyQkQsSUFBSSxDQUFDRSxHQUFMLENBQzlCQyxJQUFJLElBQUk7QUFBRUEsSUFBQUEsSUFBSSxHQUFHQSxJQUFJLENBQUNDLFFBQUwsRUFBUDtBQUF3QixXQUFPRCxJQUFJLENBQUNFLE9BQUwsQ0FBYUosU0FBYixLQUEyQixDQUFDLENBQTVCLEdBQWdDN0IsS0FBSyxDQUFDK0IsSUFBRCxFQUFPLEdBQVAsQ0FBckMsR0FBbURBLElBQTFEO0FBQWlFLEdBRHJFLEVBRTVCRyxJQUY0QixDQUV2QkwsU0FGdUI7QUEvQnJCLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IHsgXywgcXVvdGUgfSA9IHJlcXVpcmUoJ3JrLXV0aWxzJyk7XG5jb25zdCB7IGlzTm90aGluZyB9ID0gcmVxdWlyZSgnLi4vdXRpbHMvbGFuZycpO1xuY29uc3QgYW55ID0gcmVxdWlyZSgnLi9hbnknKTtcbmNvbnN0IHsgVmFsaWRhdGlvbkVycm9yIH0gPSByZXF1aXJlKCcuLi91dGlscy9FcnJvcnMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgbmFtZTogJ2FycmF5JyxcblxuICAgIGFsaWFzOiBbICdsaXN0JyBdLFxuXG4gICAgc2FuaXRpemU6ICh2YWx1ZSwgaW5mbywgaTE4bikgPT4ge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHJldHVybiB2YWx1ZTtcblxuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgbGV0IHRyaW1tZWQgPSB2YWx1ZS50cmltKCk7XG4gICAgICAgICAgICBpZiAodHJpbW1lZC5zdGFydHNXaXRoKCdbJykgJiYgdHJpbW1lZC5lbmRzV2l0aCgnXScpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodHJpbW1lZCk7XG4gICAgICAgICAgICB9ICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKGBJbnZhbGlkIGFycmF5IGZvcm1hdDogJHt2YWx1ZX1gKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBbIHZhbHVlIF07XG4gICAgfSxcblxuICAgIGRlZmF1bHRWYWx1ZTogW10sXG5cbiAgICBnZW5lcmF0ZTogKGluZm8sIGkxOG4pID0+IG51bGwsXG5cbiAgICBzZXJpYWxpemU6ICh2YWx1ZSkgPT4gaXNOb3RoaW5nKHZhbHVlKSA/IG51bGwgOiBKU09OLnN0cmluZ2lmeSh2YWx1ZSksXG5cbiAgICBxdWFsaWZpZXJzOiBhbnkucXVhbGlmaWVycy5jb25jYXQoW1xuICAgICAgICAnY3N2JyxcbiAgICAgICAgJ29mJ1xuICAgIF0pLFxuXG4gICAgdG9Dc3Y6IChkYXRhLCBzZXBhcmF0b3IgPSAnLCcpID0+IGRhdGEubWFwKFxuICAgICAgICBlbGVtID0+IHsgZWxlbSA9IGVsZW0udG9TdHJpbmcoKTsgcmV0dXJuIGVsZW0uaW5kZXhPZihzZXBhcmF0b3IpICE9IC0xID8gcXVvdGUoZWxlbSwgJ1wiJykgOiBlbGVtOyB9XG4gICAgICAgICkuam9pbihzZXBhcmF0b3IpXG59OyJdfQ==