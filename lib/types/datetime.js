"use strict";

require("source-map-support/register");

const _ = require('rk-utils')._;

const {
  DateTime
} = require('luxon');

const any = require('./any');

module.exports = {
  name: 'datetime',
  typeObject: DateTime,
  alias: ['date', 'time', 'timestamp'],
  sanitize: (value, info, i18n) => {
    if (value instanceof Date) return value;
    let type = typeof value;

    if (type === 'string' && info.fromFormat) {
      return i18n ? i18n.datetime.fromISO(value, info.fromFormat) : DateTime.fromFormat(value, info.fromFormat, {
        setZone: true
      });
    }

    if (type === 'number') {
      return i18n ? i18n.datetime.fromMillis(value) : DateTime.fromMillis(value);
    }

    return value;
  },
  defaultValue: 0,
  generate: (info, i18n) => i18n ? i18n.now() : DateTime.local(),
  serialize: value => {
    if (value.toISO) {
      return value.toISO({
        includeOffset: false
      });
    }

    return value;
  },
  qualifiers: any.qualifiers.concat(['timezone', 'dateOnly', 'timeOnly', 'fromFormat'])
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90eXBlcy9kYXRldGltZS5qcyJdLCJuYW1lcyI6WyJfIiwicmVxdWlyZSIsIkRhdGVUaW1lIiwiYW55IiwibW9kdWxlIiwiZXhwb3J0cyIsIm5hbWUiLCJ0eXBlT2JqZWN0IiwiYWxpYXMiLCJzYW5pdGl6ZSIsInZhbHVlIiwiaW5mbyIsImkxOG4iLCJEYXRlIiwidHlwZSIsImZyb21Gb3JtYXQiLCJkYXRldGltZSIsImZyb21JU08iLCJzZXRab25lIiwiZnJvbU1pbGxpcyIsImRlZmF1bHRWYWx1ZSIsImdlbmVyYXRlIiwibm93IiwibG9jYWwiLCJzZXJpYWxpemUiLCJ0b0lTTyIsImluY2x1ZGVPZmZzZXQiLCJxdWFsaWZpZXJzIiwiY29uY2F0Il0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBLE1BQU1BLENBQUMsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBUCxDQUFvQkQsQ0FBOUI7O0FBQ0EsTUFBTTtBQUFFRSxFQUFBQTtBQUFGLElBQWVELE9BQU8sQ0FBQyxPQUFELENBQTVCOztBQUNBLE1BQU1FLEdBQUcsR0FBR0YsT0FBTyxDQUFDLE9BQUQsQ0FBbkI7O0FBRUFHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxJQUFJLEVBQUUsVUFETztBQUdiQyxFQUFBQSxVQUFVLEVBQUVMLFFBSEM7QUFLYk0sRUFBQUEsS0FBSyxFQUFFLENBQUUsTUFBRixFQUFVLE1BQVYsRUFBa0IsV0FBbEIsQ0FMTTtBQU9iQyxFQUFBQSxRQUFRLEVBQUUsQ0FBQ0MsS0FBRCxFQUFRQyxJQUFSLEVBQWNDLElBQWQsS0FBdUI7QUFDN0IsUUFBSUYsS0FBSyxZQUFZRyxJQUFyQixFQUEyQixPQUFPSCxLQUFQO0FBRTNCLFFBQUlJLElBQUksR0FBRyxPQUFPSixLQUFsQjs7QUFFQSxRQUFJSSxJQUFJLEtBQUssUUFBVCxJQUFxQkgsSUFBSSxDQUFDSSxVQUE5QixFQUEwQztBQUN0QyxhQUFPSCxJQUFJLEdBQUdBLElBQUksQ0FBQ0ksUUFBTCxDQUFjQyxPQUFkLENBQXNCUCxLQUF0QixFQUE2QkMsSUFBSSxDQUFDSSxVQUFsQyxDQUFILEdBQW1EYixRQUFRLENBQUNhLFVBQVQsQ0FBb0JMLEtBQXBCLEVBQTJCQyxJQUFJLENBQUNJLFVBQWhDLEVBQTRDO0FBQUNHLFFBQUFBLE9BQU8sRUFBRTtBQUFWLE9BQTVDLENBQTlEO0FBQ0g7O0FBRUQsUUFBSUosSUFBSSxLQUFLLFFBQWIsRUFBdUI7QUFDbkIsYUFBT0YsSUFBSSxHQUFHQSxJQUFJLENBQUNJLFFBQUwsQ0FBY0csVUFBZCxDQUF5QlQsS0FBekIsQ0FBSCxHQUFxQ1IsUUFBUSxDQUFDaUIsVUFBVCxDQUFvQlQsS0FBcEIsQ0FBaEQ7QUFDSDs7QUFFRCxXQUFPQSxLQUFQO0FBQ0gsR0FyQlk7QUF1QmJVLEVBQUFBLFlBQVksRUFBRSxDQXZCRDtBQXlCYkMsRUFBQUEsUUFBUSxFQUFFLENBQUNWLElBQUQsRUFBT0MsSUFBUCxLQUFnQkEsSUFBSSxHQUFHQSxJQUFJLENBQUNVLEdBQUwsRUFBSCxHQUFnQnBCLFFBQVEsQ0FBQ3FCLEtBQVQsRUF6QmpDO0FBMkJiQyxFQUFBQSxTQUFTLEVBQUVkLEtBQUssSUFBSTtBQUNoQixRQUFJQSxLQUFLLENBQUNlLEtBQVYsRUFBaUI7QUFDYixhQUFPZixLQUFLLENBQUNlLEtBQU4sQ0FBWTtBQUFFQyxRQUFBQSxhQUFhLEVBQUU7QUFBakIsT0FBWixDQUFQO0FBQ0g7O0FBRUQsV0FBT2hCLEtBQVA7QUFDSCxHQWpDWTtBQW1DYmlCLEVBQUFBLFVBQVUsRUFBRXhCLEdBQUcsQ0FBQ3dCLFVBQUosQ0FBZUMsTUFBZixDQUFzQixDQUM5QixVQUQ4QixFQUU5QixVQUY4QixFQUc5QixVQUg4QixFQUk5QixZQUo4QixDQUF0QjtBQW5DQyxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCBfID0gcmVxdWlyZSgncmstdXRpbHMnKS5fO1xuY29uc3QgeyBEYXRlVGltZSB9ID0gcmVxdWlyZSgnbHV4b24nKTtcbmNvbnN0IGFueSA9IHJlcXVpcmUoJy4vYW55Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIG5hbWU6ICdkYXRldGltZScsXG5cbiAgICB0eXBlT2JqZWN0OiBEYXRlVGltZSxcblxuICAgIGFsaWFzOiBbICdkYXRlJywgJ3RpbWUnLCAndGltZXN0YW1wJyBdLFxuXG4gICAgc2FuaXRpemU6ICh2YWx1ZSwgaW5mbywgaTE4bikgPT4geyAgIFxuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBEYXRlKSByZXR1cm4gdmFsdWU7XG5cbiAgICAgICAgbGV0IHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gICAgICAgIFxuICAgICAgICBpZiAodHlwZSA9PT0gJ3N0cmluZycgJiYgaW5mby5mcm9tRm9ybWF0KSB7XG4gICAgICAgICAgICByZXR1cm4gaTE4biA/IGkxOG4uZGF0ZXRpbWUuZnJvbUlTTyh2YWx1ZSwgaW5mby5mcm9tRm9ybWF0KSA6IERhdGVUaW1lLmZyb21Gb3JtYXQodmFsdWUsIGluZm8uZnJvbUZvcm1hdCwge3NldFpvbmU6IHRydWV9KTtcbiAgICAgICAgfSBcbiAgICAgICAgXG4gICAgICAgIGlmICh0eXBlID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgcmV0dXJuIGkxOG4gPyBpMThuLmRhdGV0aW1lLmZyb21NaWxsaXModmFsdWUpIDogRGF0ZVRpbWUuZnJvbU1pbGxpcyh2YWx1ZSk7XG4gICAgICAgIH0gXG4gICAgICAgIFxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSxcblxuICAgIGRlZmF1bHRWYWx1ZTogMCxcblxuICAgIGdlbmVyYXRlOiAoaW5mbywgaTE4bikgPT4gaTE4biA/IGkxOG4ubm93KCkgOiBEYXRlVGltZS5sb2NhbCgpLFxuXG4gICAgc2VyaWFsaXplOiB2YWx1ZSA9PiB7XG4gICAgICAgIGlmICh2YWx1ZS50b0lTTykge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlLnRvSVNPKHsgaW5jbHVkZU9mZnNldDogZmFsc2UgfSk7IFxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG5cbiAgICBxdWFsaWZpZXJzOiBhbnkucXVhbGlmaWVycy5jb25jYXQoW1xuICAgICAgICAndGltZXpvbmUnLFxuICAgICAgICAnZGF0ZU9ubHknLFxuICAgICAgICAndGltZU9ubHknLFxuICAgICAgICAnZnJvbUZvcm1hdCdcbiAgICBdKVxufTsiXX0=