"use strict";

require("source-map-support/register");

const Convertors = require('../Convertors');

const randomstring = require("randomstring");

const any = require('./any');

module.exports = {
  name: 'text',
  alias: ['string', 'char'],
  sanitize: (value, info, i18n) => Convertors.toText(value),
  defaultValue: '',
  generate: (info, i18n) => {
    let randOpt = {};

    if (info.fixedLength) {
      randOpt.length = info.fixedLength;
    }

    if (info.maxLength) {
      randOpt.length = info.maxLength > 32 ? 32 : info.maxLength;
    }

    if (info.allowedChars) {
      randOpt.charset = info.allowedChars;
    }

    return randomstring.generate(randOpt);
  },
  serialize: value => value,
  qualifiers: any.qualifiers.concat(['fixedLength', 'maxLength', 'encoding', 'allowedChars'])
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90eXBlcy90ZXh0LmpzIl0sIm5hbWVzIjpbIkNvbnZlcnRvcnMiLCJyZXF1aXJlIiwicmFuZG9tc3RyaW5nIiwiYW55IiwibW9kdWxlIiwiZXhwb3J0cyIsIm5hbWUiLCJhbGlhcyIsInNhbml0aXplIiwidmFsdWUiLCJpbmZvIiwiaTE4biIsInRvVGV4dCIsImRlZmF1bHRWYWx1ZSIsImdlbmVyYXRlIiwicmFuZE9wdCIsImZpeGVkTGVuZ3RoIiwibGVuZ3RoIiwibWF4TGVuZ3RoIiwiYWxsb3dlZENoYXJzIiwiY2hhcnNldCIsInNlcmlhbGl6ZSIsInF1YWxpZmllcnMiLCJjb25jYXQiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUEsTUFBTUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsZUFBRCxDQUExQjs7QUFDQSxNQUFNQyxZQUFZLEdBQUdELE9BQU8sQ0FBQyxjQUFELENBQTVCOztBQUNBLE1BQU1FLEdBQUcsR0FBR0YsT0FBTyxDQUFDLE9BQUQsQ0FBbkI7O0FBRUFHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxJQUFJLEVBQUUsTUFETztBQUdiQyxFQUFBQSxLQUFLLEVBQUUsQ0FBRSxRQUFGLEVBQVksTUFBWixDQUhNO0FBS2JDLEVBQUFBLFFBQVEsRUFBRSxDQUFDQyxLQUFELEVBQVFDLElBQVIsRUFBY0MsSUFBZCxLQUF1QlgsVUFBVSxDQUFDWSxNQUFYLENBQWtCSCxLQUFsQixDQUxwQjtBQU9iSSxFQUFBQSxZQUFZLEVBQUUsRUFQRDtBQVNiQyxFQUFBQSxRQUFRLEVBQUUsQ0FBQ0osSUFBRCxFQUFPQyxJQUFQLEtBQWdCO0FBQ3RCLFFBQUlJLE9BQU8sR0FBRyxFQUFkOztBQUVBLFFBQUlMLElBQUksQ0FBQ00sV0FBVCxFQUFzQjtBQUNsQkQsTUFBQUEsT0FBTyxDQUFDRSxNQUFSLEdBQWlCUCxJQUFJLENBQUNNLFdBQXRCO0FBQ0g7O0FBRUQsUUFBSU4sSUFBSSxDQUFDUSxTQUFULEVBQW9CO0FBQ2hCSCxNQUFBQSxPQUFPLENBQUNFLE1BQVIsR0FBaUJQLElBQUksQ0FBQ1EsU0FBTCxHQUFpQixFQUFqQixHQUFzQixFQUF0QixHQUEyQlIsSUFBSSxDQUFDUSxTQUFqRDtBQUNIOztBQUVELFFBQUlSLElBQUksQ0FBQ1MsWUFBVCxFQUF1QjtBQUNuQkosTUFBQUEsT0FBTyxDQUFDSyxPQUFSLEdBQWtCVixJQUFJLENBQUNTLFlBQXZCO0FBQ0g7O0FBRUQsV0FBT2pCLFlBQVksQ0FBQ1ksUUFBYixDQUFzQkMsT0FBdEIsQ0FBUDtBQUNILEdBekJZO0FBMkJiTSxFQUFBQSxTQUFTLEVBQUVaLEtBQUssSUFBSUEsS0EzQlA7QUE2QmJhLEVBQUFBLFVBQVUsRUFBRW5CLEdBQUcsQ0FBQ21CLFVBQUosQ0FBZUMsTUFBZixDQUFzQixDQUM5QixhQUQ4QixFQUU5QixXQUY4QixFQUc5QixVQUg4QixFQUk5QixjQUo4QixDQUF0QjtBQTdCQyxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCBDb252ZXJ0b3JzID0gcmVxdWlyZSgnLi4vQ29udmVydG9ycycpO1xuY29uc3QgcmFuZG9tc3RyaW5nID0gcmVxdWlyZShcInJhbmRvbXN0cmluZ1wiKTtcbmNvbnN0IGFueSA9IHJlcXVpcmUoJy4vYW55Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIG5hbWU6ICd0ZXh0JyxcblxuICAgIGFsaWFzOiBbICdzdHJpbmcnLCAnY2hhcicgXSxcblxuICAgIHNhbml0aXplOiAodmFsdWUsIGluZm8sIGkxOG4pID0+IENvbnZlcnRvcnMudG9UZXh0KHZhbHVlKSxcblxuICAgIGRlZmF1bHRWYWx1ZTogJycsXG5cbiAgICBnZW5lcmF0ZTogKGluZm8sIGkxOG4pID0+IHtcbiAgICAgICAgbGV0IHJhbmRPcHQgPSB7fTtcblxuICAgICAgICBpZiAoaW5mby5maXhlZExlbmd0aCkge1xuICAgICAgICAgICAgcmFuZE9wdC5sZW5ndGggPSBpbmZvLmZpeGVkTGVuZ3RoO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGluZm8ubWF4TGVuZ3RoKSB7XG4gICAgICAgICAgICByYW5kT3B0Lmxlbmd0aCA9IGluZm8ubWF4TGVuZ3RoID4gMzIgPyAzMiA6IGluZm8ubWF4TGVuZ3RoO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGluZm8uYWxsb3dlZENoYXJzKSB7XG4gICAgICAgICAgICByYW5kT3B0LmNoYXJzZXQgPSBpbmZvLmFsbG93ZWRDaGFycztcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByYW5kb21zdHJpbmcuZ2VuZXJhdGUocmFuZE9wdCk7XG4gICAgfSwgIFxuXG4gICAgc2VyaWFsaXplOiB2YWx1ZSA9PiB2YWx1ZSxcblxuICAgIHF1YWxpZmllcnM6IGFueS5xdWFsaWZpZXJzLmNvbmNhdChbXG4gICAgICAgICdmaXhlZExlbmd0aCcsXG4gICAgICAgICdtYXhMZW5ndGgnLFxuICAgICAgICAnZW5jb2RpbmcnLFxuICAgICAgICAnYWxsb3dlZENoYXJzJ1xuICAgIF0pXG59OyJdfQ==