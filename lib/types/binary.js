"use strict";

require("source-map-support/register");

const {
  isNothing
} = require('../utils/lang');

const any = require('./any');

module.exports = {
  name: 'binary',
  alias: ['blob', 'buffer'],
  sanitize: (value, info, i18n) => value == null ? null : value instanceof Buffer ? input : Buffer.from(value.toString()),
  defaultValue: 0,
  generate: (info, i18n) => null,
  serialize: (value, options) => isNothing(value) ? null : value.toString(options && options.encoding || 'base64'),
  qualifiers: any.qualifiers.concat(['fixedLength', 'maxLength'])
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90eXBlcy9iaW5hcnkuanMiXSwibmFtZXMiOlsiaXNOb3RoaW5nIiwicmVxdWlyZSIsImFueSIsIm1vZHVsZSIsImV4cG9ydHMiLCJuYW1lIiwiYWxpYXMiLCJzYW5pdGl6ZSIsInZhbHVlIiwiaW5mbyIsImkxOG4iLCJCdWZmZXIiLCJpbnB1dCIsImZyb20iLCJ0b1N0cmluZyIsImRlZmF1bHRWYWx1ZSIsImdlbmVyYXRlIiwic2VyaWFsaXplIiwib3B0aW9ucyIsImVuY29kaW5nIiwicXVhbGlmaWVycyIsImNvbmNhdCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFFQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBZ0JDLE9BQU8sQ0FBQyxlQUFELENBQTdCOztBQUNBLE1BQU1DLEdBQUcsR0FBR0QsT0FBTyxDQUFDLE9BQUQsQ0FBbkI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxJQUFJLEVBQUUsUUFETztBQUdiQyxFQUFBQSxLQUFLLEVBQUUsQ0FBRSxNQUFGLEVBQVUsUUFBVixDQUhNO0FBS2JDLEVBQUFBLFFBQVEsRUFBRSxDQUFDQyxLQUFELEVBQVFDLElBQVIsRUFBY0MsSUFBZCxLQUF1QkYsS0FBSyxJQUFJLElBQVQsR0FBZ0IsSUFBaEIsR0FBd0JBLEtBQUssWUFBWUcsTUFBbEIsR0FBNEJDLEtBQTVCLEdBQW9DRCxNQUFNLENBQUNFLElBQVAsQ0FBWUwsS0FBSyxDQUFDTSxRQUFOLEVBQVosQ0FML0U7QUFPYkMsRUFBQUEsWUFBWSxFQUFFLENBUEQ7QUFTYkMsRUFBQUEsUUFBUSxFQUFFLENBQUNQLElBQUQsRUFBT0MsSUFBUCxLQUFnQixJQVRiO0FBV2JPLEVBQUFBLFNBQVMsRUFBRSxDQUFDVCxLQUFELEVBQVFVLE9BQVIsS0FBb0JsQixTQUFTLENBQUNRLEtBQUQsQ0FBVCxHQUFtQixJQUFuQixHQUEwQkEsS0FBSyxDQUFDTSxRQUFOLENBQWVJLE9BQU8sSUFBSUEsT0FBTyxDQUFDQyxRQUFuQixJQUErQixRQUE5QyxDQVg1QztBQWFiQyxFQUFBQSxVQUFVLEVBQUVsQixHQUFHLENBQUNrQixVQUFKLENBQWVDLE1BQWYsQ0FBc0IsQ0FDOUIsYUFEOEIsRUFFOUIsV0FGOEIsQ0FBdEI7QUFiQyxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCB7IGlzTm90aGluZyB9ID0gcmVxdWlyZSgnLi4vdXRpbHMvbGFuZycpO1xuY29uc3QgYW55ID0gcmVxdWlyZSgnLi9hbnknKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgbmFtZTogJ2JpbmFyeScsXG5cbiAgICBhbGlhczogWyAnYmxvYicsICdidWZmZXInIF0sXG5cbiAgICBzYW5pdGl6ZTogKHZhbHVlLCBpbmZvLCBpMThuKSA9PiB2YWx1ZSA9PSBudWxsID8gbnVsbCA6ICh2YWx1ZSBpbnN0YW5jZW9mIEJ1ZmZlcikgPyBpbnB1dCA6IEJ1ZmZlci5mcm9tKHZhbHVlLnRvU3RyaW5nKCkpLFxuXG4gICAgZGVmYXVsdFZhbHVlOiAwLFxuXG4gICAgZ2VuZXJhdGU6IChpbmZvLCBpMThuKSA9PiBudWxsLFxuXG4gICAgc2VyaWFsaXplOiAodmFsdWUsIG9wdGlvbnMpID0+IGlzTm90aGluZyh2YWx1ZSkgPyBudWxsIDogdmFsdWUudG9TdHJpbmcob3B0aW9ucyAmJiBvcHRpb25zLmVuY29kaW5nIHx8ICdiYXNlNjQnKSxcblxuICAgIHF1YWxpZmllcnM6IGFueS5xdWFsaWZpZXJzLmNvbmNhdChbXG4gICAgICAgICdmaXhlZExlbmd0aCcsXG4gICAgICAgICdtYXhMZW5ndGgnXG4gICAgXSlcbn07Il19