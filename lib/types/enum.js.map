{"version":3,"sources":["../../src/types/enum.js"],"names":["any","require","ValidationError","module","exports","name","sanitize","value","info","raw","toString","trim","values","indexOf","field","defaultValue","generate","length","serialize","qualifiers","concat"],"mappings":";;;;AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAsBD,OAAO,CAAC,iBAAD,CAAnC;;AAEAE,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE,MADO;AAGbC,EAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACvB,QAAID,KAAK,IAAI,IAAb,EAAmB,OAAO,IAAP;AAEnB,QAAIE,GAAG,GAAGF,KAAV;AACAA,IAAAA,KAAK,GAAG,CAAC,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACG,QAAN,EAA5B,GAA+CH,KAAhD,EAAuDI,IAAvD,EAAR;;AAEA,QAAIH,IAAI,CAACI,MAAL,IAAeJ,IAAI,CAACI,MAAL,CAAYC,OAAZ,CAAoBN,KAApB,MAA+B,CAAC,CAAnD,EAAsD;AAClD,YAAM,IAAIL,eAAJ,CAAoB,oBAApB,EAA0C;AAC5CK,QAAAA,KAAK,EAAEE,GADqC;AAE5CK,QAAAA,KAAK,EAAEN;AAFqC,OAA1C,CAAN;AAIH;;AAED,WAAOD,KAAP;AACH,GAjBY;AAmBbQ,EAAAA,YAAY,EAAE,CAnBD;AAqBbC,EAAAA,QAAQ,EAAGR,IAAD,IAAUA,IAAI,CAACI,MAAL,IAAeJ,IAAI,CAACI,MAAL,CAAYK,MAAZ,GAAqB,CAApC,IAAyCT,IAAI,CAACI,MAAL,CAAY,CAAZ,CArBhD;AAuBbM,EAAAA,SAAS,EAAGX,KAAD,IAAWA,KAvBT;AAyBbY,EAAAA,UAAU,EAAEnB,GAAG,CAACmB,UAAJ,CAAeC,MAAf,CAAsB,CAAC,QAAD,CAAtB;AAzBC,CAAjB","sourcesContent":["const any = require('./any');\nconst { ValidationError } = require('../utils/Errors');\n\nmodule.exports = {\n    name: 'enum',\n\n    sanitize: (value, info) => {\n        if (value == null) return null;\n\n        let raw = value;\n        value = (typeof value !== 'string' ? value.toString() : value).trim();\n\n        if (info.values && info.values.indexOf(value) === -1) {\n            throw new ValidationError('Invalid enum value', {\n                value: raw,\n                field: info,\n            });\n        }\n\n        return value;\n    },\n\n    defaultValue: 0,\n\n    generate: (info) => info.values && info.values.length > 0 && info.values[0],\n\n    serialize: (value) => value,\n\n    qualifiers: any.qualifiers.concat(['values']),\n};\n"],"file":"enum.js"}