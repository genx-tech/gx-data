{"version":3,"file":"enum.js","names":["any","require","ValidationError","module","exports","name","sanitize","value","info","raw","toString","trim","values","indexOf","field","defaultValue","generate","length","serialize","qualifiers","concat"],"sources":["../../src/types/enum.js"],"sourcesContent":["const any = require('./any');\nconst { ValidationError } = require('../utils/Errors');\n\nmodule.exports = {\n    name: 'enum',\n\n    sanitize: (value, info) => {\n        if (value == null) return null;\n\n        const raw = value;\n        value = (typeof value !== 'string' ? value.toString() : value).trim();\n\n        if (value === '') return null;\n\n        if (info.values && info.values.indexOf(value) === -1) {\n            throw new ValidationError('Invalid enum value', {\n                value: raw,\n                field: info,\n            });\n        }\n\n        return value;\n    },\n\n    defaultValue: 0,\n\n    generate: (info) => info.values && info.values.length > 0 && info.values[0],\n\n    serialize: (value) => value,\n\n    qualifiers: any.qualifiers.concat(['values']),\n};\n"],"mappings":";;;;AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,MAAM;EAAEC;AAAF,IAAsBD,OAAO,CAAC,iBAAD,CAAnC;;AAEAE,MAAM,CAACC,OAAP,GAAiB;EACbC,IAAI,EAAE,MADO;EAGbC,QAAQ,EAAE,CAACC,KAAD,EAAQC,IAAR,KAAiB;IACvB,IAAID,KAAK,IAAI,IAAb,EAAmB,OAAO,IAAP;IAEnB,MAAME,GAAG,GAAGF,KAAZ;IACAA,KAAK,GAAG,CAAC,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACG,QAAN,EAA5B,GAA+CH,KAAhD,EAAuDI,IAAvD,EAAR;IAEA,IAAIJ,KAAK,KAAK,EAAd,EAAkB,OAAO,IAAP;;IAElB,IAAIC,IAAI,CAACI,MAAL,IAAeJ,IAAI,CAACI,MAAL,CAAYC,OAAZ,CAAoBN,KAApB,MAA+B,CAAC,CAAnD,EAAsD;MAClD,MAAM,IAAIL,eAAJ,CAAoB,oBAApB,EAA0C;QAC5CK,KAAK,EAAEE,GADqC;QAE5CK,KAAK,EAAEN;MAFqC,CAA1C,CAAN;IAIH;;IAED,OAAOD,KAAP;EACH,CAnBY;EAqBbQ,YAAY,EAAE,CArBD;EAuBbC,QAAQ,EAAGR,IAAD,IAAUA,IAAI,CAACI,MAAL,IAAeJ,IAAI,CAACI,MAAL,CAAYK,MAAZ,GAAqB,CAApC,IAAyCT,IAAI,CAACI,MAAL,CAAY,CAAZ,CAvBhD;EAyBbM,SAAS,EAAGX,KAAD,IAAWA,KAzBT;EA2BbY,UAAU,EAAEnB,GAAG,CAACmB,UAAJ,CAAeC,MAAf,CAAsB,CAAC,QAAD,CAAtB;AA3BC,CAAjB"}