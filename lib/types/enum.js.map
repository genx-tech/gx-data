{"version":3,"file":"enum.js","names":["any","require","ValidationError","module","exports","name","sanitize","value","info","raw","toString","trim","values","indexOf","field","defaultValue","generate","length","serialize","qualifiers","concat"],"sources":["../../src/types/enum.js"],"sourcesContent":["const any = require('./any');\nconst { ValidationError } = require('../utils/Errors');\n\nmodule.exports = {\n    name: 'enum',\n\n    sanitize: (value, info) => {\n        if (value == null) return null;\n\n        const raw = value;\n        value = (typeof value !== 'string' ? value.toString() : value).trim();\n\n        if (value === '') return null;\n\n        if (info.values && info.values.indexOf(value) === -1) {\n            throw new ValidationError('Invalid enum value', {\n                value: raw,\n                field: info,\n            });\n        }\n\n        return value;\n    },\n\n    defaultValue: 0,\n\n    generate: (info) => info.values && info.values.length > 0 && info.values[0],\n\n    serialize: (value) => value,\n\n    qualifiers: any.qualifiers.concat(['values']),\n};\n"],"mappings":";;;AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC5B,MAAM;EAAEC;AAAgB,CAAC,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAEtDE,MAAM,CAACC,OAAO,GAAG;EACbC,IAAI,EAAE,MAAM;EAEZC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,IAAI,KAAK;IACvB,IAAID,KAAK,IAAI,IAAI,EAAE,OAAO,IAAI;IAE9B,MAAME,GAAG,GAAGF,KAAK;IACjBA,KAAK,GAAG,CAAC,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAACG,QAAQ,EAAE,GAAGH,KAAK,EAAEI,IAAI,EAAE;IAErE,IAAIJ,KAAK,KAAK,EAAE,EAAE,OAAO,IAAI;IAE7B,IAAIC,IAAI,CAACI,MAAM,IAAIJ,IAAI,CAACI,MAAM,CAACC,OAAO,CAACN,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;MAClD,MAAM,IAAIL,eAAe,CAAC,oBAAoB,EAAE;QAC5CK,KAAK,EAAEE,GAAG;QACVK,KAAK,EAAEN;MACX,CAAC,CAAC;IACN;IAEA,OAAOD,KAAK;EAChB,CAAC;EAEDQ,YAAY,EAAE,CAAC;EAEfC,QAAQ,EAAGR,IAAI,IAAKA,IAAI,CAACI,MAAM,IAAIJ,IAAI,CAACI,MAAM,CAACK,MAAM,GAAG,CAAC,IAAIT,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC;EAE3EM,SAAS,EAAGX,KAAK,IAAKA,KAAK;EAE3BY,UAAU,EAAEnB,GAAG,CAACmB,UAAU,CAACC,MAAM,CAAC,CAAC,QAAQ,CAAC;AAChD,CAAC"}