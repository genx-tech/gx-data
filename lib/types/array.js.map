{"version":3,"file":"array.js","names":["quote","require","isNothing","any","ValidationError","sanitize","value","info","i18n","prefix","raw","csv","trimmed","trim","startsWith","endsWith","JSON","parse","Array","isArray","elementSchema","schema","Types","map","a","i","field","module","exports","name","alias","defaultValue","generate","serialize","stringify","qualifiers","concat","toCsv","data","separator","elem","toString","indexOf","join"],"sources":["../../src/types/array.js"],"sourcesContent":["const { quote } = require('@genx/july');\nconst { isNothing } = require('../utils/lang');\nconst any = require('./any');\nconst { ValidationError } = require('../utils/Errors');\n\nfunction sanitize(value, info, i18n, prefix) {\n    if (value == null) return null;\n\n    const raw = value;\n\n    if (typeof value === 'string') {\n        if (info.csv) {\n            return value;\n        } else {\n            const trimmed = value.trim();\n            if (trimmed.startsWith('[') && trimmed.endsWith(']')) {\n                value = sanitize(JSON.parse(trimmed), info, i18n, prefix);\n            }\n        }\n    }\n\n    if (Array.isArray(value)) {\n        if (info.elementSchema) {\n            const schema =\n                typeof info.elementSchema === 'function'\n                    ? info.elementSchema()\n                    : info.elementSchema;\n            const Types = require('.');\n            return value.map((a, i) =>\n                Types.sanitize(a, schema, i18n, prefix + `[${i}]`)\n            );\n        }\n\n        return value;\n    }\n\n    throw new ValidationError('Invalid array value', {\n        value: raw,\n        field: info,\n    });\n}\n\nmodule.exports = {\n    name: 'array',\n\n    alias: ['list'],\n\n    sanitize: sanitize,\n\n    defaultValue: [],\n\n    generate: (info, i18n) => [],\n\n    // when it's csv, should call toCsv in driver specific EntityModel\n    serialize: (value) => (isNothing(value) ? null : JSON.stringify(value)),\n\n    qualifiers: any.qualifiers.concat(['csv', 'of', 'elementSchema']),\n\n    toCsv: (data, separator = ',') =>\n        data\n            .map((elem) => {\n                elem = elem.toString();\n                return elem.indexOf(separator) !== -1 ? quote(elem, '\"') : elem;\n            })\n            .join(separator),\n};\n"],"mappings":";;;;AAAA,MAAM;EAAEA;AAAF,IAAYC,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAM;EAAEC;AAAF,IAAgBD,OAAO,CAAC,eAAD,CAA7B;;AACA,MAAME,GAAG,GAAGF,OAAO,CAAC,OAAD,CAAnB;;AACA,MAAM;EAAEG;AAAF,IAAsBH,OAAO,CAAC,iBAAD,CAAnC;;AAEA,SAASI,QAAT,CAAkBC,KAAlB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,MAArC,EAA6C;EACzC,IAAIH,KAAK,IAAI,IAAb,EAAmB,OAAO,IAAP;EAEnB,MAAMI,GAAG,GAAGJ,KAAZ;;EAEA,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC3B,IAAIC,IAAI,CAACI,GAAT,EAAc;MACV,OAAOL,KAAP;IACH,CAFD,MAEO;MACH,MAAMM,OAAO,GAAGN,KAAK,CAACO,IAAN,EAAhB;;MACA,IAAID,OAAO,CAACE,UAAR,CAAmB,GAAnB,KAA2BF,OAAO,CAACG,QAAR,CAAiB,GAAjB,CAA/B,EAAsD;QAClDT,KAAK,GAAGD,QAAQ,CAACW,IAAI,CAACC,KAAL,CAAWL,OAAX,CAAD,EAAsBL,IAAtB,EAA4BC,IAA5B,EAAkCC,MAAlC,CAAhB;MACH;IACJ;EACJ;;EAED,IAAIS,KAAK,CAACC,OAAN,CAAcb,KAAd,CAAJ,EAA0B;IACtB,IAAIC,IAAI,CAACa,aAAT,EAAwB;MACpB,MAAMC,MAAM,GACR,OAAOd,IAAI,CAACa,aAAZ,KAA8B,UAA9B,GACMb,IAAI,CAACa,aAAL,EADN,GAEMb,IAAI,CAACa,aAHf;;MAIA,MAAME,KAAK,GAAGrB,OAAO,CAAC,GAAD,CAArB;;MACA,OAAOK,KAAK,CAACiB,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,KACbH,KAAK,CAACjB,QAAN,CAAemB,CAAf,EAAkBH,MAAlB,EAA0Bb,IAA1B,EAAgCC,MAAM,GAAI,IAAGgB,CAAE,GAA/C,CADG,CAAP;IAGH;;IAED,OAAOnB,KAAP;EACH;;EAED,MAAM,IAAIF,eAAJ,CAAoB,qBAApB,EAA2C;IAC7CE,KAAK,EAAEI,GADsC;IAE7CgB,KAAK,EAAEnB;EAFsC,CAA3C,CAAN;AAIH;;AAEDoB,MAAM,CAACC,OAAP,GAAiB;EACbC,IAAI,EAAE,OADO;EAGbC,KAAK,EAAE,CAAC,MAAD,CAHM;EAKbzB,QAAQ,EAAEA,QALG;EAOb0B,YAAY,EAAE,EAPD;EASbC,QAAQ,EAAE,CAACzB,IAAD,EAAOC,IAAP,KAAgB,EATb;EAYbyB,SAAS,EAAG3B,KAAD,IAAYJ,SAAS,CAACI,KAAD,CAAT,GAAmB,IAAnB,GAA0BU,IAAI,CAACkB,SAAL,CAAe5B,KAAf,CAZpC;EAcb6B,UAAU,EAAEhC,GAAG,CAACgC,UAAJ,CAAeC,MAAf,CAAsB,CAAC,KAAD,EAAQ,IAAR,EAAc,eAAd,CAAtB,CAdC;EAgBbC,KAAK,EAAE,CAACC,IAAD,EAAOC,SAAS,GAAG,GAAnB,KACHD,IAAI,CACCf,GADL,CACUiB,IAAD,IAAU;IACXA,IAAI,GAAGA,IAAI,CAACC,QAAL,EAAP;IACA,OAAOD,IAAI,CAACE,OAAL,CAAaH,SAAb,MAA4B,CAAC,CAA7B,GAAiCvC,KAAK,CAACwC,IAAD,EAAO,GAAP,CAAtC,GAAoDA,IAA3D;EACH,CAJL,EAKKG,IALL,CAKUJ,SALV;AAjBS,CAAjB"}