{"version":3,"file":"text.js","names":["Convertors","require","randomstring","_","ValidationError","any","module","exports","name","alias","sanitize","value","info","i18n","skipTypeCast","toText","noTrim","emptyAsNull","isNil","fixedLength","length","feild","maxLength","minLength","defaultValue","generate","randOpt","allowedChars","charset","caps","capitalization","serialize","qualifiers","concat"],"sources":["../../src/types/text.js"],"sourcesContent":["const Convertors = require('../Convertors');\nconst randomstring = require('randomstring');\nconst { _ } = require('@genx/july');\nconst { ValidationError } = require('../utils/Errors');\nconst any = require('./any');\n\nmodule.exports = {\n    name: 'text',\n\n    alias: ['string', 'char'],\n\n    sanitize: (value, info, i18n) => {\n        if (value == null) return null;\n\n        if (!info || !info.skipTypeCast) {\n            value = Convertors.toText(value, info && info.noTrim);\n        }\n\n        if (value === '' && info.emptyAsNull) {\n            return null;\n        }\n\n        if (!_.isNil(value)) {\n            if (info && info.fixedLength && value.length !== info.fixedLength) {\n                throw new ValidationError(\n                    `The length of the ${\n                        info.name || 'text'\n                    } value is not correct (expected: ${\n                        info.fixedLength\n                    }, actual: ${value.length}).`,\n                    { value, feild: info }\n                );\n            }\n\n            if (info && info.maxLength && value.length > info.maxLength) {\n                throw new ValidationError(\n                    `The length of the ${\n                        info.name || 'text'\n                    } value exceeds max limit (maximum: ${\n                        info.maxLength\n                    }, actual: ${value.length}).`,\n                    { value, feild: info }\n                );\n            }\n\n            if (info && info.minLength && value.length < info.minLength) {\n                throw new ValidationError(\n                    `The length of the ${\n                        info.name || 'text'\n                    } value does not reach min requirement (minimum: ${\n                        info.minLength\n                    }, actual: ${value.length}).`,\n                    { value, feild: info }\n                );\n            }\n        }\n\n        return value;\n    },\n\n    defaultValue: '',\n\n    generate: (info, i18n) => {\n        const randOpt = {};\n\n        if (info.fixedLength) {\n            randOpt.length = info.fixedLength;\n        }\n\n        if (info.maxLength) {\n            randOpt.length = info.maxLength > 32 ? 32 : info.maxLength;\n        }\n\n        if (info.allowedChars) {\n            randOpt.charset = info.allowedChars;\n        }\n\n        if (info.caps) {\n            randOpt.capitalization = info.caps;\n        }\n\n        return randomstring.generate(randOpt);\n    },\n\n    serialize: (value) => value,\n\n    qualifiers: any.qualifiers.concat([\n        'fixedLength',\n        'maxLength',\n        'encoding',\n        'allowedChars',\n        'caps',\n        'noTrim',\n        'emptyAsNull',\n    ]),\n};\n"],"mappings":";;;AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAMC,YAAY,GAAGD,OAAO,CAAC,cAAc,CAAC;AAC5C,MAAM;EAAEE;AAAE,CAAC,GAAGF,OAAO,CAAC,YAAY,CAAC;AACnC,MAAM;EAAEG;AAAgB,CAAC,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AACtD,MAAMI,GAAG,GAAGJ,OAAO,CAAC,OAAO,CAAC;AAE5BK,MAAM,CAACC,OAAO,GAAG;EACbC,IAAI,EAAE,MAAM;EAEZC,KAAK,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC;EAEzBC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,IAAI,EAAEC,IAAI,KAAK;IAC7B,IAAIF,KAAK,IAAI,IAAI,EAAE,OAAO,IAAI;IAE9B,IAAI,CAACC,IAAI,IAAI,CAACA,IAAI,CAACE,YAAY,EAAE;MAC7BH,KAAK,GAAGX,UAAU,CAACe,MAAM,CAACJ,KAAK,EAAEC,IAAI,IAAIA,IAAI,CAACI,MAAM,CAAC;IACzD;IAEA,IAAIL,KAAK,KAAK,EAAE,IAAIC,IAAI,CAACK,WAAW,EAAE;MAClC,OAAO,IAAI;IACf;IAEA,IAAI,CAACd,CAAC,CAACe,KAAK,CAACP,KAAK,CAAC,EAAE;MACjB,IAAIC,IAAI,IAAIA,IAAI,CAACO,WAAW,IAAIR,KAAK,CAACS,MAAM,KAAKR,IAAI,CAACO,WAAW,EAAE;QAC/D,MAAM,IAAIf,eAAe,CACpB,qBACGQ,IAAI,CAACJ,IAAI,IAAI,MAChB,oCACGI,IAAI,CAACO,WACR,aAAYR,KAAK,CAACS,MAAO,IAAG,EAC7B;UAAET,KAAK;UAAEU,KAAK,EAAET;QAAK,CAAC,CACzB;MACL;MAEA,IAAIA,IAAI,IAAIA,IAAI,CAACU,SAAS,IAAIX,KAAK,CAACS,MAAM,GAAGR,IAAI,CAACU,SAAS,EAAE;QACzD,MAAM,IAAIlB,eAAe,CACpB,qBACGQ,IAAI,CAACJ,IAAI,IAAI,MAChB,sCACGI,IAAI,CAACU,SACR,aAAYX,KAAK,CAACS,MAAO,IAAG,EAC7B;UAAET,KAAK;UAAEU,KAAK,EAAET;QAAK,CAAC,CACzB;MACL;MAEA,IAAIA,IAAI,IAAIA,IAAI,CAACW,SAAS,IAAIZ,KAAK,CAACS,MAAM,GAAGR,IAAI,CAACW,SAAS,EAAE;QACzD,MAAM,IAAInB,eAAe,CACpB,qBACGQ,IAAI,CAACJ,IAAI,IAAI,MAChB,mDACGI,IAAI,CAACW,SACR,aAAYZ,KAAK,CAACS,MAAO,IAAG,EAC7B;UAAET,KAAK;UAAEU,KAAK,EAAET;QAAK,CAAC,CACzB;MACL;IACJ;IAEA,OAAOD,KAAK;EAChB,CAAC;EAEDa,YAAY,EAAE,EAAE;EAEhBC,QAAQ,EAAEA,CAACb,IAAI,EAAEC,IAAI,KAAK;IACtB,MAAMa,OAAO,GAAG,CAAC,CAAC;IAElB,IAAId,IAAI,CAACO,WAAW,EAAE;MAClBO,OAAO,CAACN,MAAM,GAAGR,IAAI,CAACO,WAAW;IACrC;IAEA,IAAIP,IAAI,CAACU,SAAS,EAAE;MAChBI,OAAO,CAACN,MAAM,GAAGR,IAAI,CAACU,SAAS,GAAG,EAAE,GAAG,EAAE,GAAGV,IAAI,CAACU,SAAS;IAC9D;IAEA,IAAIV,IAAI,CAACe,YAAY,EAAE;MACnBD,OAAO,CAACE,OAAO,GAAGhB,IAAI,CAACe,YAAY;IACvC;IAEA,IAAIf,IAAI,CAACiB,IAAI,EAAE;MACXH,OAAO,CAACI,cAAc,GAAGlB,IAAI,CAACiB,IAAI;IACtC;IAEA,OAAO3B,YAAY,CAACuB,QAAQ,CAACC,OAAO,CAAC;EACzC,CAAC;EAEDK,SAAS,EAAGpB,KAAK,IAAKA,KAAK;EAE3BqB,UAAU,EAAE3B,GAAG,CAAC2B,UAAU,CAACC,MAAM,CAAC,CAC9B,aAAa,EACb,WAAW,EACX,UAAU,EACV,cAAc,EACd,MAAM,EACN,QAAQ,EACR,aAAa,CAChB;AACL,CAAC"}