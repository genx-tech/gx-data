{"version":3,"sources":["../../src/types/integer.js"],"names":["Convertors","require","ValidationError","any","module","exports","name","alias","sanitize","value","info","i18n","raw","toInt","isNaN","field","defaultValue","generate","serialize","qualifiers","concat"],"mappings":";;;;AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAsBD,OAAO,CAAC,iBAAD,CAAnC;;AACA,MAAME,GAAG,GAAGF,OAAO,CAAC,OAAD,CAAnB;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE,SADO;AAGbC,EAAAA,KAAK,EAAE,CAAC,KAAD,CAHM;AAKbC,EAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,IAAR,EAAcC,IAAd,KAAuB;AAC7B,QAAIF,KAAK,IAAI,IAAb,EAAmB,OAAO,IAAP;AAEnB,UAAMG,GAAG,GAAGH,KAAZ;AACAA,IAAAA,KAAK,GAAGT,UAAU,CAACa,KAAX,CAAiBJ,KAAjB,CAAR;;AACA,QAAIK,KAAK,CAACL,KAAD,CAAT,EAAkB;AACd,YAAM,IAAIP,eAAJ,CAAoB,uBAApB,EAA6C;AAC/CO,QAAAA,KAAK,EAAEG,GADwC;AAE/CG,QAAAA,KAAK,EAAEL;AAFwC,OAA7C,CAAN;AAIH;;AAED,WAAOD,KAAP;AACH,GAlBY;AAoBbO,EAAAA,YAAY,EAAE,CApBD;AAsBbC,EAAAA,QAAQ,EAAE,CAACP,IAAD,EAAOC,IAAP,KAAgB,CAtBb;AAwBbO,EAAAA,SAAS,EAAGT,KAAD,IAAWA,KAxBT;AA0BbU,EAAAA,UAAU,EAAEhB,GAAG,CAACgB,UAAJ,CAAeC,MAAf,CAAsB,CAAC,OAAD,EAAU,QAAV,EAAoB,UAApB,CAAtB;AA1BC,CAAjB","sourcesContent":["const Convertors = require('../Convertors');\nconst { ValidationError } = require('../utils/Errors');\nconst any = require('./any');\n\nmodule.exports = {\n    name: 'integer',\n\n    alias: ['int'],\n\n    sanitize: (value, info, i18n) => {\n        if (value == null) return null;\n\n        const raw = value;\n        value = Convertors.toInt(value);\n        if (isNaN(value)) {\n            throw new ValidationError('Invalid integer value', {\n                value: raw,\n                field: info,\n            });\n        }\n\n        return value;\n    },\n\n    defaultValue: 0,\n\n    generate: (info, i18n) => 0,\n\n    serialize: (value) => value,\n\n    qualifiers: any.qualifiers.concat(['bytes', 'digits', 'unsigned']),\n};\n"],"file":"integer.js"}