"use strict";

require("source-map-support/register");

const {
  fs,
  tryRequire
} = require('@genx/sys');

module.exports = async (csvFile, options, transformer) => {
  const csv = tryRequire('fast-csv', __dirname);
  const readStream = fs.createReadStream(csvFile);
  const parser = csv.parse({
    headers: true,
    trim: true,
    ...options
  });
  let transformWithCallback, output;

  if (transformer) {
    let line = 0;

    transformWithCallback = (data, callback) => transformer(data, line++).then(result => callback(null, result)).catch(error => callback(error));
  } else {
    output = [];
  }

  return new Promise((resolve, reject) => {
    if (!transformWithCallback) {
      readStream.pipe(parser.on('error', reject).on('data', record => output.push(record)).on('end', () => resolve(output)));
    } else {
      readStream.pipe(parser.transform(transformWithCallback).on('error', reject).on('data', row => {}).on('end', () => resolve()));
    }
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9wYXJzZUNzdkZpbGUuanMiXSwibmFtZXMiOlsiZnMiLCJ0cnlSZXF1aXJlIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJjc3ZGaWxlIiwib3B0aW9ucyIsInRyYW5zZm9ybWVyIiwiY3N2IiwiX19kaXJuYW1lIiwicmVhZFN0cmVhbSIsImNyZWF0ZVJlYWRTdHJlYW0iLCJwYXJzZXIiLCJwYXJzZSIsImhlYWRlcnMiLCJ0cmltIiwidHJhbnNmb3JtV2l0aENhbGxiYWNrIiwib3V0cHV0IiwibGluZSIsImRhdGEiLCJjYWxsYmFjayIsInRoZW4iLCJyZXN1bHQiLCJjYXRjaCIsImVycm9yIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJwaXBlIiwib24iLCJyZWNvcmQiLCJwdXNoIiwidHJhbnNmb3JtIiwicm93Il0sIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTTtBQUFFQSxFQUFBQSxFQUFGO0FBQU1DLEVBQUFBO0FBQU4sSUFBcUJDLE9BQU8sQ0FBQyxXQUFELENBQWxDOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsT0FBT0MsT0FBUCxFQUFnQkMsT0FBaEIsRUFBeUJDLFdBQXpCLEtBQXlDO0FBQ3RELFFBQU1DLEdBQUcsR0FBR1AsVUFBVSxDQUFDLFVBQUQsRUFBYVEsU0FBYixDQUF0QjtBQUVBLFFBQU1DLFVBQVUsR0FBR1YsRUFBRSxDQUFDVyxnQkFBSCxDQUFvQk4sT0FBcEIsQ0FBbkI7QUFDQSxRQUFNTyxNQUFNLEdBQUdKLEdBQUcsQ0FBQ0ssS0FBSixDQUFVO0FBQ3JCQyxJQUFBQSxPQUFPLEVBQUUsSUFEWTtBQUVyQkMsSUFBQUEsSUFBSSxFQUFFLElBRmU7QUFHckIsT0FBR1Q7QUFIa0IsR0FBVixDQUFmO0FBTUEsTUFBSVUscUJBQUosRUFBMkJDLE1BQTNCOztBQUVBLE1BQUlWLFdBQUosRUFBaUI7QUFDYixRQUFJVyxJQUFJLEdBQUcsQ0FBWDs7QUFDQUYsSUFBQUEscUJBQXFCLEdBQUcsQ0FBQ0csSUFBRCxFQUFPQyxRQUFQLEtBQW9CYixXQUFXLENBQUNZLElBQUQsRUFBT0QsSUFBSSxFQUFYLENBQVgsQ0FBMEJHLElBQTFCLENBQStCQyxNQUFNLElBQUlGLFFBQVEsQ0FBQyxJQUFELEVBQU9FLE1BQVAsQ0FBakQsRUFBaUVDLEtBQWpFLENBQXVFQyxLQUFLLElBQUlKLFFBQVEsQ0FBQ0ksS0FBRCxDQUF4RixDQUE1QztBQUNILEdBSEQsTUFHTztBQUNIUCxJQUFBQSxNQUFNLEdBQUcsRUFBVDtBQUNIOztBQUVELFNBQU8sSUFBSVEsT0FBSixDQUFZLENBQUNDLE9BQUQsRUFBVUMsTUFBVixLQUFxQjtBQUNwQyxRQUFJLENBQUNYLHFCQUFMLEVBQTRCO0FBQ3hCTixNQUFBQSxVQUFVLENBQUNrQixJQUFYLENBQWdCaEIsTUFBTSxDQUFDaUIsRUFBUCxDQUFVLE9BQVYsRUFBbUJGLE1BQW5CLEVBQTJCRSxFQUEzQixDQUE4QixNQUE5QixFQUF1Q0MsTUFBRCxJQUFZYixNQUFNLENBQUNjLElBQVAsQ0FBWUQsTUFBWixDQUFsRCxFQUF1RUQsRUFBdkUsQ0FBMEUsS0FBMUUsRUFBaUYsTUFBTUgsT0FBTyxDQUFDVCxNQUFELENBQTlGLENBQWhCO0FBQ0gsS0FGRCxNQUVPO0FBQ0hQLE1BQUFBLFVBQVUsQ0FBQ2tCLElBQVgsQ0FBZ0JoQixNQUFNLENBQUNvQixTQUFQLENBQWlCaEIscUJBQWpCLEVBQXdDYSxFQUF4QyxDQUEyQyxPQUEzQyxFQUFvREYsTUFBcEQsRUFBNERFLEVBQTVELENBQStELE1BQS9ELEVBQXVFSSxHQUFHLElBQUksQ0FBRSxDQUFoRixFQUFrRkosRUFBbEYsQ0FBcUYsS0FBckYsRUFBNEYsTUFBTUgsT0FBTyxFQUF6RyxDQUFoQjtBQUNIO0FBQ0osR0FOTSxDQUFQO0FBT0gsQ0ExQkQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGZzLCB0cnlSZXF1aXJlIH0gPSByZXF1aXJlKCdAZ2VueC9zeXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhc3luYyAoY3N2RmlsZSwgb3B0aW9ucywgdHJhbnNmb3JtZXIpID0+IHtcbiAgICBjb25zdCBjc3YgPSB0cnlSZXF1aXJlKCdmYXN0LWNzdicsIF9fZGlybmFtZSk7ICAgIFxuXG4gICAgY29uc3QgcmVhZFN0cmVhbSA9IGZzLmNyZWF0ZVJlYWRTdHJlYW0oY3N2RmlsZSk7XG4gICAgY29uc3QgcGFyc2VyID0gY3N2LnBhcnNlKHtcbiAgICAgICAgaGVhZGVyczogdHJ1ZSxcbiAgICAgICAgdHJpbTogdHJ1ZSxcbiAgICAgICAgLi4ub3B0aW9uc1xuICAgIH0pO1xuXG4gICAgbGV0IHRyYW5zZm9ybVdpdGhDYWxsYmFjaywgb3V0cHV0O1xuXG4gICAgaWYgKHRyYW5zZm9ybWVyKSB7XG4gICAgICAgIGxldCBsaW5lID0gMDtcbiAgICAgICAgdHJhbnNmb3JtV2l0aENhbGxiYWNrID0gKGRhdGEsIGNhbGxiYWNrKSA9PiB0cmFuc2Zvcm1lcihkYXRhLCBsaW5lKyspLnRoZW4ocmVzdWx0ID0+IGNhbGxiYWNrKG51bGwsIHJlc3VsdCkpLmNhdGNoKGVycm9yID0+IGNhbGxiYWNrKGVycm9yKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgb3V0cHV0ID0gW107XG4gICAgfSAgIFxuXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsgICAgICAgIFxuICAgICAgICBpZiAoIXRyYW5zZm9ybVdpdGhDYWxsYmFjaykge1xuICAgICAgICAgICAgcmVhZFN0cmVhbS5waXBlKHBhcnNlci5vbignZXJyb3InLCByZWplY3QpLm9uKCdkYXRhJywgKHJlY29yZCkgPT4gb3V0cHV0LnB1c2gocmVjb3JkKSkub24oJ2VuZCcsICgpID0+IHJlc29sdmUob3V0cHV0KSkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVhZFN0cmVhbS5waXBlKHBhcnNlci50cmFuc2Zvcm0odHJhbnNmb3JtV2l0aENhbGxiYWNrKS5vbignZXJyb3InLCByZWplY3QpLm9uKCdkYXRhJywgcm93ID0+IHt9KS5vbignZW5kJywgKCkgPT4gcmVzb2x2ZSgpKSk7XG4gICAgICAgIH0gICAgIFxuICAgIH0pOyAgICBcbn07XG4gICAgIl19