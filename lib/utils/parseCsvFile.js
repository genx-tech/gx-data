"use strict";

require("source-map-support/register");

const {
  fs,
  Promise
} = require('rk-utils');

const {
  tryRequire
} = require('./lib');

module.exports = async (csvFile, options, transformer) => {
  const csv = tryRequire('fast-csv');
  const readStream = fs.createReadStream(csvFile);
  const parseOptions = {
    headers: true,
    trim: true,
    ...options
  };
  let transformWithCallback, output;

  if (transformer) {
    transformWithCallback = (data, callback) => transformer(data, line++).then(result => callback(null, result)).catch(error => callback(error));
  } else {
    output = [];
  }

  return new Promise((resolve, reject) => {
    parser.on('error', reject);

    if (!transformWithCallback) {
      parser.on('data', record => {
        output.push(record);
      });
      parser.on('end', () => resolve(output));
      readStream.pipe(parser);
    } else {
      transformSteam.on('error', reject);
      transformSteam.on('finish', resolve);
      readStream.pipe(parser).pipe(transformSteam);
    }
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9wYXJzZUNzdkZpbGUuanMiXSwibmFtZXMiOlsiZnMiLCJQcm9taXNlIiwicmVxdWlyZSIsInRyeVJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiY3N2RmlsZSIsIm9wdGlvbnMiLCJ0cmFuc2Zvcm1lciIsImNzdiIsInJlYWRTdHJlYW0iLCJjcmVhdGVSZWFkU3RyZWFtIiwicGFyc2VPcHRpb25zIiwiaGVhZGVycyIsInRyaW0iLCJ0cmFuc2Zvcm1XaXRoQ2FsbGJhY2siLCJvdXRwdXQiLCJkYXRhIiwiY2FsbGJhY2siLCJsaW5lIiwidGhlbiIsInJlc3VsdCIsImNhdGNoIiwiZXJyb3IiLCJyZXNvbHZlIiwicmVqZWN0IiwicGFyc2VyIiwib24iLCJyZWNvcmQiLCJwdXNoIiwicGlwZSIsInRyYW5zZm9ybVN0ZWFtIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTTtBQUFFQSxFQUFBQSxFQUFGO0FBQU1DLEVBQUFBO0FBQU4sSUFBa0JDLE9BQU8sQ0FBQyxVQUFELENBQS9COztBQUNBLE1BQU07QUFBRUMsRUFBQUE7QUFBRixJQUFpQkQsT0FBTyxDQUFDLE9BQUQsQ0FBOUI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixPQUFPQyxPQUFQLEVBQWdCQyxPQUFoQixFQUF5QkMsV0FBekIsS0FBeUM7QUFDdEQsUUFBTUMsR0FBRyxHQUFHTixVQUFVLENBQUMsVUFBRCxDQUF0QjtBQUVBLFFBQU1PLFVBQVUsR0FBR1YsRUFBRSxDQUFDVyxnQkFBSCxDQUFvQkwsT0FBcEIsQ0FBbkI7QUFDQSxRQUFNTSxZQUFZLEdBQUc7QUFDakJDLElBQUFBLE9BQU8sRUFBRSxJQURRO0FBRWpCQyxJQUFBQSxJQUFJLEVBQUUsSUFGVztBQUdqQixPQUFHUDtBQUhjLEdBQXJCO0FBTUEsTUFBSVEscUJBQUosRUFBMkJDLE1BQTNCOztBQUVBLE1BQUlSLFdBQUosRUFBaUI7QUFDYk8sSUFBQUEscUJBQXFCLEdBQUcsQ0FBQ0UsSUFBRCxFQUFPQyxRQUFQLEtBQW9CVixXQUFXLENBQUNTLElBQUQsRUFBT0UsSUFBSSxFQUFYLENBQVgsQ0FBMEJDLElBQTFCLENBQStCQyxNQUFNLElBQUlILFFBQVEsQ0FBQyxJQUFELEVBQU9HLE1BQVAsQ0FBakQsRUFBaUVDLEtBQWpFLENBQXVFQyxLQUFLLElBQUlMLFFBQVEsQ0FBQ0ssS0FBRCxDQUF4RixDQUE1QztBQUNILEdBRkQsTUFFTztBQUNIUCxJQUFBQSxNQUFNLEdBQUcsRUFBVDtBQUNIOztBQUVELFNBQU8sSUFBSWYsT0FBSixDQUFZLENBQUN1QixPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFFcENDLElBQUFBLE1BQU0sQ0FBQ0MsRUFBUCxDQUFVLE9BQVYsRUFBbUJGLE1BQW5COztBQUVBLFFBQUksQ0FBQ1YscUJBQUwsRUFBNEI7QUFDeEJXLE1BQUFBLE1BQU0sQ0FBQ0MsRUFBUCxDQUFVLE1BQVYsRUFBbUJDLE1BQUQsSUFBWTtBQUMxQlosUUFBQUEsTUFBTSxDQUFDYSxJQUFQLENBQVlELE1BQVo7QUFDSCxPQUZEO0FBS0FGLE1BQUFBLE1BQU0sQ0FBQ0MsRUFBUCxDQUFVLEtBQVYsRUFBaUIsTUFBTUgsT0FBTyxDQUFDUixNQUFELENBQTlCO0FBRUFOLE1BQUFBLFVBQVUsQ0FBQ29CLElBQVgsQ0FBZ0JKLE1BQWhCO0FBQ0gsS0FURCxNQVNPO0FBQ0hLLE1BQUFBLGNBQWMsQ0FBQ0osRUFBZixDQUFrQixPQUFsQixFQUEyQkYsTUFBM0I7QUFDQU0sTUFBQUEsY0FBYyxDQUFDSixFQUFmLENBQWtCLFFBQWxCLEVBQTRCSCxPQUE1QjtBQUVBZCxNQUFBQSxVQUFVLENBQUNvQixJQUFYLENBQWdCSixNQUFoQixFQUF3QkksSUFBeEIsQ0FBNkJDLGNBQTdCO0FBQ0g7QUFDSixHQW5CTSxDQUFQO0FBb0JILENBdENEIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBmcywgUHJvbWlzZSB9ID0gcmVxdWlyZSgncmstdXRpbHMnKTtcbmNvbnN0IHsgdHJ5UmVxdWlyZSB9ID0gcmVxdWlyZSgnLi9saWInKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhc3luYyAoY3N2RmlsZSwgb3B0aW9ucywgdHJhbnNmb3JtZXIpID0+IHtcbiAgICBjb25zdCBjc3YgPSB0cnlSZXF1aXJlKCdmYXN0LWNzdicpOyAgICBcblxuICAgIGNvbnN0IHJlYWRTdHJlYW0gPSBmcy5jcmVhdGVSZWFkU3RyZWFtKGNzdkZpbGUpO1xuICAgIGNvbnN0IHBhcnNlT3B0aW9ucyA9IHtcbiAgICAgICAgaGVhZGVyczogdHJ1ZSxcbiAgICAgICAgdHJpbTogdHJ1ZSxcbiAgICAgICAgLi4ub3B0aW9uc1xuICAgIH07XG5cbiAgICBsZXQgdHJhbnNmb3JtV2l0aENhbGxiYWNrLCBvdXRwdXQ7XG5cbiAgICBpZiAodHJhbnNmb3JtZXIpIHtcbiAgICAgICAgdHJhbnNmb3JtV2l0aENhbGxiYWNrID0gKGRhdGEsIGNhbGxiYWNrKSA9PiB0cmFuc2Zvcm1lcihkYXRhLCBsaW5lKyspLnRoZW4ocmVzdWx0ID0+IGNhbGxiYWNrKG51bGwsIHJlc3VsdCkpLmNhdGNoKGVycm9yID0+IGNhbGxiYWNrKGVycm9yKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgb3V0cHV0ID0gW107XG4gICAgfSAgIFxuXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgLy8gQ2F0Y2ggYW55IGVycm9yXG4gICAgICAgIHBhcnNlci5vbignZXJyb3InLCByZWplY3QpOyBcblxuICAgICAgICBpZiAoIXRyYW5zZm9ybVdpdGhDYWxsYmFjaykge1xuICAgICAgICAgICAgcGFyc2VyLm9uKCdkYXRhJywgKHJlY29yZCkgPT4geyAgIFxuICAgICAgICAgICAgICAgIG91dHB1dC5wdXNoKHJlY29yZCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgZG9uZSwgdGVzdCB0aGF0IHRoZSBwYXJzZWQgb3V0cHV0IG1hdGNoZWQgd2hhdCBleHBlY3RlZFxuICAgICAgICAgICAgcGFyc2VyLm9uKCdlbmQnLCAoKSA9PiByZXNvbHZlKG91dHB1dCkpO1xuXG4gICAgICAgICAgICByZWFkU3RyZWFtLnBpcGUocGFyc2VyKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybVN0ZWFtLm9uKCdlcnJvcicsIHJlamVjdCk7XG4gICAgICAgICAgICB0cmFuc2Zvcm1TdGVhbS5vbignZmluaXNoJywgcmVzb2x2ZSk7XG5cbiAgICAgICAgICAgIHJlYWRTdHJlYW0ucGlwZShwYXJzZXIpLnBpcGUodHJhbnNmb3JtU3RlYW0pO1xuICAgICAgICB9ICAgICBcbiAgICB9KTsgICAgXG59O1xuICAgICJdfQ==