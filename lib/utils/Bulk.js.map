{"version":3,"file":"Bulk.js","names":["waitUntil_","require","Bulk","constructor","limit","bulkAction","total","itemsTotal","itemsPending","itemsDone","itemsError","_buffer","batch","flush","length","bulkItems","concat","l","Promise","resolve","then","onProgress","catch","error","onError","add","item","push","waitToEnd_","interval","maxRounds","module","exports"],"sources":["../../src/utils/Bulk.js"],"sourcesContent":["const { waitUntil_ } = require('@genx/july');\n\nclass Bulk {\n    constructor(limit, bulkAction, total) {\n        this.limit = limit;\n        this.itemsTotal = total;\n        this.bulkAction = bulkAction;\n\n        this.itemsPending = 0;\n        this.itemsDone = 0;\n        this.itemsError = 0;\n        this._buffer = [];\n        this.batch = 0;\n    }\n\n    flush() {\n        if (this._buffer.length > 0) {\n            const bulkItems = this._buffer.concat();\n            this._buffer = [];\n\n            const l = bulkItems.length;\n            this.itemsPending += l;\n\n            Promise.resolve(this.bulkAction(bulkItems, this.batch++))\n                .then(async () => {\n                    this.itemsDone += l;\n\n                    if (this.onProgress) {\n                        this.onProgress(\n                            this.itemsPending,\n                            this.itemsDone,\n                            this.itemsTotal\n                        );\n                    }\n                })\n                .catch((error) => {\n                    this.itemsDone += l;\n                    this.itemsError += l;\n\n                    if (this.onError) {\n                        this.onError(error, this.itemsError);\n                    }\n                });\n        }\n    }\n\n    add(item) {\n        this._buffer.push(item);\n\n        if (this._buffer.length >= this.limit) {\n            this.flush();\n        }\n    }\n\n    async waitToEnd_(interval, maxRounds) {\n        this.flush();\n        return waitUntil_(\n            () => this.itemsDone >= this.itemsPending,\n            interval,\n            maxRounds\n        );\n    }\n}\n\nmodule.exports = Bulk;\n"],"mappings":";;;AAAA,MAAM;EAAEA;AAAW,CAAC,GAAGC,OAAO,CAAC,YAAY,CAAC;AAE5C,MAAMC,IAAI,CAAC;EACPC,WAAWA,CAACC,KAAK,EAAEC,UAAU,EAAEC,KAAK,EAAE;IAClC,IAAI,CAACF,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACG,UAAU,GAAGD,KAAK;IACvB,IAAI,CAACD,UAAU,GAAGA,UAAU;IAE5B,IAAI,CAACG,YAAY,GAAG,CAAC;IACrB,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,KAAK,GAAG,CAAC;EAClB;EAEAC,KAAKA,CAAA,EAAG;IACJ,IAAI,IAAI,CAACF,OAAO,CAACG,MAAM,GAAG,CAAC,EAAE;MACzB,MAAMC,SAAS,GAAG,IAAI,CAACJ,OAAO,CAACK,MAAM,EAAE;MACvC,IAAI,CAACL,OAAO,GAAG,EAAE;MAEjB,MAAMM,CAAC,GAAGF,SAAS,CAACD,MAAM;MAC1B,IAAI,CAACN,YAAY,IAAIS,CAAC;MAEtBC,OAAO,CAACC,OAAO,CAAC,IAAI,CAACd,UAAU,CAACU,SAAS,EAAE,IAAI,CAACH,KAAK,EAAE,CAAC,CAAC,CACpDQ,IAAI,CAAC,YAAY;QACd,IAAI,CAACX,SAAS,IAAIQ,CAAC;QAEnB,IAAI,IAAI,CAACI,UAAU,EAAE;UACjB,IAAI,CAACA,UAAU,CACX,IAAI,CAACb,YAAY,EACjB,IAAI,CAACC,SAAS,EACd,IAAI,CAACF,UAAU,CAClB;QACL;MACJ,CAAC,CAAC,CACDe,KAAK,CAAEC,KAAK,IAAK;QACd,IAAI,CAACd,SAAS,IAAIQ,CAAC;QACnB,IAAI,CAACP,UAAU,IAAIO,CAAC;QAEpB,IAAI,IAAI,CAACO,OAAO,EAAE;UACd,IAAI,CAACA,OAAO,CAACD,KAAK,EAAE,IAAI,CAACb,UAAU,CAAC;QACxC;MACJ,CAAC,CAAC;IACV;EACJ;EAEAe,GAAGA,CAACC,IAAI,EAAE;IACN,IAAI,CAACf,OAAO,CAACgB,IAAI,CAACD,IAAI,CAAC;IAEvB,IAAI,IAAI,CAACf,OAAO,CAACG,MAAM,IAAI,IAAI,CAACV,KAAK,EAAE;MACnC,IAAI,CAACS,KAAK,EAAE;IAChB;EACJ;EAEA,MAAMe,UAAUA,CAACC,QAAQ,EAAEC,SAAS,EAAE;IAClC,IAAI,CAACjB,KAAK,EAAE;IACZ,OAAOb,UAAU,CACb,MAAM,IAAI,CAACS,SAAS,IAAI,IAAI,CAACD,YAAY,EACzCqB,QAAQ,EACRC,SAAS,CACZ;EACL;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAG9B,IAAI"}