{"version":3,"file":"Bulk.js","names":["waitUntil_","require","Bulk","constructor","limit","bulkAction","total","itemsTotal","itemsPending","itemsDone","itemsError","_buffer","batch","flush","length","bulkItems","concat","l","Promise","resolve","then","onProgress","catch","error","onError","add","item","push","waitToEnd_","interval","maxRounds","module","exports"],"sources":["../../src/utils/Bulk.js"],"sourcesContent":["const { waitUntil_ } = require('@genx/july');\n\nclass Bulk {\n    constructor(limit, bulkAction, total) {\n        this.limit = limit;\n        this.itemsTotal = total;\n        this.bulkAction = bulkAction;\n\n        this.itemsPending = 0;\n        this.itemsDone = 0;\n        this.itemsError = 0;\n        this._buffer = [];\n        this.batch = 0;\n    }\n\n    flush() {\n        if (this._buffer.length > 0) {\n            const bulkItems = this._buffer.concat();\n            this._buffer = [];\n\n            const l = bulkItems.length;\n            this.itemsPending += l;\n\n            Promise.resolve(this.bulkAction(bulkItems, this.batch++))\n                .then(async () => {\n                    this.itemsDone += l;\n\n                    if (this.onProgress) {\n                        this.onProgress(\n                            this.itemsPending,\n                            this.itemsDone,\n                            this.itemsTotal\n                        );\n                    }\n                })\n                .catch((error) => {\n                    this.itemsDone += l;\n                    this.itemsError += l;\n\n                    if (this.onError) {\n                        this.onError(error, this.itemsError);\n                    }\n                });\n        }\n    }\n\n    add(item) {\n        this._buffer.push(item);\n\n        if (this._buffer.length >= this.limit) {\n            this.flush();\n        }\n    }\n\n    async waitToEnd_(interval, maxRounds) {\n        this.flush();\n        return waitUntil_(\n            () => this.itemsDone >= this.itemsPending,\n            interval,\n            maxRounds\n        );\n    }\n}\n\nmodule.exports = Bulk;\n"],"mappings":";;;;AAAA,MAAM;EAAEA;AAAF,IAAiBC,OAAO,CAAC,YAAD,CAA9B;;AAEA,MAAMC,IAAN,CAAW;EACPC,WAAW,CAACC,KAAD,EAAQC,UAAR,EAAoBC,KAApB,EAA2B;IAClC,KAAKF,KAAL,GAAaA,KAAb;IACA,KAAKG,UAAL,GAAkBD,KAAlB;IACA,KAAKD,UAAL,GAAkBA,UAAlB;IAEA,KAAKG,YAAL,GAAoB,CAApB;IACA,KAAKC,SAAL,GAAiB,CAAjB;IACA,KAAKC,UAAL,GAAkB,CAAlB;IACA,KAAKC,OAAL,GAAe,EAAf;IACA,KAAKC,KAAL,GAAa,CAAb;EACH;;EAEDC,KAAK,GAAG;IACJ,IAAI,KAAKF,OAAL,CAAaG,MAAb,GAAsB,CAA1B,EAA6B;MACzB,MAAMC,SAAS,GAAG,KAAKJ,OAAL,CAAaK,MAAb,EAAlB;;MACA,KAAKL,OAAL,GAAe,EAAf;MAEA,MAAMM,CAAC,GAAGF,SAAS,CAACD,MAApB;MACA,KAAKN,YAAL,IAAqBS,CAArB;MAEAC,OAAO,CAACC,OAAR,CAAgB,KAAKd,UAAL,CAAgBU,SAAhB,EAA2B,KAAKH,KAAL,EAA3B,CAAhB,EACKQ,IADL,CACU,YAAY;QACd,KAAKX,SAAL,IAAkBQ,CAAlB;;QAEA,IAAI,KAAKI,UAAT,EAAqB;UACjB,KAAKA,UAAL,CACI,KAAKb,YADT,EAEI,KAAKC,SAFT,EAGI,KAAKF,UAHT;QAKH;MACJ,CAXL,EAYKe,KAZL,CAYYC,KAAD,IAAW;QACd,KAAKd,SAAL,IAAkBQ,CAAlB;QACA,KAAKP,UAAL,IAAmBO,CAAnB;;QAEA,IAAI,KAAKO,OAAT,EAAkB;UACd,KAAKA,OAAL,CAAaD,KAAb,EAAoB,KAAKb,UAAzB;QACH;MACJ,CAnBL;IAoBH;EACJ;;EAEDe,GAAG,CAACC,IAAD,EAAO;IACN,KAAKf,OAAL,CAAagB,IAAb,CAAkBD,IAAlB;;IAEA,IAAI,KAAKf,OAAL,CAAaG,MAAb,IAAuB,KAAKV,KAAhC,EAAuC;MACnC,KAAKS,KAAL;IACH;EACJ;;EAEe,MAAVe,UAAU,CAACC,QAAD,EAAWC,SAAX,EAAsB;IAClC,KAAKjB,KAAL;IACA,OAAOb,UAAU,CACb,MAAM,KAAKS,SAAL,IAAkB,KAAKD,YADhB,EAEbqB,QAFa,EAGbC,SAHa,CAAjB;EAKH;;AA3DM;;AA8DXC,MAAM,CAACC,OAAP,GAAiB9B,IAAjB"}