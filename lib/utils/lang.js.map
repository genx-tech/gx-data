{"version":3,"file":"lang.js","names":["_","require","SupportedDrivers","JsPrimitiveTypes","Set","mergeCondition","condition1","condition2","operator","isEmpty","exports","isNothing","v","isNil","isNaN","isPrimitive","has","isQuoted","s","startsWith","length","isQuotedWith","q","makeDataSourceName","driver","schema","extractDriverAndConnectorName","id","split","Object","freeze","$col","name","oorType","$expr","left","op","right","$raw","statement","$query","query","$f","args","$inc","field","increment","$dec","decrement","$dataSet","model","$sql","sql","$func","$increase","$decrease","$select","hasValueIn","arrayOfColl","key","find","coll","getValueFrom","l","i","value","undefined","mapFilterReducerArray","predicate","mapper","result","push","mapFilterReducerObject","mapFilter","collection","Array","isArray","reduce"],"sources":["../../src/utils/lang.js"],"sourcesContent":["const { _ } = require('@genx/july');\n\nconst SupportedDrivers = ['mysql', 'mongodb', 'rabbitmq'];\nconst JsPrimitiveTypes = new Set([\n    'number',\n    'boolean',\n    'string',\n    'symbol',\n    'undefined',\n]);\n\n/**\n * Merge two query conditions using given operator.\n * @param {*} condition1\n * @param {*} condition2\n * @param {*} operator\n * @returns {object}\n */\nfunction mergeCondition(condition1, condition2, operator = '$and') {\n    if (_.isEmpty(condition1)) {\n        return condition2;\n    }\n\n    if (_.isEmpty(condition2)) {\n        return condition1;\n    }\n\n    return { [operator]: [condition1, condition2] };\n}\n\nexports.isNothing = (v) => _.isNil(v) || _.isNaN(v);\nexports.isPrimitive = (v) => JsPrimitiveTypes.has(typeof v);\nexports.isQuoted = (s) =>\n    (s.startsWith(\"'\") || s.startsWith('\"')) && s[0] === s[s.length - 1];\nexports.isQuotedWith = (s, q) => s.startsWith(q) && s[0] === s[s.length - 1];\nexports.makeDataSourceName = (driver, schema) => driver + '.' + schema;\nexports.extractDriverAndConnectorName = (id) => id.split('.');\nexports.mergeCondition = mergeCondition;\nexports.SupportedDrivers = Object.freeze(SupportedDrivers);\n\nconst $col = (name) => ({ oorType: 'ColumnReference', name });\nconst $expr = (left, op, right) => ({\n    oorType: 'BinaryExpression',\n    left,\n    op,\n    right,\n});\nconst $raw = (statement) => ({\n    oorType: 'Raw',\n    statement,\n});\nconst $query = (query) => ({\n    oorType: 'Query',\n    query,\n});\nconst $f = (name, ...args) => ({ oorType: 'Function', name, args });\nconst $inc = (field, increment) => $expr($col(field), '+', increment);\nconst $dec = (field, decrement) => $expr($col(field), '-', decrement);\nconst $dataSet = (model, query) => ({ oorType: 'DataSet', model, query });\nconst $sql = (sql) => ({ oorType: 'SQL', sql });\n\nexports.$col = $col;\nexports.$raw = $raw;\nexports.$query = $query;\nexports.$expr = $expr;\nexports.$f = $f;\nexports.$func = $f;\nexports.$inc = $inc;\nexports.$dec = $dec;\nexports.$increase = $inc;\nexports.$decrease = $dec;\nexports.$dataSet = $dataSet;\nexports.$select = $dataSet;\nexports.$sql = $sql;\n\nexports.hasValueIn = (arrayOfColl, key) =>\n    _.find(arrayOfColl, (coll) => coll[key] != null);\nexports.getValueFrom = (arrayOfColl, key) => {\n    const l = arrayOfColl.length;\n    for (let i = 0; i < l; i++) {\n        const coll = arrayOfColl[i];\n        const value = coll && coll[key];\n        if (value != null) return value;\n    }\n    return undefined;\n};\n\nconst mapFilterReducerArray = (predicate, mapper) => (result, value) => {\n    if (predicate(value)) {\n        result.push(mapper(value));\n    }\n    return result;\n};\n\nconst mapFilterReducerObject = (predicate, mapper) => (result, value, key) => {\n    if (predicate(value)) {\n        result[key] = mapper(value);\n    }\n    return result;\n};\n\n/**\n * @param {object} collection\n * @param {function} predicate\n * @param {function} mapper\n */\nexports.mapFilter = (collection, predicate, mapper) =>\n    Array.isArray(collection)\n        ? _.reduce(collection, mapFilterReducerArray(predicate, mapper), [])\n        : _.reduce(collection, mapFilterReducerObject(predicate, mapper), {});\n"],"mappings":"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"}