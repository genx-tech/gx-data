{"version":3,"file":"lang.js","names":["_","require","SupportedDrivers","JsPrimitiveTypes","Set","mergeCondition","condition1","condition2","operator","isEmpty","exports","isNothing","v","isNil","isNaN","isPrimitive","has","isQuoted","s","startsWith","length","isQuotedWith","q","makeDataSourceName","driver","schema","extractDriverAndConnectorName","id","split","Object","freeze","$col","name","oorType","$expr","left","op","right","$raw","statement","$query","query","$f","args","$inc","field","increment","$dec","decrement","$dataSet","model","$sql","sql","$func","$increase","$decrease","$select","hasValueIn","arrayOfColl","key","find","coll","getValueFrom","l","i","value","undefined","mapFilterReducerArray","predicate","mapper","result","push","mapFilterReducerObject","mapFilter","collection","Array","isArray","reduce"],"sources":["../../src/utils/lang.js"],"sourcesContent":["const { _ } = require('@genx/july');\n\nconst SupportedDrivers = ['mysql', 'mongodb', 'rabbitmq'];\nconst JsPrimitiveTypes = new Set([\n    'number',\n    'boolean',\n    'string',\n    'symbol',\n    'undefined',\n]);\n\n/**\n * Merge two query conditions using given operator.\n * @param {*} condition1\n * @param {*} condition2\n * @param {*} operator\n * @returns {object}\n */\nfunction mergeCondition(condition1, condition2, operator = '$and') {\n    if (_.isEmpty(condition1)) {\n        return condition2;\n    }\n\n    if (_.isEmpty(condition2)) {\n        return condition1;\n    }\n\n    return { [operator]: [condition1, condition2] };\n}\n\nexports.isNothing = (v) => _.isNil(v) || _.isNaN(v);\nexports.isPrimitive = (v) => JsPrimitiveTypes.has(typeof v);\nexports.isQuoted = (s) =>\n    (s.startsWith(\"'\") || s.startsWith('\"')) && s[0] === s[s.length - 1];\nexports.isQuotedWith = (s, q) => s.startsWith(q) && s[0] === s[s.length - 1];\nexports.makeDataSourceName = (driver, schema) => driver + '.' + schema;\nexports.extractDriverAndConnectorName = (id) => id.split('.');\nexports.mergeCondition = mergeCondition;\nexports.SupportedDrivers = Object.freeze(SupportedDrivers);\n\nconst $col = (name) => ({ oorType: 'ColumnReference', name });\nconst $expr = (left, op, right) => ({\n    oorType: 'BinaryExpression',\n    left,\n    op,\n    right,\n});\nconst $raw = (statement) => ({\n    oorType: 'Raw',\n    statement,\n});\nconst $query = (query) => ({\n    oorType: 'Query',\n    query,\n});\nconst $f = (name, ...args) => ({ oorType: 'Function', name, args });\nconst $inc = (field, increment) => $expr($col(field), '+', increment);\nconst $dec = (field, decrement) => $expr($col(field), '-', decrement);\nconst $dataSet = (model, query) => ({ oorType: 'DataSet', model, query });\nconst $sql = (sql) => ({ oorType: 'SQL', sql });\n\nexports.$col = $col;\nexports.$raw = $raw;\nexports.$query = $query;\nexports.$expr = $expr;\nexports.$f = $f;\nexports.$func = $f;\nexports.$inc = $inc;\nexports.$dec = $dec;\nexports.$increase = $inc;\nexports.$decrease = $dec;\nexports.$dataSet = $dataSet;\nexports.$select = $dataSet;\nexports.$sql = $sql;\n\nexports.hasValueIn = (arrayOfColl, key) =>\n    _.find(arrayOfColl, (coll) => coll[key] != null);\nexports.getValueFrom = (arrayOfColl, key) => {\n    const l = arrayOfColl.length;\n    for (let i = 0; i < l; i++) {\n        const coll = arrayOfColl[i];\n        const value = coll && coll[key];\n        if (value != null) return value;\n    }\n    return undefined;\n};\n\nconst mapFilterReducerArray = (predicate, mapper) => (result, value) => {\n    if (predicate(value)) {\n        result.push(mapper(value));\n    }\n    return result;\n};\n\nconst mapFilterReducerObject = (predicate, mapper) => (result, value, key) => {\n    if (predicate(value)) {\n        result[key] = mapper(value);\n    }\n    return result;\n};\n\n/**\n * @param {object} collection\n * @param {function} predicate\n * @param {function} mapper\n */\nexports.mapFilter = (collection, predicate, mapper) =>\n    Array.isArray(collection)\n        ? _.reduce(collection, mapFilterReducerArray(predicate, mapper), [])\n        : _.reduce(collection, mapFilterReducerObject(predicate, mapper), {});\n"],"mappings":"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"}