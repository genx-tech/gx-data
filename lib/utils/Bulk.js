"use strict";

require("source-map-support/register");

const {
  waitUntil_
} = require('@genx/july');

class Bulk {
  constructor(limit, bulkAction, total) {
    this.limit = limit;
    this.itemsTotal = total;
    this.bulkAction = bulkAction;
    this.itemsPending = 0;
    this.itemsDone = 0;
    this.itemsError = 0;
    this._buffer = [];
    this.batch = 0;
  }

  flush() {
    if (this._buffer.length > 0) {
      let bulkItems = this._buffer.concat();

      this._buffer = [];
      let l = bulkItems.length;
      this.itemsPending += l;
      Promise.resolve(this.bulkAction(bulkItems, this.batch++)).then(async () => {
        this.itemsDone += l;

        if (this.onProgress) {
          this.onProgress(this.itemsPending, this.itemsDone, this.itemsTotal);
        }
      }).catch(error => {
        this.itemsDone += l;
        this.itemsError += l;

        if (this.onError) {
          this.onError(error, this.itemsError);
        }
      });
    }
  }

  add(item) {
    this._buffer.push(item);

    if (this._buffer.length >= this.limit) {
      this.flush();
    }
  }

  async waitToEnd_(interval, maxRounds) {
    this.flush();
    return waitUntil_(() => this.itemsDone >= this.itemsPending, interval, maxRounds);
  }

}

module.exports = Bulk;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9CdWxrLmpzIl0sIm5hbWVzIjpbIndhaXRVbnRpbF8iLCJyZXF1aXJlIiwiQnVsayIsImNvbnN0cnVjdG9yIiwibGltaXQiLCJidWxrQWN0aW9uIiwidG90YWwiLCJpdGVtc1RvdGFsIiwiaXRlbXNQZW5kaW5nIiwiaXRlbXNEb25lIiwiaXRlbXNFcnJvciIsIl9idWZmZXIiLCJiYXRjaCIsImZsdXNoIiwibGVuZ3RoIiwiYnVsa0l0ZW1zIiwiY29uY2F0IiwibCIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsIm9uUHJvZ3Jlc3MiLCJjYXRjaCIsImVycm9yIiwib25FcnJvciIsImFkZCIsIml0ZW0iLCJwdXNoIiwid2FpdFRvRW5kXyIsImludGVydmFsIiwibWF4Um91bmRzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFpQkMsT0FBTyxDQUFDLFlBQUQsQ0FBOUI7O0FBRUEsTUFBTUMsSUFBTixDQUFXO0FBQ1BDLEVBQUFBLFdBQVcsQ0FBQ0MsS0FBRCxFQUFRQyxVQUFSLEVBQW9CQyxLQUFwQixFQUEyQjtBQUNsQyxTQUFLRixLQUFMLEdBQWFBLEtBQWI7QUFDQSxTQUFLRyxVQUFMLEdBQWtCRCxLQUFsQjtBQUNBLFNBQUtELFVBQUwsR0FBa0JBLFVBQWxCO0FBRUEsU0FBS0csWUFBTCxHQUFvQixDQUFwQjtBQUNBLFNBQUtDLFNBQUwsR0FBaUIsQ0FBakI7QUFDQSxTQUFLQyxVQUFMLEdBQWtCLENBQWxCO0FBQ0EsU0FBS0MsT0FBTCxHQUFlLEVBQWY7QUFDQSxTQUFLQyxLQUFMLEdBQWEsQ0FBYjtBQUNIOztBQUVEQyxFQUFBQSxLQUFLLEdBQUc7QUFDSixRQUFJLEtBQUtGLE9BQUwsQ0FBYUcsTUFBYixHQUFzQixDQUExQixFQUE2QjtBQUN6QixVQUFJQyxTQUFTLEdBQUcsS0FBS0osT0FBTCxDQUFhSyxNQUFiLEVBQWhCOztBQUNBLFdBQUtMLE9BQUwsR0FBZSxFQUFmO0FBRUEsVUFBSU0sQ0FBQyxHQUFHRixTQUFTLENBQUNELE1BQWxCO0FBQ0EsV0FBS04sWUFBTCxJQUFxQlMsQ0FBckI7QUFFQUMsTUFBQUEsT0FBTyxDQUFDQyxPQUFSLENBQWdCLEtBQUtkLFVBQUwsQ0FBZ0JVLFNBQWhCLEVBQTJCLEtBQUtILEtBQUwsRUFBM0IsQ0FBaEIsRUFBMERRLElBQTFELENBQStELFlBQVk7QUFDdkUsYUFBS1gsU0FBTCxJQUFrQlEsQ0FBbEI7O0FBRUEsWUFBSSxLQUFLSSxVQUFULEVBQXFCO0FBQ2pCLGVBQUtBLFVBQUwsQ0FBZ0IsS0FBS2IsWUFBckIsRUFBbUMsS0FBS0MsU0FBeEMsRUFBbUQsS0FBS0YsVUFBeEQ7QUFDSDtBQUNKLE9BTkQsRUFNR2UsS0FOSCxDQU1TQyxLQUFLLElBQUk7QUFDZCxhQUFLZCxTQUFMLElBQWtCUSxDQUFsQjtBQUNBLGFBQUtQLFVBQUwsSUFBbUJPLENBQW5COztBQUVBLFlBQUksS0FBS08sT0FBVCxFQUFrQjtBQUNkLGVBQUtBLE9BQUwsQ0FBYUQsS0FBYixFQUFvQixLQUFLYixVQUF6QjtBQUNIO0FBQ0osT0FiRDtBQWNIO0FBQ0o7O0FBRURlLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBRCxFQUFPO0FBQ04sU0FBS2YsT0FBTCxDQUFhZ0IsSUFBYixDQUFrQkQsSUFBbEI7O0FBRUEsUUFBSSxLQUFLZixPQUFMLENBQWFHLE1BQWIsSUFBdUIsS0FBS1YsS0FBaEMsRUFBdUM7QUFDbkMsV0FBS1MsS0FBTDtBQUNIO0FBQ0o7O0FBRUQsUUFBTWUsVUFBTixDQUFpQkMsUUFBakIsRUFBMkJDLFNBQTNCLEVBQXNDO0FBQ2xDLFNBQUtqQixLQUFMO0FBQ0EsV0FBT2IsVUFBVSxDQUFDLE1BQU0sS0FBS1MsU0FBTCxJQUFrQixLQUFLRCxZQUE5QixFQUE0Q3FCLFFBQTVDLEVBQXNEQyxTQUF0RCxDQUFqQjtBQUNIOztBQWpETTs7QUFvRFhDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjlCLElBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyB3YWl0VW50aWxfIH0gPSByZXF1aXJlKCdAZ2VueC9qdWx5Jyk7XG5cbmNsYXNzIEJ1bGsge1xuICAgIGNvbnN0cnVjdG9yKGxpbWl0LCBidWxrQWN0aW9uLCB0b3RhbCkge1xuICAgICAgICB0aGlzLmxpbWl0ID0gbGltaXQ7IFxuICAgICAgICB0aGlzLml0ZW1zVG90YWwgPSB0b3RhbDtcbiAgICAgICAgdGhpcy5idWxrQWN0aW9uID0gYnVsa0FjdGlvbjtcblxuICAgICAgICB0aGlzLml0ZW1zUGVuZGluZyA9IDA7XG4gICAgICAgIHRoaXMuaXRlbXNEb25lID0gMDtcbiAgICAgICAgdGhpcy5pdGVtc0Vycm9yID0gMDtcbiAgICAgICAgdGhpcy5fYnVmZmVyID0gW107ICBcbiAgICAgICAgdGhpcy5iYXRjaCA9IDA7ICAgICAgICAgICAgXG4gICAgfVxuXG4gICAgZmx1c2goKSB7ICAgICAgICBcbiAgICAgICAgaWYgKHRoaXMuX2J1ZmZlci5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBsZXQgYnVsa0l0ZW1zID0gdGhpcy5fYnVmZmVyLmNvbmNhdCgpO1xuICAgICAgICAgICAgdGhpcy5fYnVmZmVyID0gW107XG5cbiAgICAgICAgICAgIGxldCBsID0gYnVsa0l0ZW1zLmxlbmd0aDtcbiAgICAgICAgICAgIHRoaXMuaXRlbXNQZW5kaW5nICs9IGw7XG5cbiAgICAgICAgICAgIFByb21pc2UucmVzb2x2ZSh0aGlzLmJ1bGtBY3Rpb24oYnVsa0l0ZW1zLCB0aGlzLmJhdGNoKyspKS50aGVuKGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLml0ZW1zRG9uZSArPSBsO1xuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub25Qcm9ncmVzcykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uUHJvZ3Jlc3ModGhpcy5pdGVtc1BlbmRpbmcsIHRoaXMuaXRlbXNEb25lLCB0aGlzLml0ZW1zVG90YWwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLml0ZW1zRG9uZSArPSBsO1xuICAgICAgICAgICAgICAgIHRoaXMuaXRlbXNFcnJvciArPSBsO1xuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub25FcnJvcikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uRXJyb3IoZXJyb3IsIHRoaXMuaXRlbXNFcnJvcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhZGQoaXRlbSkge1xuICAgICAgICB0aGlzLl9idWZmZXIucHVzaChpdGVtKTtcblxuICAgICAgICBpZiAodGhpcy5fYnVmZmVyLmxlbmd0aCA+PSB0aGlzLmxpbWl0KSB7XG4gICAgICAgICAgICB0aGlzLmZsdXNoKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhc3luYyB3YWl0VG9FbmRfKGludGVydmFsLCBtYXhSb3VuZHMpIHtcbiAgICAgICAgdGhpcy5mbHVzaCgpO1xuICAgICAgICByZXR1cm4gd2FpdFVudGlsXygoKSA9PiB0aGlzLml0ZW1zRG9uZSA+PSB0aGlzLml0ZW1zUGVuZGluZywgaW50ZXJ2YWwsIG1heFJvdW5kcyk7XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJ1bGs7Il19