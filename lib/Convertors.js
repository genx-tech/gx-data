"use strict";

require("source-map-support/register");

const validator = require('validator');

const {
  _
} = require('rk-utils');

exports.toBoolean = value => typeof value === 'boolean' ? value : validator.toBoolean(value, true);

exports.toText = value => value && (typeof value !== 'string' ? value.toString() : value).trim();

exports.toInt = (value, radix) => _.isInteger(value) ? value : parseInt(value, radix);

exports.toFloat = value => _.isFinite(value) ? value : validator.toFloat(value);

exports.jsonToBase64 = obj => Buffer.from(JSON.stringify(obj)).toString("base64");

exports.base64ToJson = base64 => JSON.parse(Buffer.from(base64, 'base64').toString('ascii'));

exports.textToDate = require('date-fns/parse');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Db252ZXJ0b3JzLmpzIl0sIm5hbWVzIjpbInZhbGlkYXRvciIsInJlcXVpcmUiLCJfIiwiZXhwb3J0cyIsInRvQm9vbGVhbiIsInZhbHVlIiwidG9UZXh0IiwidG9TdHJpbmciLCJ0cmltIiwidG9JbnQiLCJyYWRpeCIsImlzSW50ZWdlciIsInBhcnNlSW50IiwidG9GbG9hdCIsImlzRmluaXRlIiwianNvblRvQmFzZTY0Iiwib2JqIiwiQnVmZmVyIiwiZnJvbSIsIkpTT04iLCJzdHJpbmdpZnkiLCJiYXNlNjRUb0pzb24iLCJiYXNlNjQiLCJwYXJzZSIsInRleHRUb0RhdGUiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUEsTUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBUUQsT0FBTyxDQUFDLFVBQUQsQ0FBckI7O0FBRUFFLE9BQU8sQ0FBQ0MsU0FBUixHQUFxQkMsS0FBRCxJQUFXLE9BQU9BLEtBQVAsS0FBaUIsU0FBakIsR0FBNkJBLEtBQTdCLEdBQXFDTCxTQUFTLENBQUNJLFNBQVYsQ0FBb0JDLEtBQXBCLEVBQTJCLElBQTNCLENBQXBFOztBQUVBRixPQUFPLENBQUNHLE1BQVIsR0FBa0JELEtBQUQsSUFBV0EsS0FBSyxJQUFJLENBQUMsT0FBT0EsS0FBUCxLQUFpQixRQUFqQixHQUE0QkEsS0FBSyxDQUFDRSxRQUFOLEVBQTVCLEdBQStDRixLQUFoRCxFQUF1REcsSUFBdkQsRUFBckM7O0FBRUFMLE9BQU8sQ0FBQ00sS0FBUixHQUFnQixDQUFDSixLQUFELEVBQVFLLEtBQVIsS0FBa0JSLENBQUMsQ0FBQ1MsU0FBRixDQUFZTixLQUFaLElBQXFCQSxLQUFyQixHQUE2Qk8sUUFBUSxDQUFDUCxLQUFELEVBQVFLLEtBQVIsQ0FBdkU7O0FBRUFQLE9BQU8sQ0FBQ1UsT0FBUixHQUFtQlIsS0FBRCxJQUFXSCxDQUFDLENBQUNZLFFBQUYsQ0FBV1QsS0FBWCxJQUFvQkEsS0FBcEIsR0FBNEJMLFNBQVMsQ0FBQ2EsT0FBVixDQUFrQlIsS0FBbEIsQ0FBekQ7O0FBRUFGLE9BQU8sQ0FBQ1ksWUFBUixHQUF3QkMsR0FBRCxJQUFTQyxNQUFNLENBQUNDLElBQVAsQ0FBWUMsSUFBSSxDQUFDQyxTQUFMLENBQWVKLEdBQWYsQ0FBWixFQUFpQ1QsUUFBakMsQ0FBMEMsUUFBMUMsQ0FBaEM7O0FBRUFKLE9BQU8sQ0FBQ2tCLFlBQVIsR0FBd0JDLE1BQUQsSUFBWUgsSUFBSSxDQUFDSSxLQUFMLENBQVdOLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSSxNQUFaLEVBQW9CLFFBQXBCLEVBQThCZixRQUE5QixDQUF1QyxPQUF2QyxDQUFYLENBQW5DOztBQUVBSixPQUFPLENBQUNxQixVQUFSLEdBQXFCdkIsT0FBTyxDQUFDLGdCQUFELENBQTVCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IHZhbGlkYXRvciA9IHJlcXVpcmUoJ3ZhbGlkYXRvcicpO1xuY29uc3QgeyBfIH0gPSByZXF1aXJlKCdyay11dGlscycpO1xuXG5leHBvcnRzLnRvQm9vbGVhbiA9ICh2YWx1ZSkgPT4gdHlwZW9mIHZhbHVlID09PSAnYm9vbGVhbicgPyB2YWx1ZSA6IHZhbGlkYXRvci50b0Jvb2xlYW4odmFsdWUsIHRydWUpO1xuXG5leHBvcnRzLnRvVGV4dCA9ICh2YWx1ZSkgPT4gdmFsdWUgJiYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycgPyB2YWx1ZS50b1N0cmluZygpIDogdmFsdWUpLnRyaW0oKTtcblxuZXhwb3J0cy50b0ludCA9ICh2YWx1ZSwgcmFkaXgpID0+IF8uaXNJbnRlZ2VyKHZhbHVlKSA/IHZhbHVlIDogcGFyc2VJbnQodmFsdWUsIHJhZGl4KTsgXG5cbmV4cG9ydHMudG9GbG9hdCA9ICh2YWx1ZSkgPT4gXy5pc0Zpbml0ZSh2YWx1ZSkgPyB2YWx1ZSA6IHZhbGlkYXRvci50b0Zsb2F0KHZhbHVlKTsgXG5cbmV4cG9ydHMuanNvblRvQmFzZTY0ID0gKG9iaikgPT4gQnVmZmVyLmZyb20oSlNPTi5zdHJpbmdpZnkob2JqKSkudG9TdHJpbmcoXCJiYXNlNjRcIik7ICAgICAgIFxuXG5leHBvcnRzLmJhc2U2NFRvSnNvbiA9IChiYXNlNjQpID0+IEpTT04ucGFyc2UoQnVmZmVyLmZyb20oYmFzZTY0LCAnYmFzZTY0JykudG9TdHJpbmcoJ2FzY2lpJykpO1xuXG5leHBvcnRzLnRleHRUb0RhdGUgPSByZXF1aXJlKCdkYXRlLWZucy9wYXJzZScpOyJdfQ==