"use strict";

require("source-map-support/register");

const validator = require('validator');

const {
  _
} = require('rk-utils');

exports.toBoolean = value => typeof value === 'boolean' ? value : validator.toBoolean(value, true);

exports.toText = value => value && (typeof value !== 'string' ? value.toString() : value).trim();

exports.toInt = (value, radix) => _.isInteger(value) ? value : parseInt(value, radix);

exports.toFloat = value => _.isFinite(value) ? value : validator.toFloat(value);

exports.jsonToBase64 = obj => Buffer.from(JSON.stringify(obj)).toString("base64");

exports.base64ToJson = base64 => JSON.parse(Buffer.from(base64, 'base64').toString('ascii'));

exports.textToDate = require('date-fns/parse');

exports.toKvTableByProp = (arrayOfObjects, property) => arrayOfObjects.reduce((table, obj) => {
  table[obj[property]] = obj;
  return table;
}, {});

const remapKeys = (arrayOfObjects, mapping) => {
  if (Array.isArray(arrayOfObjects)) return _.map(arrayOfObjects, obj => remapKeys(obj, mapping));
  let newObj = {};

  _.forOwn(arrayOfObjects, (v, k) => {
    let nk = mapping[k];

    if (!nk) {
      newObj[k] = v;
    } else if (Array.isArray(nk)) {
      newObj[nk[0]] = remapKeys(v, nk[1]);
    } else {
      newObj[nk] = v;
    }
  });

  return newObj;
};

exports.remapKeys = remapKeys;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Db252ZXJ0b3JzLmpzIl0sIm5hbWVzIjpbInZhbGlkYXRvciIsInJlcXVpcmUiLCJfIiwiZXhwb3J0cyIsInRvQm9vbGVhbiIsInZhbHVlIiwidG9UZXh0IiwidG9TdHJpbmciLCJ0cmltIiwidG9JbnQiLCJyYWRpeCIsImlzSW50ZWdlciIsInBhcnNlSW50IiwidG9GbG9hdCIsImlzRmluaXRlIiwianNvblRvQmFzZTY0Iiwib2JqIiwiQnVmZmVyIiwiZnJvbSIsIkpTT04iLCJzdHJpbmdpZnkiLCJiYXNlNjRUb0pzb24iLCJiYXNlNjQiLCJwYXJzZSIsInRleHRUb0RhdGUiLCJ0b0t2VGFibGVCeVByb3AiLCJhcnJheU9mT2JqZWN0cyIsInByb3BlcnR5IiwicmVkdWNlIiwidGFibGUiLCJyZW1hcEtleXMiLCJtYXBwaW5nIiwiQXJyYXkiLCJpc0FycmF5IiwibWFwIiwibmV3T2JqIiwiZm9yT3duIiwidiIsImsiLCJuayJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFFQSxNQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLE1BQU07QUFBRUMsRUFBQUE7QUFBRixJQUFRRCxPQUFPLENBQUMsVUFBRCxDQUFyQjs7QUFFQUUsT0FBTyxDQUFDQyxTQUFSLEdBQXFCQyxLQUFELElBQVcsT0FBT0EsS0FBUCxLQUFpQixTQUFqQixHQUE2QkEsS0FBN0IsR0FBcUNMLFNBQVMsQ0FBQ0ksU0FBVixDQUFvQkMsS0FBcEIsRUFBMkIsSUFBM0IsQ0FBcEU7O0FBRUFGLE9BQU8sQ0FBQ0csTUFBUixHQUFrQkQsS0FBRCxJQUFXQSxLQUFLLElBQUksQ0FBQyxPQUFPQSxLQUFQLEtBQWlCLFFBQWpCLEdBQTRCQSxLQUFLLENBQUNFLFFBQU4sRUFBNUIsR0FBK0NGLEtBQWhELEVBQXVERyxJQUF2RCxFQUFyQzs7QUFFQUwsT0FBTyxDQUFDTSxLQUFSLEdBQWdCLENBQUNKLEtBQUQsRUFBUUssS0FBUixLQUFrQlIsQ0FBQyxDQUFDUyxTQUFGLENBQVlOLEtBQVosSUFBcUJBLEtBQXJCLEdBQTZCTyxRQUFRLENBQUNQLEtBQUQsRUFBUUssS0FBUixDQUF2RTs7QUFFQVAsT0FBTyxDQUFDVSxPQUFSLEdBQW1CUixLQUFELElBQVdILENBQUMsQ0FBQ1ksUUFBRixDQUFXVCxLQUFYLElBQW9CQSxLQUFwQixHQUE0QkwsU0FBUyxDQUFDYSxPQUFWLENBQWtCUixLQUFsQixDQUF6RDs7QUFFQUYsT0FBTyxDQUFDWSxZQUFSLEdBQXdCQyxHQUFELElBQVNDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZQyxJQUFJLENBQUNDLFNBQUwsQ0FBZUosR0FBZixDQUFaLEVBQWlDVCxRQUFqQyxDQUEwQyxRQUExQyxDQUFoQzs7QUFFQUosT0FBTyxDQUFDa0IsWUFBUixHQUF3QkMsTUFBRCxJQUFZSCxJQUFJLENBQUNJLEtBQUwsQ0FBV04sTUFBTSxDQUFDQyxJQUFQLENBQVlJLE1BQVosRUFBb0IsUUFBcEIsRUFBOEJmLFFBQTlCLENBQXVDLE9BQXZDLENBQVgsQ0FBbkM7O0FBRUFKLE9BQU8sQ0FBQ3FCLFVBQVIsR0FBcUJ2QixPQUFPLENBQUMsZ0JBQUQsQ0FBNUI7O0FBRUFFLE9BQU8sQ0FBQ3NCLGVBQVIsR0FBMEIsQ0FBQ0MsY0FBRCxFQUFpQkMsUUFBakIsS0FBOEJELGNBQWMsQ0FBQ0UsTUFBZixDQUFzQixDQUFDQyxLQUFELEVBQVFiLEdBQVIsS0FBZ0I7QUFDMUZhLEVBQUFBLEtBQUssQ0FBQ2IsR0FBRyxDQUFDVyxRQUFELENBQUosQ0FBTCxHQUF1QlgsR0FBdkI7QUFDQSxTQUFPYSxLQUFQO0FBQ0gsQ0FIdUQsRUFHckQsRUFIcUQsQ0FBeEQ7O0FBS0EsTUFBTUMsU0FBUyxHQUFHLENBQUNKLGNBQUQsRUFBaUJLLE9BQWpCLEtBQTZCO0FBQzNDLE1BQUlDLEtBQUssQ0FBQ0MsT0FBTixDQUFjUCxjQUFkLENBQUosRUFBbUMsT0FBT3hCLENBQUMsQ0FBQ2dDLEdBQUYsQ0FBTVIsY0FBTixFQUFzQlYsR0FBRyxJQUFJYyxTQUFTLENBQUNkLEdBQUQsRUFBTWUsT0FBTixDQUF0QyxDQUFQO0FBRW5DLE1BQUlJLE1BQU0sR0FBRyxFQUFiOztBQUNDakMsRUFBQUEsQ0FBQyxDQUFDa0MsTUFBRixDQUFTVixjQUFULEVBQXlCLENBQUNXLENBQUQsRUFBSUMsQ0FBSixLQUFVO0FBQ2hDLFFBQUlDLEVBQUUsR0FBR1IsT0FBTyxDQUFDTyxDQUFELENBQWhCOztBQUNBLFFBQUksQ0FBQ0MsRUFBTCxFQUFTO0FBQ0xKLE1BQUFBLE1BQU0sQ0FBQ0csQ0FBRCxDQUFOLEdBQVlELENBQVo7QUFDSCxLQUZELE1BRU8sSUFBSUwsS0FBSyxDQUFDQyxPQUFOLENBQWNNLEVBQWQsQ0FBSixFQUF1QjtBQUMxQkosTUFBQUEsTUFBTSxDQUFDSSxFQUFFLENBQUMsQ0FBRCxDQUFILENBQU4sR0FBZ0JULFNBQVMsQ0FBQ08sQ0FBRCxFQUFJRSxFQUFFLENBQUMsQ0FBRCxDQUFOLENBQXpCO0FBQ0gsS0FGTSxNQUVBO0FBQ0hKLE1BQUFBLE1BQU0sQ0FBQ0ksRUFBRCxDQUFOLEdBQWFGLENBQWI7QUFDSDtBQUNKLEdBVEE7O0FBV0QsU0FBT0YsTUFBUDtBQUNILENBaEJEOztBQWtCQWhDLE9BQU8sQ0FBQzJCLFNBQVIsR0FBb0JBLFNBQXBCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IHZhbGlkYXRvciA9IHJlcXVpcmUoJ3ZhbGlkYXRvcicpO1xuY29uc3QgeyBfIH0gPSByZXF1aXJlKCdyay11dGlscycpO1xuXG5leHBvcnRzLnRvQm9vbGVhbiA9ICh2YWx1ZSkgPT4gdHlwZW9mIHZhbHVlID09PSAnYm9vbGVhbicgPyB2YWx1ZSA6IHZhbGlkYXRvci50b0Jvb2xlYW4odmFsdWUsIHRydWUpO1xuXG5leHBvcnRzLnRvVGV4dCA9ICh2YWx1ZSkgPT4gdmFsdWUgJiYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycgPyB2YWx1ZS50b1N0cmluZygpIDogdmFsdWUpLnRyaW0oKTtcblxuZXhwb3J0cy50b0ludCA9ICh2YWx1ZSwgcmFkaXgpID0+IF8uaXNJbnRlZ2VyKHZhbHVlKSA/IHZhbHVlIDogcGFyc2VJbnQodmFsdWUsIHJhZGl4KTsgXG5cbmV4cG9ydHMudG9GbG9hdCA9ICh2YWx1ZSkgPT4gXy5pc0Zpbml0ZSh2YWx1ZSkgPyB2YWx1ZSA6IHZhbGlkYXRvci50b0Zsb2F0KHZhbHVlKTsgXG5cbmV4cG9ydHMuanNvblRvQmFzZTY0ID0gKG9iaikgPT4gQnVmZmVyLmZyb20oSlNPTi5zdHJpbmdpZnkob2JqKSkudG9TdHJpbmcoXCJiYXNlNjRcIik7ICAgICAgIFxuXG5leHBvcnRzLmJhc2U2NFRvSnNvbiA9IChiYXNlNjQpID0+IEpTT04ucGFyc2UoQnVmZmVyLmZyb20oYmFzZTY0LCAnYmFzZTY0JykudG9TdHJpbmcoJ2FzY2lpJykpO1xuXG5leHBvcnRzLnRleHRUb0RhdGUgPSByZXF1aXJlKCdkYXRlLWZucy9wYXJzZScpO1xuXG5leHBvcnRzLnRvS3ZUYWJsZUJ5UHJvcCA9IChhcnJheU9mT2JqZWN0cywgcHJvcGVydHkpID0+IGFycmF5T2ZPYmplY3RzLnJlZHVjZSgodGFibGUsIG9iaikgPT4ge1xuICAgIHRhYmxlW29ialtwcm9wZXJ0eV1dID0gb2JqO1xuICAgIHJldHVybiB0YWJsZTtcbn0sIHt9KTtcblxuY29uc3QgcmVtYXBLZXlzID0gKGFycmF5T2ZPYmplY3RzLCBtYXBwaW5nKSA9PiB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoYXJyYXlPZk9iamVjdHMpKSByZXR1cm4gXy5tYXAoYXJyYXlPZk9iamVjdHMsIG9iaiA9PiByZW1hcEtleXMob2JqLCBtYXBwaW5nKSk7XG5cbiAgICBsZXQgbmV3T2JqID0ge307XG4gICAgIF8uZm9yT3duKGFycmF5T2ZPYmplY3RzLCAodiwgaykgPT4ge1xuICAgICAgICBsZXQgbmsgPSBtYXBwaW5nW2tdO1xuICAgICAgICBpZiAoIW5rKSB7ICBcbiAgICAgICAgICAgIG5ld09ialtrXSA9IHY7XG4gICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShuaykpIHtcbiAgICAgICAgICAgIG5ld09ialtua1swXV0gPSByZW1hcEtleXModiwgbmtbMV0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbmV3T2JqW25rXSA9IHY7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBuZXdPYmo7XG59O1xuXG5leHBvcnRzLnJlbWFwS2V5cyA9IHJlbWFwS2V5czsiXX0=