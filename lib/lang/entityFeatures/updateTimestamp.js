"use strict";

require("source-map-support/register");

const FEATURE_NAME = 'updateTimestamp';

function initialize(entity, args = []) {
  let typeInfo = {
    name: 'updatedAt',
    type: 'datetime',
    readOnly: true,
    forceUpdate: true,
    optional: true
  };
  let [options] = args;

  if (options) {
    if (typeof options === 'string') {
      options = {
        name: options
      };
    }

    Object.assign(typeInfo, options);
  }

  let fieldName = typeInfo.name;
  entity.addFeature(FEATURE_NAME, {
    field: fieldName
  }).on('afterAddingFields', () => {
    entity.addField(fieldName, typeInfo);
  });
}

module.exports = initialize;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9sYW5nL2VudGl0eUZlYXR1cmVzL3VwZGF0ZVRpbWVzdGFtcC5qcyJdLCJuYW1lcyI6WyJGRUFUVVJFX05BTUUiLCJpbml0aWFsaXplIiwiZW50aXR5IiwiYXJncyIsInR5cGVJbmZvIiwibmFtZSIsInR5cGUiLCJyZWFkT25seSIsImZvcmNlVXBkYXRlIiwib3B0aW9uYWwiLCJvcHRpb25zIiwiT2JqZWN0IiwiYXNzaWduIiwiZmllbGROYW1lIiwiYWRkRmVhdHVyZSIsImZpZWxkIiwib24iLCJhZGRGaWVsZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUEsTUFBTUEsWUFBWSxHQUFHLGlCQUFyQjs7QUFZQSxTQUFTQyxVQUFULENBQW9CQyxNQUFwQixFQUE0QkMsSUFBSSxHQUFHLEVBQW5DLEVBQXVDO0FBQ25DLE1BQUlDLFFBQVEsR0FBRztBQUNYQyxJQUFBQSxJQUFJLEVBQUUsV0FESztBQUVYQyxJQUFBQSxJQUFJLEVBQUUsVUFGSztBQUdYQyxJQUFBQSxRQUFRLEVBQUUsSUFIQztBQUlYQyxJQUFBQSxXQUFXLEVBQUUsSUFKRjtBQUtYQyxJQUFBQSxRQUFRLEVBQUU7QUFMQyxHQUFmO0FBUUEsTUFBSSxDQUFFQyxPQUFGLElBQWNQLElBQWxCOztBQUVBLE1BQUlPLE9BQUosRUFBYTtBQUNULFFBQUksT0FBT0EsT0FBUCxLQUFtQixRQUF2QixFQUFpQztBQUM3QkEsTUFBQUEsT0FBTyxHQUFHO0FBQUVMLFFBQUFBLElBQUksRUFBRUs7QUFBUixPQUFWO0FBQ0g7O0FBRURDLElBQUFBLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjUixRQUFkLEVBQXdCTSxPQUF4QjtBQUNIOztBQUVELE1BQUlHLFNBQVMsR0FBR1QsUUFBUSxDQUFDQyxJQUF6QjtBQUVBSCxFQUFBQSxNQUFNLENBQUNZLFVBQVAsQ0FBa0JkLFlBQWxCLEVBQWdDO0FBQzVCZSxJQUFBQSxLQUFLLEVBQUVGO0FBRHFCLEdBQWhDLEVBRUdHLEVBRkgsQ0FFTSxtQkFGTixFQUUyQixNQUFNO0FBQzdCZCxJQUFBQSxNQUFNLENBQUNlLFFBQVAsQ0FBZ0JKLFNBQWhCLEVBQTJCVCxRQUEzQjtBQUNILEdBSkQ7QUFLSDs7QUFFRGMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCbEIsVUFBakIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuY29uc3QgRkVBVFVSRV9OQU1FID0gJ3VwZGF0ZVRpbWVzdGFtcCc7XG5cbi8qKlxuICogQSBydWxlIHNwZWNpZmllcyB0aGUgY2hhbmdlIG9mIHN0YXRlIHdpbGwgYmUgdHJhY2tlZCBhdXRvbWF0aWNhbGx5LlxuICogQG1vZHVsZSBFbnRpdHlGZWF0dXJlX1VwZGF0ZVRpbWVzdGFtcFxuICovXG5cbi8qKlxuICogSW5pdGlhbGl6ZSB0aGUgZmVhdHVyZVxuICogQHBhcmFtIHtPb2xvbmdFbnRpdHl9IGVudGl0eSAtIEVudGl0eSB0byBhcHBseSB0aGlzIGZlYXR1cmVcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zIC0gRmllbGQgb3B0aW9uc1xuICovXG5mdW5jdGlvbiBpbml0aWFsaXplKGVudGl0eSwgYXJncyA9IFtdKSB7XG4gICAgbGV0IHR5cGVJbmZvID0ge1xuICAgICAgICBuYW1lOiAndXBkYXRlZEF0JyxcbiAgICAgICAgdHlwZTogJ2RhdGV0aW1lJyxcbiAgICAgICAgcmVhZE9ubHk6IHRydWUsXG4gICAgICAgIGZvcmNlVXBkYXRlOiB0cnVlLFxuICAgICAgICBvcHRpb25hbDogdHJ1ZVxuICAgIH07XG5cbiAgICBsZXQgWyBvcHRpb25zIF0gPSBhcmdzO1xuXG4gICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgb3B0aW9ucyA9IHsgbmFtZTogb3B0aW9ucyB9O1xuICAgICAgICB9XG5cbiAgICAgICAgT2JqZWN0LmFzc2lnbih0eXBlSW5mbywgb3B0aW9ucyk7XG4gICAgfVxuXG4gICAgbGV0IGZpZWxkTmFtZSA9IHR5cGVJbmZvLm5hbWU7XG5cbiAgICBlbnRpdHkuYWRkRmVhdHVyZShGRUFUVVJFX05BTUUsIHtcbiAgICAgICAgZmllbGQ6IGZpZWxkTmFtZVxuICAgIH0pLm9uKCdhZnRlckFkZGluZ0ZpZWxkcycsICgpID0+IHtcbiAgICAgICAgZW50aXR5LmFkZEZpZWxkKGZpZWxkTmFtZSwgdHlwZUluZm8pXG4gICAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5pdGlhbGl6ZTsiXX0=