"use strict";

require("source-map-support/register");

const Util = require('rk-utils');

const _ = Util._;
const FEATURE_NAME = 'i18n';

function feature(entity, args = []) {
  let [options] = args;

  if (!options) {
    throw new Error('Missing feature options!');
  }

  if (!_.isPlainObject(options)) {
    throw new Error('Invalid feature options. Plain object expected!');
  }

  if (!options.field) {
    throw new Error('Missing field name in options!');
  }

  if (!options.locales) {
    throw new Error('Missing locale mapping in options!');
  }

  if (!_.isPlainObject(options.locales)) {
    throw new Error('Invalid locale mapping. Plain object expected!');
  }

  entity.addFeature(FEATURE_NAME, options, true).on('afterAddingFields', () => {
    if (!entity.hasField(options.field)) {
      throw new Error('Field "' + options.field + '" does not exist!');
    }

    let fieldInfo = entity.fields[options.field];
    let suffixSet = new Set(Object.values(options.locales));

    for (let suffix of suffixSet) {
      if (suffix === 'default') continue;
      let fieldName = options.field + '_' + suffix;
      entity.addField(fieldName, fieldInfo);
    }
  });
}

module.exports = feature;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9sYW5nL2VudGl0eUZlYXR1cmVzL2kxOG4uanMiXSwibmFtZXMiOlsiVXRpbCIsInJlcXVpcmUiLCJfIiwiRkVBVFVSRV9OQU1FIiwiZmVhdHVyZSIsImVudGl0eSIsImFyZ3MiLCJvcHRpb25zIiwiRXJyb3IiLCJpc1BsYWluT2JqZWN0IiwiZmllbGQiLCJsb2NhbGVzIiwiYWRkRmVhdHVyZSIsIm9uIiwiaGFzRmllbGQiLCJmaWVsZEluZm8iLCJmaWVsZHMiLCJzdWZmaXhTZXQiLCJTZXQiLCJPYmplY3QiLCJ2YWx1ZXMiLCJzdWZmaXgiLCJmaWVsZE5hbWUiLCJhZGRGaWVsZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUFwQjs7QUFDQSxNQUFNQyxDQUFDLEdBQUdGLElBQUksQ0FBQ0UsQ0FBZjtBQUNBLE1BQU1DLFlBQVksR0FBRyxNQUFyQjs7QUFjQSxTQUFTQyxPQUFULENBQWlCQyxNQUFqQixFQUF5QkMsSUFBSSxHQUFHLEVBQWhDLEVBQW9DO0FBQ2hDLE1BQUksQ0FBRUMsT0FBRixJQUFjRCxJQUFsQjs7QUFFQSxNQUFJLENBQUNDLE9BQUwsRUFBYztBQUNWLFVBQU0sSUFBSUMsS0FBSixDQUFVLDBCQUFWLENBQU47QUFDSDs7QUFFRCxNQUFJLENBQUNOLENBQUMsQ0FBQ08sYUFBRixDQUFnQkYsT0FBaEIsQ0FBTCxFQUErQjtBQUMzQixVQUFNLElBQUlDLEtBQUosQ0FBVSxpREFBVixDQUFOO0FBQ0g7O0FBRUQsTUFBSSxDQUFDRCxPQUFPLENBQUNHLEtBQWIsRUFBb0I7QUFDaEIsVUFBTSxJQUFJRixLQUFKLENBQVUsZ0NBQVYsQ0FBTjtBQUNIOztBQUVELE1BQUksQ0FBQ0QsT0FBTyxDQUFDSSxPQUFiLEVBQXNCO0FBQ2xCLFVBQU0sSUFBSUgsS0FBSixDQUFVLG9DQUFWLENBQU47QUFDSDs7QUFFRCxNQUFJLENBQUNOLENBQUMsQ0FBQ08sYUFBRixDQUFnQkYsT0FBTyxDQUFDSSxPQUF4QixDQUFMLEVBQXVDO0FBQ25DLFVBQU0sSUFBSUgsS0FBSixDQUFVLGdEQUFWLENBQU47QUFDSDs7QUFFREgsRUFBQUEsTUFBTSxDQUFDTyxVQUFQLENBQWtCVCxZQUFsQixFQUFnQ0ksT0FBaEMsRUFBeUMsSUFBekMsRUFBK0NNLEVBQS9DLENBQWtELG1CQUFsRCxFQUF1RSxNQUFNO0FBQ3pFLFFBQUksQ0FBQ1IsTUFBTSxDQUFDUyxRQUFQLENBQWdCUCxPQUFPLENBQUNHLEtBQXhCLENBQUwsRUFBcUM7QUFDakMsWUFBTSxJQUFJRixLQUFKLENBQVUsWUFBWUQsT0FBTyxDQUFDRyxLQUFwQixHQUE0QixtQkFBdEMsQ0FBTjtBQUNIOztBQUVELFFBQUlLLFNBQVMsR0FBR1YsTUFBTSxDQUFDVyxNQUFQLENBQWNULE9BQU8sQ0FBQ0csS0FBdEIsQ0FBaEI7QUFDQSxRQUFJTyxTQUFTLEdBQUcsSUFBSUMsR0FBSixDQUFRQyxNQUFNLENBQUNDLE1BQVAsQ0FBY2IsT0FBTyxDQUFDSSxPQUF0QixDQUFSLENBQWhCOztBQUVBLFNBQUssSUFBSVUsTUFBVCxJQUFtQkosU0FBbkIsRUFBOEI7QUFDMUIsVUFBSUksTUFBTSxLQUFLLFNBQWYsRUFBMEI7QUFFMUIsVUFBSUMsU0FBUyxHQUFHZixPQUFPLENBQUNHLEtBQVIsR0FBZ0IsR0FBaEIsR0FBc0JXLE1BQXRDO0FBQ0FoQixNQUFBQSxNQUFNLENBQUNrQixRQUFQLENBQWdCRCxTQUFoQixFQUEyQlAsU0FBM0I7QUFDSDtBQUNKLEdBZEQ7QUFnQkg7O0FBRURTLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnJCLE9BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IFV0aWwgPSByZXF1aXJlKCdyay11dGlscycpO1xuY29uc3QgXyA9IFV0aWwuXztcbmNvbnN0IEZFQVRVUkVfTkFNRSA9ICdpMThuJztcblxuLyoqXG4gKiBBIHJ1bGUgc3BlY2lmaWVzIGludGVybmF0aW9uYWxpemF0aW9uLlxuICogQG1vZHVsZSBFbnRpdHlGZWF0dXJlX0kxOG5cbiAqL1xuXG4vKipcbiAqIEluaXRpYWxpemUgdGhlIGZlYXR1cmVcbiAqIEBwYXJhbSB7T29sb25nRW50aXR5fSBlbnRpdHkgLSBFbnRpdHkgdG8gYXBwbHkgdGhpcyBmZWF0dXJlXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9ucyAtIFRyYWNraW5nIGZpZWxkIG9wdGlvbnNcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBvcHRpb25zLmZpZWxkIC0gU3RhdGUgZmllbGQgdG8gYXBwbHkgdGhpcyBmZWF0dXJlXG4gKiBAcHJvcGVydHkge29iamVjdH0gW29wdGlvbnMubG9jYWxlc10gLSBTcGVjaWZ5IHRoZSBsb2NhbGUgbWFwcGluZyBydWxlXG4gKi9cbmZ1bmN0aW9uIGZlYXR1cmUoZW50aXR5LCBhcmdzID0gW10pIHtcbiAgICBsZXQgWyBvcHRpb25zIF0gPSBhcmdzO1xuICAgIFxuICAgIGlmICghb3B0aW9ucykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgZmVhdHVyZSBvcHRpb25zIScpO1xuICAgIH1cblxuICAgIGlmICghXy5pc1BsYWluT2JqZWN0KG9wdGlvbnMpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBmZWF0dXJlIG9wdGlvbnMuIFBsYWluIG9iamVjdCBleHBlY3RlZCEnKTtcbiAgICB9XG5cbiAgICBpZiAoIW9wdGlvbnMuZmllbGQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNaXNzaW5nIGZpZWxkIG5hbWUgaW4gb3B0aW9ucyEnKTtcbiAgICB9XG5cbiAgICBpZiAoIW9wdGlvbnMubG9jYWxlcykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgbG9jYWxlIG1hcHBpbmcgaW4gb3B0aW9ucyEnKTtcbiAgICB9XG5cbiAgICBpZiAoIV8uaXNQbGFpbk9iamVjdChvcHRpb25zLmxvY2FsZXMpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBsb2NhbGUgbWFwcGluZy4gUGxhaW4gb2JqZWN0IGV4cGVjdGVkIScpO1xuICAgIH1cblxuICAgIGVudGl0eS5hZGRGZWF0dXJlKEZFQVRVUkVfTkFNRSwgb3B0aW9ucywgdHJ1ZSkub24oJ2FmdGVyQWRkaW5nRmllbGRzJywgKCkgPT4ge1xuICAgICAgICBpZiAoIWVudGl0eS5oYXNGaWVsZChvcHRpb25zLmZpZWxkKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGaWVsZCBcIicgKyBvcHRpb25zLmZpZWxkICsgJ1wiIGRvZXMgbm90IGV4aXN0IScpO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IGZpZWxkSW5mbyA9IGVudGl0eS5maWVsZHNbb3B0aW9ucy5maWVsZF07XG4gICAgICAgIGxldCBzdWZmaXhTZXQgPSBuZXcgU2V0KE9iamVjdC52YWx1ZXMob3B0aW9ucy5sb2NhbGVzKSk7XG5cbiAgICAgICAgZm9yIChsZXQgc3VmZml4IG9mIHN1ZmZpeFNldCkge1xuICAgICAgICAgICAgaWYgKHN1ZmZpeCA9PT0gJ2RlZmF1bHQnKSBjb250aW51ZTtcblxuICAgICAgICAgICAgbGV0IGZpZWxkTmFtZSA9IG9wdGlvbnMuZmllbGQgKyAnXycgKyBzdWZmaXg7XG4gICAgICAgICAgICBlbnRpdHkuYWRkRmllbGQoZmllbGROYW1lLCBmaWVsZEluZm8pO1xuICAgICAgICB9XG4gICAgfSk7XG5cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmZWF0dXJlOyJdfQ==