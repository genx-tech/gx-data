{"version":3,"sources":["../src/Activators.js"],"names":["_","require","ApplicationError","Generators","module","exports","datetimeAdd","model","context","startTime","duration","plus","isEqual","value1","value2","triggerUpdate","value","condition","defaultAs","generator","name","infoI18nOpts","concat","sep","strs","join","sum","args","reduce","v","multiply","multiplier","multiplicand","populate","assoc","options","parts","split","selectedField","pop","remoteAssoc","localAssoc","shift","interAssoc","length","latest","undefined","assocValue","isNil","meta","assocMeta","associations","list","remoteEntity","populated","useCache","db","entity","cached_","key","connOptions","findOptions","$query","$associations","ensureTransaction_","findOne_","currentAssoc","nextAssoc","Array","isArray","Error"],"mappings":"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","sourcesContent":["const { _ } = require('@genx/july');\nconst { ApplicationError } = require('./utils/Errors');\nconst Generators = require('./Generators');\n\nmodule.exports = {\n    datetimeAdd: function (model, context, startTime, duration) {\n        return startTime.plus(duration);\n    },\n\n    isEqual: function (model, context, value1, value2) {\n        return value1 === value2;\n    },\n\n    triggerUpdate: function (model, context, value, condition) {\n        return condition ? value : null;\n    },\n\n    defaultAs: function (model, context, value) {\n        return value;\n    },\n\n    generator: function (model, context, name, ...infoI18nOpts) {\n        return Generators[name](...infoI18nOpts);\n    },\n\n    concat: (model, context, sep = '', ...strs) => strs.join(sep),\n\n    sum: (model, context, ...args) => args.reduce((sum, v) => (sum += v), 0),\n\n    multiply: (model, context, multiplier, multiplicand) =>\n        multiplier * multiplicand,\n\n    populate: async (model, context, assoc, options) => {\n        const parts = assoc.split('.');\n\n        const selectedField = parts.pop();\n        const remoteAssoc = parts.join('.');\n        const localAssoc = parts.shift();\n        let interAssoc;\n\n        if (parts.length > 0) {\n            interAssoc = parts.join('.');\n        }\n\n        if (!(localAssoc in context.latest)) {\n            return undefined;\n        }\n\n        const assocValue = context.latest[localAssoc];\n        if (_.isNil(assocValue)) {\n            throw new ApplicationError(\n                `The value of referenced association \"${localAssoc}\" of entity \"${model.meta.name}\" should not be null.`\n            );\n        }\n\n        const assocMeta = model.meta.associations[localAssoc];\n        if (!assocMeta) {\n            throw new ApplicationError(\n                `\"${localAssoc}\" is not an association field of entity \"${model.meta.name}\".`\n            );\n        }\n\n        if (assocMeta.list) {\n            throw new ApplicationError(\n                `\"${localAssoc}\" entity \"${model.meta.name}\" is a list-style association which is not supported by the built-in populate Activators.`\n            );\n        }\n\n        // local cache in context, shared by other fields if any\n        let remoteEntity = context.populated && context.populated[remoteAssoc];\n        if (!remoteEntity) {\n            if (options && options.useCache) {\n                remoteEntity = (\n                    await model.db\n                        .model(assocMeta.entity)\n                        .cached_(\n                            assocMeta.key,\n                            interAssoc ? [interAssoc] : null,\n                            context.connOptions\n                        )\n                )[assocValue];\n            } else {\n                const findOptions = { $query: { [assocMeta.key]: assocValue } };\n\n                if (interAssoc) {\n                    findOptions.$associations = [interAssoc];\n                }\n\n                await model.ensureTransaction_(context);\n\n                remoteEntity = await model.db\n                    .model(assocMeta.entity)\n                    .findOne_(findOptions, context.connOptions);\n            }\n\n            if (!remoteEntity) {\n                throw new ApplicationError(\n                    `Unable to find the \"${assocMeta.entity}\" with [${assocMeta.key}=${assocValue}]. Entity: ${model.meta.name}`\n                );\n            }\n\n            context.populated || (context.populated = {});\n            context.populated[localAssoc] = remoteEntity;\n\n            let currentAssoc = localAssoc;\n            while (parts.length > 0) {\n                const nextAssoc = parts.shift();\n                remoteEntity = remoteEntity[':' + nextAssoc];\n                if (Array.isArray(remoteEntity)) {\n                    throw new Error('Remote entity should not be an array.');\n                }\n\n                currentAssoc = currentAssoc + '.' + nextAssoc;\n                context.populated[currentAssoc] = remoteEntity;\n            }\n        }\n\n        if (!(selectedField in remoteEntity)) {\n            throw new ApplicationError(\n                `\"${selectedField}\" is not a field of remote association \"${remoteAssoc}\" of entity \"${model.meta.name}\".`\n            );\n        }\n\n        return remoteEntity[selectedField];\n    },\n};\n"],"file":"Activators.js"}