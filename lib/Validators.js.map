{"version":3,"sources":["../src/Validators.js"],"names":["_","require","tryRequire","isNothing","ValidationError","validator","Types","module","exports","pick","RE_PHONE","isPhone","value","test","min","minValue","max","maxValue","gt","lt","maxLength","length","notNull","notNullIf","condition","validate","obj","Query","query","validateAny","sanitize","NIL","Symbol","validateObjectMember","raw","fieldName","fieldInfo","i18n","prefix","optional","default","comment","type","validateObjectBySchema","schema","latest","forOwn","Array","isArray","find","fieldInfoOption","validated","hasError","skipTypeCast","error"],"mappings":"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","sourcesContent":["const { _ } = require('@genx/july');\nconst { tryRequire } = require('@genx/sys');\nconst { isNothing } = require('./utils/lang');\nconst { ValidationError } = require('./utils/Errors');\nconst validator = require('validator');\nconst Types = require('./types');\n\nmodule.exports = _.pick(validator, [\n    'equals',\n    'contains',\n    'matches',\n    'isEmail',\n    'isURL',\n    'isMACAddress',\n    'isIP',\n    'isFQDN',\n    'isBoolean',\n    'isAlpha',\n    'isAlphanumeric',\n    'isNumeric',\n    'isPort',\n    'isLowercase',\n    'isUppercase',\n    'isAscii',\n    'isFullWidth',\n    'isHalfWidth',\n    'isVariableWidth',\n    'isMultibyte',\n    'isSurrogatePair',\n    'isInt',\n    'isFloat',\n    'isDecimal',\n    'isHexadecimal',\n    'isDivisibleBy',\n    'isHexColor',\n    'isISRC',\n    'isMD5',\n    'isHash',\n    'isJSON',\n    'isEmpty',\n    'isLength',\n    'isByteLength',\n    'isUUID',\n    'isMongoId',\n    'isAfter',\n    'isBefore',\n    'isIn',\n    'isCreditCard',\n    'isISIN',\n    'isISBN',\n    'isISSN',\n    'isMobilePhone',\n    'isPostalCode',\n    'isCurrency',\n    'isISO8601',\n    'isISO31661Alpha2',\n    'isBase64',\n    'isDataURI',\n    'isMimeType',\n    'isLatLong',\n]);\n\nconst RE_PHONE = /^((\\+|00)\\d+)?(\\(\\d+\\))?((\\ |-)?\\d+)*$/;\n\nmodule.exports.isPhone = function (value) {\n    return RE_PHONE.test(value);\n};\n\nmodule.exports.min = function (value, minValue) {\n    return value >= minValue;\n};\n\nmodule.exports.max = function (value, maxValue) {\n    return value <= maxValue;\n};\n\nmodule.exports.gt = function (value, minValue) {\n    return value > minValue;\n};\n\nmodule.exports.lt = function (value, maxValue) {\n    return value < maxValue;\n};\n\nmodule.exports.maxLength = function (value, maxLength) {\n    return value.length <= maxLength;\n};\n\nmodule.exports.notNull = function (value) {\n    return !isNothing(value);\n};\n\nmodule.exports.notNullIf = function (value, condition) {\n    return !condition || !isNothing(value);\n};\n\n/**\n * Validate an obj with condition like mongo-style query\n * @param {*} obj\n * @param {array|object} condition\n * @returns {boolean}\n */\nfunction validate(obj, condition) {\n    const { Query } = tryRequire('mingo');\n    let query = new Query(condition);\n\n    // test if an object matches query\n    return query.test(obj);\n}\n\nmodule.exports.validate = validate;\n\nmodule.exports.validateAny = Types.sanitize;\n\nconst NIL = Symbol('nil');\n\nfunction validateObjectMember(raw, fieldName, fieldInfo, i18n, prefix) {\n    if (fieldName in raw) {\n        let value = raw[fieldName];\n\n        //sanitize first\n        if (isNothing(value)) {\n            if (!fieldInfo.optional && isNothing(fieldInfo.default)) {\n                throw new ValidationError(\n                    `Value of property \"${\n                        prefix ? prefix + '.' : ''\n                    }${fieldName}${\n                        fieldInfo.comment ? ' - ' + fieldInfo.comment : ''\n                    }\" cannot be null`\n                );\n            }\n\n            return fieldInfo.default ?? null;\n        }\n\n        if (fieldInfo.type) {\n            return Types.sanitize(\n                value,\n                fieldInfo,\n                i18n,\n                (prefix ? prefix + '.' : '') + fieldName\n            );\n        }\n\n        return value;\n    }\n\n    if (!fieldInfo.optional) {\n        throw new ValidationError(\n            `Missing required property \"${\n                prefix ? prefix + '.' : ''\n            }${fieldName}${fieldInfo.comment ? ' - ' + fieldInfo.comment : ''}\"`\n        );\n    }\n\n    if ('default' in fieldInfo) {\n        return fieldInfo.default;\n    }\n\n    return NIL;\n}\n\nfunction validateObjectBySchema(raw, schema, i18n, prefix) {\n    let latest = {};\n\n    if (typeof raw !== 'object') {\n        throw new ValidationError('The value is not an object.', {\n            raw,\n            prefix,\n        });\n    }\n\n    _.forOwn(schema, (fieldInfo, fieldName) => {\n        if (Array.isArray(fieldInfo)) {\n            if (\n                !fieldInfo.find((fieldInfoOption) => {\n                    let validated;\n                    let hasError = false;\n\n                    try {\n                        validated = validateObjectMember(\n                            raw,\n                            fieldName,\n                            { ...fieldInfoOption, skipTypeCast: true },\n                            i18n,\n                            prefix\n                        );\n                    } catch (error) {\n                        hasError = true;\n                        validated = NIL;\n                    }\n\n                    if (validated !== NIL) {\n                        latest[fieldName] = validated;\n                    }\n\n                    return !hasError;\n                })\n            ) {\n                throw new ValidationError(`Invalid \"${fieldName}\" value.`, {\n                    raw,\n                    prefix,\n                });\n            }\n        } else {\n            const validated = validateObjectMember(\n                raw,\n                fieldName,\n                fieldInfo,\n                i18n,\n                prefix\n            );\n            if (validated !== NIL) {\n                latest[fieldName] = validated;\n            }\n        }\n    });\n\n    return latest;\n}\n\nmodule.exports.validateObjectBySchema = validateObjectBySchema;\n"],"file":"Validators.js"}