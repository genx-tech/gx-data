{"version":3,"sources":["../../src/auto/hyperid.js"],"names":["tryRequire","require","instances","module","exports","info","i18n","options","hyperid","index","fixedLength","urlSafe","generator","uid","prefix"],"mappings":";;;;AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAiBC,OAAO,CAAC,WAAD,CAA9B;;AAEA,MAAMC,SAAS,GAAG,CAAE,IAAF,EAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB,CAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,OAAtB,EAA+B;AAC5C,QAAMC,OAAO,GAAGR,UAAU,CAAC,SAAD,CAA1B;AAEA,MAAIS,KAAK,GAAGJ,IAAI,IAAIA,IAAI,CAACK,WAAb,GAA2B,CAA3B,GAA+B,CAA3C;AACAD,EAAAA,KAAK,IAAKF,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAACI,OAA5B,GAAuC,CAAvC,GAA2C,CAApD;AAEA,MAAIC,SAAS,GAAGV,SAAS,CAACO,KAAD,CAAzB;;AAEA,MAAIG,SAAS,IAAI,IAAjB,EAAuB;AACnB,YAAQH,KAAR;AACI,WAAK,CAAL;AACIG,QAAAA,SAAS,GAAGJ,OAAO,CAAC;AAAEG,UAAAA,OAAO,EAAE;AAAX,SAAD,CAAnB;AACA;;AAEJ,WAAK,CAAL;AACIC,QAAAA,SAAS,GAAGJ,OAAO,CAAC;AAAEG,UAAAA,OAAO,EAAE,IAAX;AAAiBD,UAAAA,WAAW,EAAE;AAA9B,SAAD,CAAnB;AACA;;AAEJ,WAAK,CAAL;AACIE,QAAAA,SAAS,GAAGJ,OAAO,EAAnB;AACA;;AAEJ,WAAK,CAAL;AACII,QAAAA,SAAS,GAAGJ,OAAO,CAAC;AAAEE,UAAAA,WAAW,EAAE;AAAf,SAAD,CAAnB;AACA;AAfR;;AAkBAR,IAAAA,SAAS,CAACO,KAAD,CAAT,GAAmBG,SAAnB;AACH;;AAED,MAAIC,GAAG,GAAGD,SAAS,EAAnB;;AACA,MAAIL,OAAJ,YAAIA,OAAO,CAAEO,MAAb,EAAqB;AACjBD,IAAAA,GAAG,GAAGN,OAAO,CAACO,MAAR,GAAiBD,GAAvB;AACH;;AAED,SAAOA,GAAP;AACH,CApCD","sourcesContent":["const { tryRequire } = require('@genx/sys');\n\nconst instances = [ null, null, null, null ];\n\nmodule.exports = function (info, i18n, options) {\n    const hyperid = tryRequire('hyperid');\n\n    let index = info && info.fixedLength ? 1 : 0;\n    index += (options == null || options.urlSafe) ? 0 : 2;\n\n    let generator = instances[index];\n\n    if (generator == null) {\n        switch (index) {\n            case 0: \n                generator = hyperid({ urlSafe: true });\n                break;\n\n            case 1:\n                generator = hyperid({ urlSafe: true, fixedLength: true });\n                break;\n\n            case 2:\n                generator = hyperid();\n                break; \n\n            case 3:\n                generator = hyperid({ fixedLength: true });\n                break; \n        }\n\n        instances[index] = generator;\n    }\n\n    let uid = generator();\n    if (options?.prefix) {\n        uid = options.prefix + uid;\n    }\n\n    return uid;\n};\n"],"file":"hyperid.js"}